
#include <glbinding/Binding.h>

#include <glbinding/gl/bitfield.h>
#include <glbinding/gl/boolean.h>
#include <glbinding/gl/enum.h>
#include <glbinding/gl/values.h>

#include <glbinding/glbinding.h>


using namespace gl; // ToDo: multiple APIs?

namespace glbinding 
{

// instanciate all templates
template class Function<const gl::GLubyte *, gl::GLenum, gl::GLuint>;
template class Function<const gl::GLubyte *, gl::GLenum>;
template class Function<gl::GLbitfield, gl::GLfixed *, gl::GLint *>;
template class Function<gl::GLboolean, gl::GLenum, gl::GLuint>;
template class Function<gl::GLboolean, gl::GLenum>;
template class Function<gl::GLboolean, gl::GLint, const gl::GLchar *>;
template class Function<gl::GLboolean, gl::GLsizei, const gl::GLuint *, gl::GLboolean *>;
template class Function<gl::GLboolean, gl::GLsync>;
template class Function<gl::GLboolean, gl::GLuint, gl::GLenum>;
template class Function<gl::GLboolean, gl::GLuint, gl::GLfloat, gl::GLfloat>;
template class Function<gl::GLboolean, gl::GLuint, gl::GLsizei, gl::GLsizei, gl::GLfloat, gl::GLfloat *, gl::GLfloat *, gl::GLfloat *, gl::GLfloat *>;
template class Function<gl::GLboolean, gl::GLuint, gl::GLuint, gl::GLfloat, gl::GLfloat>;
template class Function<gl::GLboolean, gl::GLuint64>;
template class Function<gl::GLboolean, gl::GLuint>;
template class Function<gl::GLboolean, gl::GLvdpauSurfaceNV>;
template class Function<gl::GLenum, gl::GLenum, const void *, gl::PathFontStyle, gl::GLuint, gl::GLfloat, gl::GLuint_array_2>;
template class Function<gl::GLenum, gl::GLenum, gl::GLuint, gl::GLenum>;
template class Function<gl::GLenum, gl::GLenum>;
template class Function<gl::GLenum, gl::GLsync, gl::SyncObjectMask, gl::GLuint64>;
template class Function<gl::GLenum, gl::GLuint, gl::GLenum, const void *, gl::PathFontStyle, gl::GLuint, gl::GLsizei, gl::GLuint, gl::GLfloat>;
template class Function<gl::GLenum, gl::GLuint, gl::GLenum, gl::GLsizeiptr, const void *, gl::GLsizei, gl::GLuint, gl::GLsizei, gl::GLuint, gl::GLfloat>;
template class Function<gl::GLenum, gl::GLuint, gl::GLenum>;
template class Function<gl::GLenum, gl::GLuint, gl::GLuint *, gl::GLuint64EXT *>;
template class Function<gl::GLenum>;
template class Function<gl::GLfloat, gl::GLuint, gl::GLsizei, gl::GLsizei>;
template class Function<gl::GLhandleARB, gl::GLenum>;
template class Function<gl::GLhandleARB>;
template class Function<gl::GLint, gl::GLenum>;
template class Function<gl::GLint, gl::GLhandleARB, const gl::GLcharARB *>;
template class Function<gl::GLint, gl::GLint *>;
template class Function<gl::GLint, gl::GLuint *>;
template class Function<gl::GLint, gl::GLuint, const gl::GLchar *>;
template class Function<gl::GLint, gl::GLuint, gl::GLenum, const gl::GLchar *>;
template class Function<gl::GLint, gl::GLuint, gl::GLint>;
template class Function<gl::GLint>;
template class Function<gl::GLintptr, gl::GLuint, gl::GLint>;
template class Function<gl::GLsync, gl::GLenum, gl::GLintptr, gl::UnusedMask>;
template class Function<gl::GLsync, gl::GLenum, gl::UnusedMask>;
template class Function<gl::GLsync, gl::_cl_context *, gl::_cl_event *, gl::UnusedMask>;
template class Function<gl::GLuint, gl::GLenum, const gl::GLchar *>;
template class Function<gl::GLuint, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLuint>;
template class Function<gl::GLuint, gl::GLenum, gl::GLenum, gl::GLenum>;
template class Function<gl::GLuint, gl::GLenum, gl::GLenum>;
template class Function<gl::GLuint, gl::GLenum, gl::GLsizei, const gl::GLchar *const*>;
template class Function<gl::GLuint, gl::GLenum>;
template class Function<gl::GLuint, gl::GLsizei, const void *, gl::GLenum>;
template class Function<gl::GLuint, gl::GLsizei>;
template class Function<gl::GLuint, gl::GLuint, const gl::GLchar *>;
template class Function<gl::GLuint, gl::GLuint, gl::GLenum, const gl::GLchar *>;
template class Function<gl::GLuint, gl::GLuint, gl::GLsizei, gl::GLenum *, gl::GLenum *, gl::GLuint *, gl::GLenum *, gl::GLsizei *, gl::GLchar *>;
template class Function<gl::GLuint, gl::GLuint, gl::GLsizei, gl::GLenum *, gl::GLuint *, gl::GLuint *, gl::GLsizei *, gl::GLchar *>;
template class Function<gl::GLuint, gl::GLuint>;
template class Function<gl::GLuint64, gl::GLuint, gl::GLint, gl::GLboolean, gl::GLint, gl::GLenum>;
template class Function<gl::GLuint64, gl::GLuint, gl::GLuint>;
template class Function<gl::GLuint64, gl::GLuint>;
template class Function<gl::GLuint>;
template class Function<gl::GLvdpauSurfaceNV, const void *, gl::GLenum, gl::GLsizei, const gl::GLuint *>;
template class Function<void *, gl::GLenum, gl::GLenum>;
template class Function<void *, gl::GLenum, gl::GLintptr, gl::GLsizeiptr, gl::BufferAccessMask>;
template class Function<void *, gl::GLuint, gl::GLenum>;
template class Function<void *, gl::GLuint, gl::GLint, gl::MapBufferUsageMask, gl::GLint *, gl::GLenum *>;
template class Function<void *, gl::GLuint, gl::GLintptr, gl::GLsizeiptr, gl::BufferAccessMask>;
template class Function<void *, gl::GLuint>;
template class Function<void, const gl::GLboolean *>;
template class Function<void, const gl::GLbyte *>;
template class Function<void, const gl::GLdouble *, const gl::GLdouble *>;
template class Function<void, const gl::GLdouble *>;
template class Function<void, const gl::GLenum *, const gl::GLint *, const gl::GLsizei *, gl::GLsizei, gl::GLint>;
template class Function<void, const gl::GLenum *, const gl::GLsizei *, gl::GLenum, const void *const*, gl::GLsizei, gl::GLint>;
template class Function<void, const gl::GLfixed *, const gl::GLfixed *>;
template class Function<void, const gl::GLfixed *>;
template class Function<void, const gl::GLfloat *, const gl::GLfloat *, const gl::GLfloat *, const gl::GLfloat *>;
template class Function<void, const gl::GLfloat *, const gl::GLfloat *, const gl::GLfloat *>;
template class Function<void, const gl::GLfloat *, const gl::GLfloat *>;
template class Function<void, const gl::GLfloat *, const gl::GLubyte *, const gl::GLfloat *>;
template class Function<void, const gl::GLfloat *>;
template class Function<void, const gl::GLhalfNV *>;
template class Function<void, const gl::GLint *, const gl::GLint *>;
template class Function<void, const gl::GLint *>;
template class Function<void, const gl::GLshort *, const gl::GLshort *>;
template class Function<void, const gl::GLshort *>;
template class Function<void, const gl::GLubyte *, const gl::GLfloat *>;
template class Function<void, const gl::GLubyte *>;
template class Function<void, const gl::GLuint *, const gl::GLfloat *, const gl::GLfloat *, const gl::GLfloat *, const gl::GLfloat *>;
template class Function<void, const gl::GLuint *, const gl::GLfloat *, const gl::GLfloat *, const gl::GLfloat *>;
template class Function<void, const gl::GLuint *, const gl::GLfloat *, const gl::GLfloat *>;
template class Function<void, const gl::GLuint *, const gl::GLfloat *>;
template class Function<void, const gl::GLuint *, const gl::GLubyte *, const gl::GLfloat *>;
template class Function<void, const gl::GLuint *>;
template class Function<void, const gl::GLushort *>;
template class Function<void, const void *, const void *>;
template class Function<void, const void *, gl::GLsizei, const gl::GLchar *>;
template class Function<void, const void *, gl::GLsizei, gl::GLsizei *, gl::GLchar *>;
template class Function<void, gl::AttribMask>;
template class Function<void, gl::ClearBufferMask>;
template class Function<void, gl::ClientAttribMask>;
template class Function<void, gl::FfdMaskSGIX>;
template class Function<void, gl::GLDEBUGPROC, const void *>;
template class Function<void, gl::GLDEBUGPROCAMD, void *>;
template class Function<void, gl::GLDEBUGPROCARB, const void *>;
template class Function<void, gl::GLboolean, gl::GLboolean, gl::GLboolean, gl::GLboolean>;
template class Function<void, gl::GLboolean>;
template class Function<void, gl::GLbyte, gl::GLbyte, gl::GLbyte, gl::GLbyte>;
template class Function<void, gl::GLbyte, gl::GLbyte, gl::GLbyte>;
template class Function<void, gl::GLbyte, gl::GLbyte>;
template class Function<void, gl::GLbyte>;
template class Function<void, gl::GLchar *, gl::GLuint *>;
template class Function<void, gl::GLclampd, gl::GLclampd>;
template class Function<void, gl::GLclampf, gl::GLboolean>;
template class Function<void, gl::GLclampf, gl::GLclampf>;
template class Function<void, gl::GLclampf>;
template class Function<void, gl::GLdouble, gl::GLdouble, gl::GLdouble, gl::GLdouble, gl::GLdouble, gl::GLdouble>;
template class Function<void, gl::GLdouble, gl::GLdouble, gl::GLdouble, gl::GLdouble>;
template class Function<void, gl::GLdouble, gl::GLdouble, gl::GLdouble>;
template class Function<void, gl::GLdouble, gl::GLdouble>;
template class Function<void, gl::GLdouble>;
template class Function<void, gl::GLenum, const gl::GLbyte *>;
template class Function<void, gl::GLenum, const gl::GLdouble *>;
template class Function<void, gl::GLenum, const gl::GLfixed *>;
template class Function<void, gl::GLenum, const gl::GLfloat *>;
template class Function<void, gl::GLenum, const gl::GLhalfNV *>;
template class Function<void, gl::GLenum, const gl::GLint *, const gl::GLsizei *, gl::GLsizei>;
template class Function<void, gl::GLenum, const gl::GLint *>;
template class Function<void, gl::GLenum, const gl::GLshort *>;
template class Function<void, gl::GLenum, const gl::GLsizei *, gl::GLenum, const void *const*, gl::GLsizei, const gl::GLint *>;
template class Function<void, gl::GLenum, const gl::GLsizei *, gl::GLenum, const void *const*, gl::GLsizei>;
template class Function<void, gl::GLenum, const gl::GLuint *>;
template class Function<void, gl::GLenum, const void **>;
template class Function<void, gl::GLenum, const void *, gl::GLsizei, gl::GLsizei, gl::GLint>;
template class Function<void, gl::GLenum, const void *, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLint>;
template class Function<void, gl::GLenum, const void *, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLboolean *>;
template class Function<void, gl::GLenum, gl::GLboolean, gl::GLenum, gl::GLenum, gl::GLsizei, void *>;
template class Function<void, gl::GLenum, gl::GLboolean, gl::GLenum, gl::GLenum, void *>;
template class Function<void, gl::GLenum, gl::GLbyte, gl::GLbyte, gl::GLbyte, gl::GLbyte>;
template class Function<void, gl::GLenum, gl::GLbyte, gl::GLbyte, gl::GLbyte>;
template class Function<void, gl::GLenum, gl::GLbyte, gl::GLbyte>;
template class Function<void, gl::GLenum, gl::GLbyte>;
template class Function<void, gl::GLenum, gl::GLclampf>;
template class Function<void, gl::GLenum, gl::GLdouble *>;
template class Function<void, gl::GLenum, gl::GLdouble, gl::GLdouble, gl::GLdouble, gl::GLdouble, gl::GLdouble, gl::GLdouble>;
template class Function<void, gl::GLenum, gl::GLdouble, gl::GLdouble, gl::GLdouble, gl::GLdouble>;
template class Function<void, gl::GLenum, gl::GLdouble, gl::GLdouble, gl::GLdouble>;
template class Function<void, gl::GLenum, gl::GLdouble, gl::GLdouble, gl::GLint, gl::GLint, const gl::GLdouble *>;
template class Function<void, gl::GLenum, gl::GLdouble, gl::GLdouble, gl::GLint, gl::GLint, gl::GLdouble, gl::GLdouble, gl::GLint, gl::GLint, const gl::GLdouble *>;
template class Function<void, gl::GLenum, gl::GLdouble, gl::GLdouble, gl::GLint, gl::GLint, gl::GLdouble, gl::GLdouble, gl::GLint, gl::GLint, gl::GLdouble, gl::GLdouble, gl::GLint, gl::GLint, const gl::GLdouble *>;
template class Function<void, gl::GLenum, gl::GLdouble, gl::GLdouble>;
template class Function<void, gl::GLenum, gl::GLdouble>;
template class Function<void, gl::GLenum, gl::GLenum, const gl::GLdouble *>;
template class Function<void, gl::GLenum, gl::GLenum, const gl::GLfixed *>;
template class Function<void, gl::GLenum, gl::GLenum, const gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLenum, const gl::GLint *>;
template class Function<void, gl::GLenum, gl::GLenum, const gl::GLuint *>;
template class Function<void, gl::GLenum, gl::GLenum, const void *, gl::GLsizei, gl::GLsizei, gl::GLint>;
template class Function<void, gl::GLenum, gl::GLenum, const void *, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLint>;
template class Function<void, gl::GLenum, gl::GLenum, const void *, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLboolean>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLdouble *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLdouble>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, const gl::GLdouble *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, const gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, const gl::GLint *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, const gl::GLuint *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLdouble *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLdouble>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLboolean, gl::GLboolean, gl::GLboolean>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLenum>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLint *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLenum>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLfloat>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLint *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLint>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLsizei, const gl::GLuint *, gl::GLboolean>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLsizei, gl::GLint *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLsizei, gl::GLint64 *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLsizei, void *, gl::GLsizei, void *, void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLsizei, void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLuint *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLuint, gl::GLint, gl::GLint>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLuint, gl::GLint>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLuint>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, void *, void *, void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum, void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLenum>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLfixed *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLfixed>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLfloat>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint *, gl::GLint *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, const gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLenum, gl::GLenum, void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLenum, gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLenum, gl::GLint *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei, gl::GLint>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLint>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLenum, gl::GLsizei, gl::GLint, gl::GLsizei, const void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLint, gl::GLsizei, const void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLint, gl::GLsizei, const void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLenum, gl::GLsizei, const void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLenum, gl::GLsizei, const void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei, gl::GLenum, gl::GLsizei, const void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei, gl::GLint, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLint, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLint, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, gl::GLuint>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint, void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint64 *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLint>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLintptr, gl::GLintptr, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLintptr, gl::GLintptr, gl::GLsizeiptr>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLintptr, gl::GLsizeiptr, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLsizei, const gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLsizei, const gl::GLuint *, gl::GLboolean>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLsizei, const void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLsizei, gl::GLdouble *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLsizei, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLsizei, gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLsizei, gl::GLint *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLenum, gl::GLenum, const void *, const void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::TextureStorageMaskAMD>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLuint *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLuint, gl::GLenum, gl::GLsizei, const gl::GLchar *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLuint, gl::GLint, gl::GLenum>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLuint, gl::GLint, gl::GLint>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLuint, gl::GLint>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLuint, gl::GLintptr, gl::GLsizeiptr>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLuint, gl::GLsizei, const gl::GLchar *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLuint64EXT *>;
template class Function<void, gl::GLenum, gl::GLenum, gl::GLuint>;
template class Function<void, gl::GLenum, gl::GLenum, void **>;
template class Function<void, gl::GLenum, gl::GLenum, void *>;
template class Function<void, gl::GLenum, gl::GLenum>;
template class Function<void, gl::GLenum, gl::GLfixed *>;
template class Function<void, gl::GLenum, gl::GLfixed, gl::GLfixed, gl::GLfixed, gl::GLfixed>;
template class Function<void, gl::GLenum, gl::GLfixed, gl::GLfixed, gl::GLfixed>;
template class Function<void, gl::GLenum, gl::GLfixed, gl::GLfixed, gl::GLint, gl::GLint, gl::GLfixed, gl::GLfixed, gl::GLint, gl::GLint, gl::GLfixed>;
template class Function<void, gl::GLenum, gl::GLfixed, gl::GLfixed, gl::GLint, gl::GLint, gl::GLfixed>;
template class Function<void, gl::GLenum, gl::GLfixed, gl::GLfixed>;
template class Function<void, gl::GLenum, gl::GLfixed>;
template class Function<void, gl::GLenum, gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLenum, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLenum, gl::GLfloat, gl::GLfloat, gl::GLint, gl::GLint, const gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLfloat, gl::GLfloat, gl::GLint, gl::GLint, gl::GLfloat, gl::GLfloat, gl::GLint, gl::GLint, const gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLfloat, gl::GLfloat, gl::GLint, gl::GLint, gl::GLfloat, gl::GLfloat, gl::GLint, gl::GLint, gl::GLfloat, gl::GLfloat, gl::GLint, gl::GLint, const gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLenum, gl::GLfloat>;
template class Function<void, gl::GLenum, gl::GLhalfNV, gl::GLhalfNV, gl::GLhalfNV, gl::GLhalfNV>;
template class Function<void, gl::GLenum, gl::GLhalfNV, gl::GLhalfNV, gl::GLhalfNV>;
template class Function<void, gl::GLenum, gl::GLhalfNV, gl::GLhalfNV>;
template class Function<void, gl::GLenum, gl::GLhalfNV>;
template class Function<void, gl::GLenum, gl::GLint *>;
template class Function<void, gl::GLenum, gl::GLint, const gl::GLchar *, gl::GLint, const gl::GLchar *>;
template class Function<void, gl::GLenum, gl::GLint, const gl::GLfixed *>;
template class Function<void, gl::GLenum, gl::GLint, const gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLint, const gl::GLint *>;
template class Function<void, gl::GLenum, gl::GLint, const gl::GLuint *>;
template class Function<void, gl::GLenum, gl::GLint, const void **, gl::GLint>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLenum, gl::GLenum, gl::GLsizei, void *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLenum, gl::GLenum, void *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLenum, gl::GLfixed *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLenum, gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLenum, gl::GLint *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei, gl::GLint>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLint>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLenum, gl::GLsizei, const void *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLenum, gl::GLsizei, gl::GLint, gl::GLsizei, const void *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLint, gl::GLsizei, const void *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLint, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLint, gl::GLsizei, const void *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLint, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLenum, gl::GLsizei, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLfixed *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLfloat, gl::GLint>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLboolean>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLenum, gl::GLsizei, const void *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLint>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLenum, gl::GLsizei, const void *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLint, gl::GLint>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei, gl::GLenum, gl::GLsizei, const void *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei, gl::GLint, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLint, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLint, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLint>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLuint>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLsizei, void *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLuint *>;
template class Function<void, gl::GLenum, gl::GLint, gl::GLuint>;
template class Function<void, gl::GLenum, gl::GLint, void *>;
template class Function<void, gl::GLenum, gl::GLint64 *>;
template class Function<void, gl::GLenum, gl::GLint>;
template class Function<void, gl::GLenum, gl::GLintptr, gl::GLintptr, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLintptr, gl::GLsizeiptr, const void *>;
template class Function<void, gl::GLenum, gl::GLintptr, gl::GLsizeiptr, void *>;
template class Function<void, gl::GLenum, gl::GLintptr, gl::GLsizeiptr>;
template class Function<void, gl::GLenum, gl::GLintptrARB, gl::GLsizeiptrARB, const void *>;
template class Function<void, gl::GLenum, gl::GLintptrARB, gl::GLsizeiptrARB, void *>;
template class Function<void, gl::GLenum, gl::GLshort, gl::GLshort, gl::GLshort, gl::GLshort>;
template class Function<void, gl::GLenum, gl::GLshort, gl::GLshort, gl::GLshort>;
template class Function<void, gl::GLenum, gl::GLshort, gl::GLshort>;
template class Function<void, gl::GLenum, gl::GLshort>;
template class Function<void, gl::GLenum, gl::GLsizei, const gl::GLenum *, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLsizei, const gl::GLenum *>;
template class Function<void, gl::GLenum, gl::GLsizei, const gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLsizei, const gl::GLuint *>;
template class Function<void, gl::GLenum, gl::GLsizei, const gl::GLushort *>;
template class Function<void, gl::GLenum, gl::GLsizei, const void **>;
template class Function<void, gl::GLenum, gl::GLsizei, const void *>;
template class Function<void, gl::GLenum, gl::GLsizei, gl::GLenum, const void *, gl::GLint>;
template class Function<void, gl::GLenum, gl::GLsizei, gl::GLenum, const void *, gl::GLsizei, gl::GLint, gl::GLuint>;
template class Function<void, gl::GLenum, gl::GLsizei, gl::GLenum, const void *, gl::GLsizei, gl::GLint>;
template class Function<void, gl::GLenum, gl::GLsizei, gl::GLenum, const void *, gl::GLsizei, gl::GLuint>;
template class Function<void, gl::GLenum, gl::GLsizei, gl::GLenum, const void *, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLsizei, gl::GLenum, const void *, gl::GLuint, gl::GLfloat, gl::GLfloat, gl::GLenum, gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLsizei, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLsizei, gl::GLenum, gl::GLboolean>;
template class Function<void, gl::GLenum, gl::GLsizei, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLboolean>;
template class Function<void, gl::GLenum, gl::GLsizei, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLboolean>;
template class Function<void, gl::GLenum, gl::GLsizei, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLsizei, gl::GLenum, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLsizei, gl::GLenum, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLsizei, gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLsizei, gl::GLint, gl::GLint, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLsizei, gl::GLsizei, const void *>;
template class Function<void, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLenum, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLboolean>;
template class Function<void, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLboolean>;
template class Function<void, gl::GLenum, gl::GLsizei, gl::GLuint *>;
template class Function<void, gl::GLenum, gl::GLsizei, gl::GLushort *>;
template class Function<void, gl::GLenum, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLsizeiptr, const void *, gl::GLenum>;
template class Function<void, gl::GLenum, gl::GLsizeiptr, const void *, gl::MapBufferUsageMask>;
template class Function<void, gl::GLenum, gl::GLsizeiptrARB, const void *, gl::GLenum>;
template class Function<void, gl::GLenum, gl::GLuint *>;
template class Function<void, gl::GLenum, gl::GLuint, const gl::GLdouble *>;
template class Function<void, gl::GLenum, gl::GLuint, const gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLuint, const gl::GLint *>;
template class Function<void, gl::GLenum, gl::GLuint, const gl::GLuint *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLboolean *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLdouble *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLdouble, gl::GLdouble, gl::GLdouble, gl::GLdouble>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLenum, gl::GLdouble *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLenum, gl::GLenum>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLenum, gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLenum, gl::GLint *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLboolean, void *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLint, gl::GLint, gl::GLboolean, const void *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLenum, gl::GLuint>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLint *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLint, gl::GLint, gl::GLint, gl::GLint>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLint64 *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLsizei, const gl::GLchar *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLsizei, const gl::GLdouble *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLsizei, const gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLsizei, const gl::GLint *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLsizei, const gl::GLubyte *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLsizei, const gl::GLuint *, const gl::GLintptr *, const gl::GLsizeiptr *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLsizei, const gl::GLuint *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLsizei, gl::GLsizei *, gl::GLchar *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLuint *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLuint, const gl::GLint *, const gl::GLsizei *, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLuint, gl::GLint, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLuint, gl::GLintptr, gl::GLsizeiptr>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLuint, gl::GLintptr>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLuint, gl::GLsizei, const gl::GLfloat *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLuint, gl::GLsizei, const gl::GLint *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLuint, gl::GLsizei, const gl::GLuint *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLuint, gl::GLsizei, gl::GLenum, const void *, gl::GLint>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLuint, gl::GLsizei, gl::GLenum, const void *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLuint, gl::GLsizei>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLuint64EXT *>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLuint64EXT, gl::GLsizeiptr>;
template class Function<void, gl::GLenum, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLenum, gl::GLuint, void **>;
template class Function<void, gl::GLenum, gl::GLuint64EXT *>;
template class Function<void, gl::GLenum, gl::GLuint>;
template class Function<void, gl::GLenum, gl::GLushort *>;
template class Function<void, gl::GLenum, void **>;
template class Function<void, gl::GLenum>;
template class Function<void, gl::GLfixed, gl::GLboolean>;
template class Function<void, gl::GLfixed, gl::GLfixed, gl::GLfixed, gl::GLfixed, gl::GLfixed, gl::GLfixed>;
template class Function<void, gl::GLfixed, gl::GLfixed, gl::GLfixed, gl::GLfixed>;
template class Function<void, gl::GLfixed, gl::GLfixed, gl::GLfixed>;
template class Function<void, gl::GLfixed, gl::GLfixed>;
template class Function<void, gl::GLfixed>;
template class Function<void, gl::GLfloat *>;
template class Function<void, gl::GLfloat, gl::GLboolean>;
template class Function<void, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLfloat, gl::GLfloat, gl::GLubyte, gl::GLubyte, gl::GLubyte, gl::GLubyte, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLfloat>;
template class Function<void, gl::GLhalfNV, gl::GLhalfNV, gl::GLhalfNV, gl::GLhalfNV>;
template class Function<void, gl::GLhalfNV, gl::GLhalfNV, gl::GLhalfNV>;
template class Function<void, gl::GLhalfNV, gl::GLhalfNV>;
template class Function<void, gl::GLhalfNV>;
template class Function<void, gl::GLhandleARB, gl::GLenum, gl::GLfloat *>;
template class Function<void, gl::GLhandleARB, gl::GLenum, gl::GLint *>;
template class Function<void, gl::GLhandleARB, gl::GLhandleARB>;
template class Function<void, gl::GLhandleARB, gl::GLint, gl::GLfloat *>;
template class Function<void, gl::GLhandleARB, gl::GLint, gl::GLint *>;
template class Function<void, gl::GLhandleARB, gl::GLsizei, const gl::GLcharARB **, const gl::GLint *>;
template class Function<void, gl::GLhandleARB, gl::GLsizei, gl::GLsizei *, gl::GLcharARB *>;
template class Function<void, gl::GLhandleARB, gl::GLsizei, gl::GLsizei *, gl::GLhandleARB *>;
template class Function<void, gl::GLhandleARB, gl::GLuint, const gl::GLcharARB *>;
template class Function<void, gl::GLhandleARB, gl::GLuint, gl::GLsizei, gl::GLsizei *, gl::GLint *, gl::GLenum *, gl::GLcharARB *>;
template class Function<void, gl::GLhandleARB>;
template class Function<void, gl::GLint *, gl::GLsizei, gl::GLuint *>;
template class Function<void, gl::GLint, const gl::GLboolean **, gl::GLint>;
template class Function<void, gl::GLint, const gl::GLbyte *>;
template class Function<void, gl::GLint, const gl::GLchar *, gl::GLenum, gl::GLint *>;
template class Function<void, gl::GLint, const gl::GLchar *, gl::GLsizei, gl::GLint *, gl::GLchar *>;
template class Function<void, gl::GLint, const gl::GLchar *>;
template class Function<void, gl::GLint, const gl::GLdouble *>;
template class Function<void, gl::GLint, const gl::GLfloat *>;
template class Function<void, gl::GLint, const gl::GLint *>;
template class Function<void, gl::GLint, const gl::GLshort *>;
template class Function<void, gl::GLint, const gl::GLubyte *>;
template class Function<void, gl::GLint, const gl::GLuint *>;
template class Function<void, gl::GLint, const gl::GLushort *>;
template class Function<void, gl::GLint, gl::GLdouble, gl::GLdouble, gl::GLdouble, gl::GLdouble>;
template class Function<void, gl::GLint, gl::GLdouble, gl::GLdouble, gl::GLdouble>;
template class Function<void, gl::GLint, gl::GLdouble, gl::GLdouble, gl::GLint, gl::GLdouble, gl::GLdouble>;
template class Function<void, gl::GLint, gl::GLdouble, gl::GLdouble>;
template class Function<void, gl::GLint, gl::GLdouble>;
template class Function<void, gl::GLint, gl::GLenum, const void **>;
template class Function<void, gl::GLint, gl::GLenum, gl::GLint, const void **, gl::GLint>;
template class Function<void, gl::GLint, gl::GLenum, gl::GLsizei, const void *>;
template class Function<void, gl::GLint, gl::GLenum, gl::GLsizei, gl::GLsizei, const void *>;
template class Function<void, gl::GLint, gl::GLenum, gl::GLsizei>;
template class Function<void, gl::GLint, gl::GLfixed, gl::GLfixed, gl::GLfixed, gl::GLfixed>;
template class Function<void, gl::GLint, gl::GLfixed, gl::GLfixed>;
template class Function<void, gl::GLint, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLint, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLint, gl::GLfloat, gl::GLfloat, gl::GLint, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLint, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLint, gl::GLfloat>;
template class Function<void, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::ClearBufferMask, gl::GLenum>;
template class Function<void, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLint>;
template class Function<void, gl::GLint, gl::GLint, gl::GLint, gl::GLint>;
template class Function<void, gl::GLint, gl::GLint, gl::GLint>;
template class Function<void, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLenum, gl::GLenum, gl::GLsizei, void *>;
template class Function<void, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLenum, gl::GLenum, void *>;
template class Function<void, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLenum>;
template class Function<void, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLint, gl::GLint64EXT, gl::GLint64EXT, gl::GLint64EXT, gl::GLint64EXT>;
template class Function<void, gl::GLint, gl::GLint64EXT, gl::GLint64EXT, gl::GLint64EXT>;
template class Function<void, gl::GLint, gl::GLint64EXT, gl::GLint64EXT>;
template class Function<void, gl::GLint, gl::GLint64EXT>;
template class Function<void, gl::GLint, gl::GLint>;
template class Function<void, gl::GLint, gl::GLsizei, const gl::GLdouble *>;
template class Function<void, gl::GLint, gl::GLsizei, const gl::GLfloat *>;
template class Function<void, gl::GLint, gl::GLsizei, const gl::GLint *>;
template class Function<void, gl::GLint, gl::GLsizei, const gl::GLint64EXT *>;
template class Function<void, gl::GLint, gl::GLsizei, const gl::GLuint *>;
template class Function<void, gl::GLint, gl::GLsizei, const gl::GLuint64 *>;
template class Function<void, gl::GLint, gl::GLsizei, const gl::GLuint64EXT *>;
template class Function<void, gl::GLint, gl::GLsizei, gl::GLboolean, const gl::GLdouble *>;
template class Function<void, gl::GLint, gl::GLsizei, gl::GLboolean, const gl::GLfloat *>;
template class Function<void, gl::GLint, gl::GLsizei>;
template class Function<void, gl::GLint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLint, gl::GLuint, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLint, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLint, gl::GLuint64>;
template class Function<void, gl::GLint, gl::GLuint64EXT, gl::GLuint64EXT, gl::GLuint64EXT, gl::GLuint64EXT>;
template class Function<void, gl::GLint, gl::GLuint64EXT, gl::GLuint64EXT, gl::GLuint64EXT>;
template class Function<void, gl::GLint, gl::GLuint64EXT, gl::GLuint64EXT>;
template class Function<void, gl::GLint, gl::GLuint64EXT>;
template class Function<void, gl::GLint, gl::GLuint>;
template class Function<void, gl::GLint, gl::GLushort>;
template class Function<void, gl::GLint>;
template class Function<void, gl::GLintptr>;
template class Function<void, gl::GLshort, gl::GLshort, gl::GLshort, gl::GLshort>;
template class Function<void, gl::GLshort, gl::GLshort, gl::GLshort>;
template class Function<void, gl::GLshort, gl::GLshort>;
template class Function<void, gl::GLshort>;
template class Function<void, gl::GLsizei, const gl::GLchar *>;
template class Function<void, gl::GLsizei, const gl::GLenum *>;
template class Function<void, gl::GLsizei, const gl::GLfloat *>;
template class Function<void, gl::GLsizei, const gl::GLint *, gl::GLenum>;
template class Function<void, gl::GLsizei, const gl::GLint *, gl::GLsizei, const gl::GLint *, gl::GLenum>;
template class Function<void, gl::GLsizei, const gl::GLuint *, const gl::GLclampf *>;
template class Function<void, gl::GLsizei, const gl::GLuint *, const gl::GLfixed *>;
template class Function<void, gl::GLsizei, const gl::GLuint *, const gl::GLfloat *>;
template class Function<void, gl::GLsizei, const gl::GLuint *, gl::GLenum, const void *, gl::GLsizei>;
template class Function<void, gl::GLsizei, const gl::GLuint *>;
template class Function<void, gl::GLsizei, const gl::GLvdpauSurfaceNV *>;
template class Function<void, gl::GLsizei, const void *>;
template class Function<void, gl::GLsizei, gl::GLenum, const gl::GLfixed *>;
template class Function<void, gl::GLsizei, gl::GLenum, const void *, gl::GLuint, gl::GLenum, gl::GLenum, const gl::GLfloat *>;
template class Function<void, gl::GLsizei, gl::GLenum, const void *, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLenum, const gl::GLfloat *>;
template class Function<void, gl::GLsizei, gl::GLenum, const void *, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLenum, gl::GLenum, const gl::GLfloat *>;
template class Function<void, gl::GLsizei, gl::GLenum, const void *, gl::GLuint, gl::GLint, gl::GLuint, gl::GLenum, const gl::GLfloat *>;
template class Function<void, gl::GLsizei, gl::GLenum, const void *, gl::GLuint, gl::GLint, gl::GLuint, gl::GLenum, gl::GLenum, const gl::GLfloat *>;
template class Function<void, gl::GLsizei, gl::GLenum, const void *>;
template class Function<void, gl::GLsizei, gl::GLenum, gl::GLfloat *>;
template class Function<void, gl::GLsizei, gl::GLint *>;
template class Function<void, gl::GLsizei, gl::GLsizei, const gl::GLboolean *>;
template class Function<void, gl::GLsizei, gl::GLsizei, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLsizei, gl::GLsizei, gl::GLfixed, gl::GLfixed, gl::GLfixed, gl::GLfixed, const gl::GLubyte *>;
template class Function<void, gl::GLsizei, gl::GLsizei, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, const gl::GLubyte *>;
template class Function<void, gl::GLsizei, gl::GLubyte *>;
template class Function<void, gl::GLsizei, gl::GLuint *>;
template class Function<void, gl::GLsizei, gl::GLuint>;
template class Function<void, gl::GLsizei, void *>;
template class Function<void, gl::GLsizei>;
template class Function<void, gl::GLsync, gl::GLenum, gl::GLsizei, gl::GLsizei *, gl::GLint *>;
template class Function<void, gl::GLsync, gl::UnusedMask, gl::GLuint64>;
template class Function<void, gl::GLsync>;
template class Function<void, gl::GLubyte *>;
template class Function<void, gl::GLubyte, gl::GLubyte, gl::GLubyte, gl::GLubyte, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLubyte, gl::GLubyte, gl::GLubyte, gl::GLubyte, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLubyte, gl::GLubyte, gl::GLubyte, gl::GLubyte>;
template class Function<void, gl::GLubyte, gl::GLubyte, gl::GLubyte>;
template class Function<void, gl::GLubyte>;
template class Function<void, gl::GLuint *>;
template class Function<void, gl::GLuint, const gl::GLbyte *>;
template class Function<void, gl::GLuint, const gl::GLchar *>;
template class Function<void, gl::GLuint, const gl::GLdouble *>;
template class Function<void, gl::GLuint, const gl::GLfloat *>;
template class Function<void, gl::GLuint, const gl::GLhalfNV *>;
template class Function<void, gl::GLuint, const gl::GLint *>;
template class Function<void, gl::GLuint, const gl::GLint64EXT *>;
template class Function<void, gl::GLuint, const gl::GLshort *>;
template class Function<void, gl::GLuint, const gl::GLubyte *>;
template class Function<void, gl::GLuint, const gl::GLuint *>;
template class Function<void, gl::GLuint, const gl::GLuint64EXT *>;
template class Function<void, gl::GLuint, const gl::GLushort *>;
template class Function<void, gl::GLuint, gl::GLbitfield>;
template class Function<void, gl::GLuint, gl::GLboolean, gl::GLboolean, gl::GLboolean, gl::GLboolean>;
template class Function<void, gl::GLuint, gl::GLboolean, gl::GLuint, gl::GLint, gl::GLuint *>;
template class Function<void, gl::GLuint, gl::GLdouble, gl::GLdouble, gl::GLdouble, gl::GLdouble>;
template class Function<void, gl::GLuint, gl::GLdouble, gl::GLdouble, gl::GLdouble>;
template class Function<void, gl::GLuint, gl::GLdouble, gl::GLdouble>;
template class Function<void, gl::GLuint, gl::GLdouble>;
template class Function<void, gl::GLuint, gl::GLenum, const gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLenum, const gl::GLint *>;
template class Function<void, gl::GLuint, gl::GLenum, const gl::GLuint *>;
template class Function<void, gl::GLuint, gl::GLenum, const void *, gl::GLsizei>;
template class Function<void, gl::GLuint, gl::GLenum, const void *, gl::PathFontStyle, gl::GLsizei, gl::GLenum, const void *, gl::GLenum, gl::GLuint, gl::GLfloat>;
template class Function<void, gl::GLuint, gl::GLenum, const void *, gl::PathFontStyle, gl::GLuint, gl::GLsizei, gl::GLenum, gl::GLuint, gl::GLfloat>;
template class Function<void, gl::GLuint, gl::GLenum, const void *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLboolean *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLboolean, const gl::GLuint *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLboolean, gl::GLuint>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLdouble *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLenum, const gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLenum, const gl::GLint *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLenum, const gl::GLuint *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLenum>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLenum, gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLenum, gl::GLfloat>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLenum, gl::GLint *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLenum, gl::GLint>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLenum, gl::GLsizei, const void *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::TextureStorageMaskAMD>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLenum, gl::GLuint *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLenum, gl::GLuint, gl::GLint, gl::GLint>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLenum, gl::GLuint, gl::GLint>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLenum, gl::GLuint, gl::GLintptr, gl::GLsizeiptr>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLenum, gl::GLuint>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLenum, void *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLenum>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLfloat>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint, gl::GLenum, gl::GLenum, void *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint, gl::GLenum, gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint, gl::GLenum, gl::GLint *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei, gl::GLint>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLint>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint, gl::GLenum, gl::GLsizei, gl::GLint, gl::GLsizei, const void *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLint, gl::GLsizei, const void *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLint, gl::GLsizei, const void *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLenum, gl::GLsizei, const void *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLuint, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLenum, gl::GLsizei, const void *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei, gl::GLenum, gl::GLsizei, const void *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei, gl::GLint, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLint, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLint, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint, void *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint64 *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint64EXT *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLint>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLsizei, const void *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLsizei, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLboolean>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLsizei, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLboolean>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLsizei, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLsizei, gl::GLenum, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLsizei, gl::GLenum, gl::GLsizei>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLsizei, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLboolean>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLsizei, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLboolean>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLboolean>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLsizei, gl::GLsizei, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLboolean>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLsizei, gl::GLuint *, gl::GLint *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLsizei, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLsizeiptr, gl::GLsizeiptr, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLubyte *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, const gl::GLdouble *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, const gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, const gl::GLint *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, const gl::GLuint *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, const void *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLdouble *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLdouble, gl::GLdouble, gl::GLdouble, gl::GLdouble>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLenum, gl::GLint *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLenum>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLint *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLint, gl::GLenum>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLint, gl::GLint, gl::GLint, gl::GLint>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLint, gl::GLint>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLint>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLsizei, const gl::GLenum *, gl::GLsizei, gl::GLsizei *, gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLsizei, const gl::GLenum *, gl::GLsizei, gl::GLsizei *, gl::GLint *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLsizei, const gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLsizei, const gl::GLint *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLsizei, const gl::GLuint *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLsizei, gl::GLsizei *, gl::GLchar *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLuint *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint64 *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint64EXT *>;
template class Function<void, gl::GLuint, gl::GLenum, gl::GLuint>;
template class Function<void, gl::GLuint, gl::GLenum, void **>;
template class Function<void, gl::GLuint, gl::GLenum>;
template class Function<void, gl::GLuint, gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLuint, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLuint, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLuint, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLuint, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLuint, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLuint, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLuint, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLuint, gl::GLfloat>;
template class Function<void, gl::GLuint, gl::GLhalfNV, gl::GLhalfNV, gl::GLhalfNV, gl::GLhalfNV>;
template class Function<void, gl::GLuint, gl::GLhalfNV, gl::GLhalfNV, gl::GLhalfNV>;
template class Function<void, gl::GLuint, gl::GLhalfNV, gl::GLhalfNV>;
template class Function<void, gl::GLuint, gl::GLhalfNV>;
template class Function<void, gl::GLuint, gl::GLint *, gl::GLint *, gl::GLsizei, gl::GLuint *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLdouble *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLdouble, gl::GLdouble, gl::GLdouble, gl::GLdouble>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLdouble, gl::GLdouble, gl::GLdouble>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLdouble, gl::GLdouble>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLdouble>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLenum, gl::GLboolean, gl::GLsizei, const void *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLenum, gl::GLboolean, gl::GLsizei, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLenum, gl::GLboolean, gl::GLsizei>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLenum, gl::GLboolean, gl::GLuint>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLenum, gl::GLint, const gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLenum, gl::GLsizei, const void *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLenum, gl::GLsizei>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLenum, gl::GLuint>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLfloat>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLint *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLint>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLboolean>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLsizei, gl::GLenum, gl::GLenum, const void *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLint, gl::GLint, gl::GLint>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLint, gl::GLint>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLint, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLint64EXT *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLint64EXT, gl::GLint64EXT, gl::GLint64EXT, gl::GLint64EXT>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLint64EXT, gl::GLint64EXT, gl::GLint64EXT>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLint64EXT, gl::GLint64EXT>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLint64EXT>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLint>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLsizei, const gl::GLdouble *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLsizei, const gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLsizei, const gl::GLint *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLsizei, const gl::GLint64EXT *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLsizei, const gl::GLuint *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLsizei, const gl::GLuint64 *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLsizei, const gl::GLuint64EXT *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLsizei, gl::GLboolean, const gl::GLdouble *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLsizei, gl::GLboolean, const gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLsizei, gl::GLdouble *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLsizei, gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLsizei, gl::GLint *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLsizei, gl::GLuint *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLuint *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLuint, gl::GLenum>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLuint, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLuint64>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLuint64EXT *>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLuint64EXT, gl::GLuint64EXT, gl::GLuint64EXT, gl::GLuint64EXT>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLuint64EXT, gl::GLuint64EXT, gl::GLuint64EXT>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLuint64EXT, gl::GLuint64EXT>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLuint64EXT>;
template class Function<void, gl::GLuint, gl::GLint, gl::GLuint>;
template class Function<void, gl::GLuint, gl::GLint64EXT, gl::GLint64EXT, gl::GLint64EXT, gl::GLint64EXT>;
template class Function<void, gl::GLuint, gl::GLint64EXT, gl::GLint64EXT, gl::GLint64EXT>;
template class Function<void, gl::GLuint, gl::GLint64EXT, gl::GLint64EXT>;
template class Function<void, gl::GLuint, gl::GLint64EXT>;
template class Function<void, gl::GLuint, gl::GLint>;
template class Function<void, gl::GLuint, gl::GLintptr, gl::GLsizeiptr, const void *>;
template class Function<void, gl::GLuint, gl::GLintptr, gl::GLsizeiptr, void *>;
template class Function<void, gl::GLuint, gl::GLintptr, gl::GLsizeiptr>;
template class Function<void, gl::GLuint, gl::GLshort, gl::GLshort, gl::GLshort, gl::GLshort>;
template class Function<void, gl::GLuint, gl::GLshort, gl::GLshort, gl::GLshort>;
template class Function<void, gl::GLuint, gl::GLshort, gl::GLshort>;
template class Function<void, gl::GLuint, gl::GLshort>;
template class Function<void, gl::GLuint, gl::GLsizei, const gl::GLchar *const*, const gl::GLint *>;
template class Function<void, gl::GLuint, gl::GLsizei, const gl::GLchar *const*, gl::GLenum>;
template class Function<void, gl::GLuint, gl::GLsizei, const gl::GLchar *const*, gl::GLuint *>;
template class Function<void, gl::GLuint, gl::GLsizei, const gl::GLdouble *>;
template class Function<void, gl::GLuint, gl::GLsizei, const gl::GLenum *>;
template class Function<void, gl::GLuint, gl::GLsizei, const gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLsizei, const gl::GLhalfNV *>;
template class Function<void, gl::GLuint, gl::GLsizei, const gl::GLint *, gl::GLenum>;
template class Function<void, gl::GLuint, gl::GLsizei, const gl::GLint *>;
template class Function<void, gl::GLuint, gl::GLsizei, const gl::GLshort *>;
template class Function<void, gl::GLuint, gl::GLsizei, const gl::GLubyte *, const gl::GLdouble *>;
template class Function<void, gl::GLuint, gl::GLsizei, const gl::GLubyte *, const gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLsizei, const gl::GLubyte *, gl::GLdouble *>;
template class Function<void, gl::GLuint, gl::GLsizei, const gl::GLubyte *, gl::GLdouble, gl::GLdouble, gl::GLdouble, gl::GLdouble>;
template class Function<void, gl::GLuint, gl::GLsizei, const gl::GLubyte *, gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLsizei, const gl::GLubyte *, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLuint, gl::GLsizei, const gl::GLubyte *, gl::GLsizei, gl::GLenum, const void *>;
template class Function<void, gl::GLuint, gl::GLsizei, const gl::GLubyte *>;
template class Function<void, gl::GLuint, gl::GLsizei, const gl::GLuint *, const gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLsizei, const gl::GLuint *, const gl::GLintptr *, const gl::GLsizei *>;
template class Function<void, gl::GLuint, gl::GLsizei, const gl::GLuint *, gl::GLenum, gl::GLint *>;
template class Function<void, gl::GLuint, gl::GLsizei, const gl::GLuint *>;
template class Function<void, gl::GLuint, gl::GLsizei, gl::GLenum, const void *>;
template class Function<void, gl::GLuint, gl::GLsizei, gl::GLenum, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLuint, gl::GLsizei, gl::GLsizei *, gl::GLchar *>;
template class Function<void, gl::GLuint, gl::GLsizei, gl::GLsizei *, gl::GLenum *, void *>;
template class Function<void, gl::GLuint, gl::GLsizei, gl::GLsizei *, gl::GLuint *>;
template class Function<void, gl::GLuint, gl::GLsizei, gl::GLsizei, gl::GLenum, const void *>;
template class Function<void, gl::GLuint, gl::GLsizei, gl::GLsizei, gl::GLenum, gl::GLsizei, gl::GLsizei>;
template class Function<void, gl::GLuint, gl::GLsizei, gl::GLsizei, gl::GLsizei, const gl::GLubyte *, gl::GLsizei, gl::GLenum, const void *>;
template class Function<void, gl::GLuint, gl::GLsizei>;
template class Function<void, gl::GLuint, gl::GLsizeiptr, const void *, gl::GLenum>;
template class Function<void, gl::GLuint, gl::GLsizeiptr, const void *, gl::MapBufferUsageMask>;
template class Function<void, gl::GLuint, gl::GLubyte *>;
template class Function<void, gl::GLuint, gl::GLubyte, gl::GLubyte, gl::GLubyte, gl::GLubyte, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLuint, gl::GLubyte, gl::GLubyte, gl::GLubyte, gl::GLubyte>;
template class Function<void, gl::GLuint, gl::GLuint *>;
template class Function<void, gl::GLuint, gl::GLuint, const gl::GLchar *>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLchar *, gl::GLuint *, gl::GLuint *, gl::GLuint *, gl::GLuint *>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLdouble, gl::GLdouble, gl::GLint, gl::GLint, const gl::GLdouble *>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLdouble, gl::GLdouble, gl::GLint, gl::GLint, gl::GLdouble, gl::GLdouble, gl::GLint, gl::GLint, const gl::GLdouble *>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLenum, const gl::GLdouble *>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLenum, const gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLenum, const gl::GLint *>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLenum, gl::GLdouble *>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLenum, gl::GLenum, gl::GLenum, gl::GLenum>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLenum, gl::GLenum, gl::GLuint>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLenum, gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLenum, gl::GLint *>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLenum, gl::GLint, gl::GLenum, gl::GLsizei, gl::GLintptr>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLenum, gl::GLintptrARB>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLenum, gl::GLsizei, gl::GLintptr>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLenum, void **>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLenum, void *>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLenum>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat, gl::GLfloat>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLfloat, gl::GLfloat, gl::GLint, gl::GLint, const gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLfloat, gl::GLfloat, gl::GLint, gl::GLint, gl::GLfloat, gl::GLfloat, gl::GLint, gl::GLint, const gl::GLfloat *>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLint *>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLint, gl::GLboolean, gl::GLint, gl::GLenum, gl::GLenum>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLint, gl::GLboolean, gl::GLint, gl::GLenum, gl::GLint>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLint, gl::GLenum, gl::GLboolean, gl::GLuint>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLint, gl::GLenum, gl::GLsizei, gl::GLintptr>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLint, gl::GLenum, gl::GLuint>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLintptr, gl::GLintptr, gl::GLsizeiptr>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLintptr, gl::GLsizei>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLsizei, const void *, gl::GLenum>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLsizei, gl::GLintptr>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLsizei, gl::GLsizei *, gl::GLchar *>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLsizei, gl::GLsizei *, gl::GLint *, gl::GLenum *, gl::GLchar *>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLsizei, gl::GLsizei *, gl::GLsizei *, gl::GLenum *, gl::GLchar *>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLsizei, gl::GLvoid *, gl::GLuint *>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLuint, const gl::GLchar *>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLchar *, gl::GLuint, gl::GLchar *, gl::GLuint *, gl::GLuint *, gl::GLuint *, gl::GLuint *, gl::GLuint64 *>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLfloat>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLint, gl::GLenum, gl::GLboolean, gl::GLsizei, gl::GLintptr>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLint, gl::GLenum, gl::GLsizei, gl::GLintptr>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLintptr, gl::GLsizei>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLuint, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLuint, gl::GLuint64EXT, gl::GLuint, gl::GLuint, gl::GLenum, gl::GLenum, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLenum, gl::GLuint>;
template class Function<void, gl::GLuint, gl::GLuint64EXT, gl::GLuint, gl::GLuint, gl::GLenum, gl::GLenum, gl::GLuint, gl::GLuint, gl::GLenum, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLuint, gl::GLuint64EXT, gl::GLuint64EXT, gl::GLuint64EXT, gl::GLuint64EXT>;
template class Function<void, gl::GLuint, gl::GLuint64EXT, gl::GLuint64EXT, gl::GLuint64EXT>;
template class Function<void, gl::GLuint, gl::GLuint64EXT, gl::GLuint64EXT>;
template class Function<void, gl::GLuint, gl::GLuint64EXT>;
template class Function<void, gl::GLuint, gl::GLuint>;
template class Function<void, gl::GLuint, gl::UseProgramStageMask, gl::GLuint>;
template class Function<void, gl::GLuint64, gl::GLenum>;
template class Function<void, gl::GLuint64>;
template class Function<void, gl::GLuint>;
template class Function<void, gl::GLushort, gl::GLushort, gl::GLushort, gl::GLushort>;
template class Function<void, gl::GLushort, gl::GLushort, gl::GLushort>;
template class Function<void, gl::GLushort>;
template class Function<void, gl::GLvdpauSurfaceNV, gl::GLenum, gl::GLsizei, gl::GLsizei *, gl::GLint *>;
template class Function<void, gl::GLvdpauSurfaceNV, gl::GLenum>;
template class Function<void, gl::GLvdpauSurfaceNV>;
template class Function<void, gl::MemoryBarrierMask>;
template class Function<void, gl::PathRenderingMaskNV, gl::GLsizei, gl::GLenum, const void *, gl::GLuint, gl::GLsizei, gl::GLfloat *>;
template class Function<void, gl::PathRenderingMaskNV, gl::GLuint, gl::GLsizei, gl::GLsizei, gl::GLfloat *>;
template class Function<void>;


Binding & Binding::current()
{
	return currentBinding();
}

Binding::iterator Binding::begin()
{
	return iterator(glAccum);
}

Binding::iterator Binding::end()
{
	return iterator(glWriteMaskEXT);
}

Binding::const_iterator Binding::begin() const
{
	return const_iterator(glAccum);
}

Binding::const_iterator Binding::end() const
{
	return const_iterator(glWriteMaskEXT);
}

size_t Binding::size() const
{
	return 2651;
}

Binding::Binding()
{
    glAccum = new Function<void, GLenum, GLfloat>("glAccum");
    glAccumxOES = new Function<void, GLenum, GLfixed>("glAccumxOES");
    glActiveProgramEXT = new Function<void, GLuint>("glActiveProgramEXT");
    glActiveShaderProgram = new Function<void, GLuint, GLuint>("glActiveShaderProgram");
    glActiveStencilFaceEXT = new Function<void, GLenum>("glActiveStencilFaceEXT");
    glActiveTexture = new Function<void, GLenum>("glActiveTexture");
    glActiveTextureARB = new Function<void, GLenum>("glActiveTextureARB");
    glActiveVaryingNV = new Function<void, GLuint, const GLchar *>("glActiveVaryingNV");
    glAlphaFragmentOp1ATI = new Function<void, GLenum, GLuint, GLuint, GLuint, GLuint, GLuint>("glAlphaFragmentOp1ATI");
    glAlphaFragmentOp2ATI = new Function<void, GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint>("glAlphaFragmentOp2ATI");
    glAlphaFragmentOp3ATI = new Function<void, GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint>("glAlphaFragmentOp3ATI");
    glAlphaFunc = new Function<void, GLenum, GLfloat>("glAlphaFunc");
    glAlphaFuncxOES = new Function<void, GLenum, GLfixed>("glAlphaFuncxOES");
    glApplyTextureEXT = new Function<void, GLenum>("glApplyTextureEXT");
    glAreProgramsResidentNV = new Function<GLboolean, GLsizei, const GLuint *, GLboolean *>("glAreProgramsResidentNV");
    glAreTexturesResident = new Function<GLboolean, GLsizei, const GLuint *, GLboolean *>("glAreTexturesResident");
    glAreTexturesResidentEXT = new Function<GLboolean, GLsizei, const GLuint *, GLboolean *>("glAreTexturesResidentEXT");
    glArrayElement = new Function<void, GLint>("glArrayElement");
    glArrayElementEXT = new Function<void, GLint>("glArrayElementEXT");
    glArrayObjectATI = new Function<void, GLenum, GLint, GLenum, GLsizei, GLuint, GLuint>("glArrayObjectATI");
    glAsyncMarkerSGIX = new Function<void, GLuint>("glAsyncMarkerSGIX");
    glAttachObjectARB = new Function<void, GLhandleARB, GLhandleARB>("glAttachObjectARB");
    glAttachShader = new Function<void, GLuint, GLuint>("glAttachShader");
    glBegin = new Function<void, GLenum>("glBegin");
    glBeginConditionalRender = new Function<void, GLuint, GLenum>("glBeginConditionalRender");
    glBeginConditionalRenderNV = new Function<void, GLuint, GLenum>("glBeginConditionalRenderNV");
    glBeginConditionalRenderNVX = new Function<void, GLuint>("glBeginConditionalRenderNVX");
    glBeginFragmentShaderATI = new Function<void>("glBeginFragmentShaderATI");
    glBeginOcclusionQueryNV = new Function<void, GLuint>("glBeginOcclusionQueryNV");
    glBeginPerfMonitorAMD = new Function<void, GLuint>("glBeginPerfMonitorAMD");
    glBeginPerfQueryINTEL = new Function<void, GLuint>("glBeginPerfQueryINTEL");
    glBeginQuery = new Function<void, GLenum, GLuint>("glBeginQuery");
    glBeginQueryARB = new Function<void, GLenum, GLuint>("glBeginQueryARB");
    glBeginQueryIndexed = new Function<void, GLenum, GLuint, GLuint>("glBeginQueryIndexed");
    glBeginTransformFeedback = new Function<void, GLenum>("glBeginTransformFeedback");
    glBeginTransformFeedbackEXT = new Function<void, GLenum>("glBeginTransformFeedbackEXT");
    glBeginTransformFeedbackNV = new Function<void, GLenum>("glBeginTransformFeedbackNV");
    glBeginVertexShaderEXT = new Function<void>("glBeginVertexShaderEXT");
    glBeginVideoCaptureNV = new Function<void, GLuint>("glBeginVideoCaptureNV");
    glBindAttribLocation = new Function<void, GLuint, GLuint, const GLchar *>("glBindAttribLocation");
    glBindAttribLocationARB = new Function<void, GLhandleARB, GLuint, const GLcharARB *>("glBindAttribLocationARB");
    glBindBuffer = new Function<void, GLenum, GLuint>("glBindBuffer");
    glBindBufferARB = new Function<void, GLenum, GLuint>("glBindBufferARB");
    glBindBufferBase = new Function<void, GLenum, GLuint, GLuint>("glBindBufferBase");
    glBindBufferBaseEXT = new Function<void, GLenum, GLuint, GLuint>("glBindBufferBaseEXT");
    glBindBufferBaseNV = new Function<void, GLenum, GLuint, GLuint>("glBindBufferBaseNV");
    glBindBufferOffsetEXT = new Function<void, GLenum, GLuint, GLuint, GLintptr>("glBindBufferOffsetEXT");
    glBindBufferOffsetNV = new Function<void, GLenum, GLuint, GLuint, GLintptr>("glBindBufferOffsetNV");
    glBindBufferRange = new Function<void, GLenum, GLuint, GLuint, GLintptr, GLsizeiptr>("glBindBufferRange");
    glBindBufferRangeEXT = new Function<void, GLenum, GLuint, GLuint, GLintptr, GLsizeiptr>("glBindBufferRangeEXT");
    glBindBufferRangeNV = new Function<void, GLenum, GLuint, GLuint, GLintptr, GLsizeiptr>("glBindBufferRangeNV");
    glBindBuffersBase = new Function<void, GLenum, GLuint, GLsizei, const GLuint *>("glBindBuffersBase");
    glBindBuffersRange = new Function<void, GLenum, GLuint, GLsizei, const GLuint *, const GLintptr *, const GLsizeiptr *>("glBindBuffersRange");
    glBindFragDataLocation = new Function<void, GLuint, GLuint, const GLchar *>("glBindFragDataLocation");
    glBindFragDataLocationEXT = new Function<void, GLuint, GLuint, const GLchar *>("glBindFragDataLocationEXT");
    glBindFragDataLocationIndexed = new Function<void, GLuint, GLuint, GLuint, const GLchar *>("glBindFragDataLocationIndexed");
    glBindFragmentShaderATI = new Function<void, GLuint>("glBindFragmentShaderATI");
    glBindFramebuffer = new Function<void, GLenum, GLuint>("glBindFramebuffer");
    glBindFramebufferEXT = new Function<void, GLenum, GLuint>("glBindFramebufferEXT");
    glBindImageTexture = new Function<void, GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLenum>("glBindImageTexture");
    glBindImageTextureEXT = new Function<void, GLuint, GLuint, GLint, GLboolean, GLint, GLenum, GLint>("glBindImageTextureEXT");
    glBindImageTextures = new Function<void, GLuint, GLsizei, const GLuint *>("glBindImageTextures");
    glBindLightParameterEXT = new Function<GLuint, GLenum, GLenum>("glBindLightParameterEXT");
    glBindMaterialParameterEXT = new Function<GLuint, GLenum, GLenum>("glBindMaterialParameterEXT");
    glBindMultiTextureEXT = new Function<void, GLenum, GLenum, GLuint>("glBindMultiTextureEXT");
    glBindParameterEXT = new Function<GLuint, GLenum>("glBindParameterEXT");
    glBindProgramARB = new Function<void, GLenum, GLuint>("glBindProgramARB");
    glBindProgramNV = new Function<void, GLenum, GLuint>("glBindProgramNV");
    glBindProgramPipeline = new Function<void, GLuint>("glBindProgramPipeline");
    glBindRenderbuffer = new Function<void, GLenum, GLuint>("glBindRenderbuffer");
    glBindRenderbufferEXT = new Function<void, GLenum, GLuint>("glBindRenderbufferEXT");
    glBindSampler = new Function<void, GLuint, GLuint>("glBindSampler");
    glBindSamplers = new Function<void, GLuint, GLsizei, const GLuint *>("glBindSamplers");
    glBindTexGenParameterEXT = new Function<GLuint, GLenum, GLenum, GLenum>("glBindTexGenParameterEXT");
    glBindTexture = new Function<void, GLenum, GLuint>("glBindTexture");
    glBindTextureEXT = new Function<void, GLenum, GLuint>("glBindTextureEXT");
    glBindTextureUnitParameterEXT = new Function<GLuint, GLenum, GLenum>("glBindTextureUnitParameterEXT");
    glBindTextures = new Function<void, GLuint, GLsizei, const GLuint *>("glBindTextures");
    glBindTransformFeedback = new Function<void, GLenum, GLuint>("glBindTransformFeedback");
    glBindTransformFeedbackNV = new Function<void, GLenum, GLuint>("glBindTransformFeedbackNV");
    glBindVertexArray = new Function<void, GLuint>("glBindVertexArray");
    glBindVertexArrayAPPLE = new Function<void, GLuint>("glBindVertexArrayAPPLE");
    glBindVertexBuffer = new Function<void, GLuint, GLuint, GLintptr, GLsizei>("glBindVertexBuffer");
    glBindVertexBuffers = new Function<void, GLuint, GLsizei, const GLuint *, const GLintptr *, const GLsizei *>("glBindVertexBuffers");
    glBindVertexShaderEXT = new Function<void, GLuint>("glBindVertexShaderEXT");
    glBindVideoCaptureStreamBufferNV = new Function<void, GLuint, GLuint, GLenum, GLintptrARB>("glBindVideoCaptureStreamBufferNV");
    glBindVideoCaptureStreamTextureNV = new Function<void, GLuint, GLuint, GLenum, GLenum, GLuint>("glBindVideoCaptureStreamTextureNV");
    glBinormal3bEXT = new Function<void, GLbyte, GLbyte, GLbyte>("glBinormal3bEXT");
    glBinormal3bvEXT = new Function<void, const GLbyte *>("glBinormal3bvEXT");
    glBinormal3dEXT = new Function<void, GLdouble, GLdouble, GLdouble>("glBinormal3dEXT");
    glBinormal3dvEXT = new Function<void, const GLdouble *>("glBinormal3dvEXT");
    glBinormal3fEXT = new Function<void, GLfloat, GLfloat, GLfloat>("glBinormal3fEXT");
    glBinormal3fvEXT = new Function<void, const GLfloat *>("glBinormal3fvEXT");
    glBinormal3iEXT = new Function<void, GLint, GLint, GLint>("glBinormal3iEXT");
    glBinormal3ivEXT = new Function<void, const GLint *>("glBinormal3ivEXT");
    glBinormal3sEXT = new Function<void, GLshort, GLshort, GLshort>("glBinormal3sEXT");
    glBinormal3svEXT = new Function<void, const GLshort *>("glBinormal3svEXT");
    glBinormalPointerEXT = new Function<void, GLenum, GLsizei, const void *>("glBinormalPointerEXT");
    glBitmap = new Function<void, GLsizei, GLsizei, GLfloat, GLfloat, GLfloat, GLfloat, const GLubyte *>("glBitmap");
    glBitmapxOES = new Function<void, GLsizei, GLsizei, GLfixed, GLfixed, GLfixed, GLfixed, const GLubyte *>("glBitmapxOES");
    glBlendBarrierNV = new Function<void>("glBlendBarrierNV");
    glBlendColor = new Function<void, GLfloat, GLfloat, GLfloat, GLfloat>("glBlendColor");
    glBlendColorEXT = new Function<void, GLfloat, GLfloat, GLfloat, GLfloat>("glBlendColorEXT");
    glBlendColorxOES = new Function<void, GLfixed, GLfixed, GLfixed, GLfixed>("glBlendColorxOES");
    glBlendEquation = new Function<void, GLenum>("glBlendEquation");
    glBlendEquationEXT = new Function<void, GLenum>("glBlendEquationEXT");
    glBlendEquationIndexedAMD = new Function<void, GLuint, GLenum>("glBlendEquationIndexedAMD");
    glBlendEquationSeparate = new Function<void, GLenum, GLenum>("glBlendEquationSeparate");
    glBlendEquationSeparateEXT = new Function<void, GLenum, GLenum>("glBlendEquationSeparateEXT");
    glBlendEquationSeparateIndexedAMD = new Function<void, GLuint, GLenum, GLenum>("glBlendEquationSeparateIndexedAMD");
    glBlendEquationSeparatei = new Function<void, GLuint, GLenum, GLenum>("glBlendEquationSeparatei");
    glBlendEquationSeparateiARB = new Function<void, GLuint, GLenum, GLenum>("glBlendEquationSeparateiARB");
    glBlendEquationi = new Function<void, GLuint, GLenum>("glBlendEquationi");
    glBlendEquationiARB = new Function<void, GLuint, GLenum>("glBlendEquationiARB");
    glBlendFunc = new Function<void, GLenum, GLenum>("glBlendFunc");
    glBlendFuncIndexedAMD = new Function<void, GLuint, GLenum, GLenum>("glBlendFuncIndexedAMD");
    glBlendFuncSeparate = new Function<void, GLenum, GLenum, GLenum, GLenum>("glBlendFuncSeparate");
    glBlendFuncSeparateEXT = new Function<void, GLenum, GLenum, GLenum, GLenum>("glBlendFuncSeparateEXT");
    glBlendFuncSeparateINGR = new Function<void, GLenum, GLenum, GLenum, GLenum>("glBlendFuncSeparateINGR");
    glBlendFuncSeparateIndexedAMD = new Function<void, GLuint, GLenum, GLenum, GLenum, GLenum>("glBlendFuncSeparateIndexedAMD");
    glBlendFuncSeparatei = new Function<void, GLuint, GLenum, GLenum, GLenum, GLenum>("glBlendFuncSeparatei");
    glBlendFuncSeparateiARB = new Function<void, GLuint, GLenum, GLenum, GLenum, GLenum>("glBlendFuncSeparateiARB");
    glBlendFunci = new Function<void, GLuint, GLenum, GLenum>("glBlendFunci");
    glBlendFunciARB = new Function<void, GLuint, GLenum, GLenum>("glBlendFunciARB");
    glBlendParameteriNV = new Function<void, GLenum, GLint>("glBlendParameteriNV");
    glBlitFramebuffer = new Function<void, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, ClearBufferMask, GLenum>("glBlitFramebuffer");
    glBlitFramebufferEXT = new Function<void, GLint, GLint, GLint, GLint, GLint, GLint, GLint, GLint, ClearBufferMask, GLenum>("glBlitFramebufferEXT");
    glBufferAddressRangeNV = new Function<void, GLenum, GLuint, GLuint64EXT, GLsizeiptr>("glBufferAddressRangeNV");
    glBufferData = new Function<void, GLenum, GLsizeiptr, const void *, GLenum>("glBufferData");
    glBufferDataARB = new Function<void, GLenum, GLsizeiptrARB, const void *, GLenum>("glBufferDataARB");
    glBufferParameteriAPPLE = new Function<void, GLenum, GLenum, GLint>("glBufferParameteriAPPLE");
    glBufferStorage = new Function<void, GLenum, GLsizeiptr, const void *, MapBufferUsageMask>("glBufferStorage");
    glBufferSubData = new Function<void, GLenum, GLintptr, GLsizeiptr, const void *>("glBufferSubData");
    glBufferSubDataARB = new Function<void, GLenum, GLintptrARB, GLsizeiptrARB, const void *>("glBufferSubDataARB");
    glCallList = new Function<void, GLuint>("glCallList");
    glCallLists = new Function<void, GLsizei, GLenum, const void *>("glCallLists");
    glCheckFramebufferStatus = new Function<GLenum, GLenum>("glCheckFramebufferStatus");
    glCheckFramebufferStatusEXT = new Function<GLenum, GLenum>("glCheckFramebufferStatusEXT");
    glCheckNamedFramebufferStatusEXT = new Function<GLenum, GLuint, GLenum>("glCheckNamedFramebufferStatusEXT");
    glClampColor = new Function<void, GLenum, GLenum>("glClampColor");
    glClampColorARB = new Function<void, GLenum, GLenum>("glClampColorARB");
    glClear = new Function<void, ClearBufferMask>("glClear");
    glClearAccum = new Function<void, GLfloat, GLfloat, GLfloat, GLfloat>("glClearAccum");
    glClearAccumxOES = new Function<void, GLfixed, GLfixed, GLfixed, GLfixed>("glClearAccumxOES");
    glClearBufferData = new Function<void, GLenum, GLenum, GLenum, GLenum, const void *>("glClearBufferData");
    glClearBufferSubData = new Function<void, GLenum, GLenum, GLintptr, GLsizeiptr, GLenum, GLenum, const void *>("glClearBufferSubData");
    glClearBufferfi = new Function<void, GLenum, GLint, GLfloat, GLint>("glClearBufferfi");
    glClearBufferfv = new Function<void, GLenum, GLint, const GLfloat *>("glClearBufferfv");
    glClearBufferiv = new Function<void, GLenum, GLint, const GLint *>("glClearBufferiv");
    glClearBufferuiv = new Function<void, GLenum, GLint, const GLuint *>("glClearBufferuiv");
    glClearColor = new Function<void, GLfloat, GLfloat, GLfloat, GLfloat>("glClearColor");
    glClearColorIiEXT = new Function<void, GLint, GLint, GLint, GLint>("glClearColorIiEXT");
    glClearColorIuiEXT = new Function<void, GLuint, GLuint, GLuint, GLuint>("glClearColorIuiEXT");
    glClearColorxOES = new Function<void, GLfixed, GLfixed, GLfixed, GLfixed>("glClearColorxOES");
    glClearDepth = new Function<void, GLdouble>("glClearDepth");
    glClearDepthdNV = new Function<void, GLdouble>("glClearDepthdNV");
    glClearDepthf = new Function<void, GLfloat>("glClearDepthf");
    glClearDepthfOES = new Function<void, GLclampf>("glClearDepthfOES");
    glClearDepthxOES = new Function<void, GLfixed>("glClearDepthxOES");
    glClearIndex = new Function<void, GLfloat>("glClearIndex");
    glClearNamedBufferDataEXT = new Function<void, GLuint, GLenum, GLenum, GLenum, const void *>("glClearNamedBufferDataEXT");
    glClearNamedBufferSubDataEXT = new Function<void, GLuint, GLenum, GLsizeiptr, GLsizeiptr, GLenum, GLenum, const void *>("glClearNamedBufferSubDataEXT");
    glClearStencil = new Function<void, GLint>("glClearStencil");
    glClearTexImage = new Function<void, GLuint, GLint, GLenum, GLenum, const void *>("glClearTexImage");
    glClearTexSubImage = new Function<void, GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, const void *>("glClearTexSubImage");
    glClientActiveTexture = new Function<void, GLenum>("glClientActiveTexture");
    glClientActiveTextureARB = new Function<void, GLenum>("glClientActiveTextureARB");
    glClientActiveVertexStreamATI = new Function<void, GLenum>("glClientActiveVertexStreamATI");
    glClientAttribDefaultEXT = new Function<void, ClientAttribMask>("glClientAttribDefaultEXT");
    glClientWaitSync = new Function<GLenum, GLsync, SyncObjectMask, GLuint64>("glClientWaitSync");
    glClipPlane = new Function<void, GLenum, const GLdouble *>("glClipPlane");
    glClipPlanefOES = new Function<void, GLenum, const GLfloat *>("glClipPlanefOES");
    glClipPlanexOES = new Function<void, GLenum, const GLfixed *>("glClipPlanexOES");
    glColor3b = new Function<void, GLbyte, GLbyte, GLbyte>("glColor3b");
    glColor3bv = new Function<void, const GLbyte *>("glColor3bv");
    glColor3d = new Function<void, GLdouble, GLdouble, GLdouble>("glColor3d");
    glColor3dv = new Function<void, const GLdouble *>("glColor3dv");
    glColor3f = new Function<void, GLfloat, GLfloat, GLfloat>("glColor3f");
    glColor3fVertex3fSUN = new Function<void, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat>("glColor3fVertex3fSUN");
    glColor3fVertex3fvSUN = new Function<void, const GLfloat *, const GLfloat *>("glColor3fVertex3fvSUN");
    glColor3fv = new Function<void, const GLfloat *>("glColor3fv");
    glColor3hNV = new Function<void, GLhalfNV, GLhalfNV, GLhalfNV>("glColor3hNV");
    glColor3hvNV = new Function<void, const GLhalfNV *>("glColor3hvNV");
    glColor3i = new Function<void, GLint, GLint, GLint>("glColor3i");
    glColor3iv = new Function<void, const GLint *>("glColor3iv");
    glColor3s = new Function<void, GLshort, GLshort, GLshort>("glColor3s");
    glColor3sv = new Function<void, const GLshort *>("glColor3sv");
    glColor3ub = new Function<void, GLubyte, GLubyte, GLubyte>("glColor3ub");
    glColor3ubv = new Function<void, const GLubyte *>("glColor3ubv");
    glColor3ui = new Function<void, GLuint, GLuint, GLuint>("glColor3ui");
    glColor3uiv = new Function<void, const GLuint *>("glColor3uiv");
    glColor3us = new Function<void, GLushort, GLushort, GLushort>("glColor3us");
    glColor3usv = new Function<void, const GLushort *>("glColor3usv");
    glColor3xOES = new Function<void, GLfixed, GLfixed, GLfixed>("glColor3xOES");
    glColor3xvOES = new Function<void, const GLfixed *>("glColor3xvOES");
    glColor4b = new Function<void, GLbyte, GLbyte, GLbyte, GLbyte>("glColor4b");
    glColor4bv = new Function<void, const GLbyte *>("glColor4bv");
    glColor4d = new Function<void, GLdouble, GLdouble, GLdouble, GLdouble>("glColor4d");
    glColor4dv = new Function<void, const GLdouble *>("glColor4dv");
    glColor4f = new Function<void, GLfloat, GLfloat, GLfloat, GLfloat>("glColor4f");
    glColor4fNormal3fVertex3fSUN = new Function<void, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat>("glColor4fNormal3fVertex3fSUN");
    glColor4fNormal3fVertex3fvSUN = new Function<void, const GLfloat *, const GLfloat *, const GLfloat *>("glColor4fNormal3fVertex3fvSUN");
    glColor4fv = new Function<void, const GLfloat *>("glColor4fv");
    glColor4hNV = new Function<void, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV>("glColor4hNV");
    glColor4hvNV = new Function<void, const GLhalfNV *>("glColor4hvNV");
    glColor4i = new Function<void, GLint, GLint, GLint, GLint>("glColor4i");
    glColor4iv = new Function<void, const GLint *>("glColor4iv");
    glColor4s = new Function<void, GLshort, GLshort, GLshort, GLshort>("glColor4s");
    glColor4sv = new Function<void, const GLshort *>("glColor4sv");
    glColor4ub = new Function<void, GLubyte, GLubyte, GLubyte, GLubyte>("glColor4ub");
    glColor4ubVertex2fSUN = new Function<void, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat>("glColor4ubVertex2fSUN");
    glColor4ubVertex2fvSUN = new Function<void, const GLubyte *, const GLfloat *>("glColor4ubVertex2fvSUN");
    glColor4ubVertex3fSUN = new Function<void, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat>("glColor4ubVertex3fSUN");
    glColor4ubVertex3fvSUN = new Function<void, const GLubyte *, const GLfloat *>("glColor4ubVertex3fvSUN");
    glColor4ubv = new Function<void, const GLubyte *>("glColor4ubv");
    glColor4ui = new Function<void, GLuint, GLuint, GLuint, GLuint>("glColor4ui");
    glColor4uiv = new Function<void, const GLuint *>("glColor4uiv");
    glColor4us = new Function<void, GLushort, GLushort, GLushort, GLushort>("glColor4us");
    glColor4usv = new Function<void, const GLushort *>("glColor4usv");
    glColor4xOES = new Function<void, GLfixed, GLfixed, GLfixed, GLfixed>("glColor4xOES");
    glColor4xvOES = new Function<void, const GLfixed *>("glColor4xvOES");
    glColorFormatNV = new Function<void, GLint, GLenum, GLsizei>("glColorFormatNV");
    glColorFragmentOp1ATI = new Function<void, GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint>("glColorFragmentOp1ATI");
    glColorFragmentOp2ATI = new Function<void, GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint>("glColorFragmentOp2ATI");
    glColorFragmentOp3ATI = new Function<void, GLenum, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint>("glColorFragmentOp3ATI");
    glColorMask = new Function<void, GLboolean, GLboolean, GLboolean, GLboolean>("glColorMask");
    glColorMaskIndexedEXT = new Function<void, GLuint, GLboolean, GLboolean, GLboolean, GLboolean>("glColorMaskIndexedEXT");
    glColorMaski = new Function<void, GLuint, GLboolean, GLboolean, GLboolean, GLboolean>("glColorMaski");
    glColorMaterial = new Function<void, GLenum, GLenum>("glColorMaterial");
    glColorP3ui = new Function<void, GLenum, GLuint>("glColorP3ui");
    glColorP3uiv = new Function<void, GLenum, const GLuint *>("glColorP3uiv");
    glColorP4ui = new Function<void, GLenum, GLuint>("glColorP4ui");
    glColorP4uiv = new Function<void, GLenum, const GLuint *>("glColorP4uiv");
    glColorPointer = new Function<void, GLint, GLenum, GLsizei, const void *>("glColorPointer");
    glColorPointerEXT = new Function<void, GLint, GLenum, GLsizei, GLsizei, const void *>("glColorPointerEXT");
    glColorPointerListIBM = new Function<void, GLint, GLenum, GLint, const void **, GLint>("glColorPointerListIBM");
    glColorPointervINTEL = new Function<void, GLint, GLenum, const void **>("glColorPointervINTEL");
    glColorSubTable = new Function<void, GLenum, GLsizei, GLsizei, GLenum, GLenum, const void *>("glColorSubTable");
    glColorSubTableEXT = new Function<void, GLenum, GLsizei, GLsizei, GLenum, GLenum, const void *>("glColorSubTableEXT");
    glColorTable = new Function<void, GLenum, GLenum, GLsizei, GLenum, GLenum, const void *>("glColorTable");
    glColorTableEXT = new Function<void, GLenum, GLenum, GLsizei, GLenum, GLenum, const void *>("glColorTableEXT");
    glColorTableParameterfv = new Function<void, GLenum, GLenum, const GLfloat *>("glColorTableParameterfv");
    glColorTableParameterfvSGI = new Function<void, GLenum, GLenum, const GLfloat *>("glColorTableParameterfvSGI");
    glColorTableParameteriv = new Function<void, GLenum, GLenum, const GLint *>("glColorTableParameteriv");
    glColorTableParameterivSGI = new Function<void, GLenum, GLenum, const GLint *>("glColorTableParameterivSGI");
    glColorTableSGI = new Function<void, GLenum, GLenum, GLsizei, GLenum, GLenum, const void *>("glColorTableSGI");
    glCombinerInputNV = new Function<void, GLenum, GLenum, GLenum, GLenum, GLenum, GLenum>("glCombinerInputNV");
    glCombinerOutputNV = new Function<void, GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLenum, GLboolean, GLboolean, GLboolean>("glCombinerOutputNV");
    glCombinerParameterfNV = new Function<void, GLenum, GLfloat>("glCombinerParameterfNV");
    glCombinerParameterfvNV = new Function<void, GLenum, const GLfloat *>("glCombinerParameterfvNV");
    glCombinerParameteriNV = new Function<void, GLenum, GLint>("glCombinerParameteriNV");
    glCombinerParameterivNV = new Function<void, GLenum, const GLint *>("glCombinerParameterivNV");
    glCombinerStageParameterfvNV = new Function<void, GLenum, GLenum, const GLfloat *>("glCombinerStageParameterfvNV");
    glCompileShader = new Function<void, GLuint>("glCompileShader");
    glCompileShaderARB = new Function<void, GLhandleARB>("glCompileShaderARB");
    glCompileShaderIncludeARB = new Function<void, GLuint, GLsizei, const GLchar *const*, const GLint *>("glCompileShaderIncludeARB");
    glCompressedMultiTexImage1DEXT = new Function<void, GLenum, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, const void *>("glCompressedMultiTexImage1DEXT");
    glCompressedMultiTexImage2DEXT = new Function<void, GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const void *>("glCompressedMultiTexImage2DEXT");
    glCompressedMultiTexImage3DEXT = new Function<void, GLenum, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const void *>("glCompressedMultiTexImage3DEXT");
    glCompressedMultiTexSubImage1DEXT = new Function<void, GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, const void *>("glCompressedMultiTexSubImage1DEXT");
    glCompressedMultiTexSubImage2DEXT = new Function<void, GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, const void *>("glCompressedMultiTexSubImage2DEXT");
    glCompressedMultiTexSubImage3DEXT = new Function<void, GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, const void *>("glCompressedMultiTexSubImage3DEXT");
    glCompressedTexImage1D = new Function<void, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, const void *>("glCompressedTexImage1D");
    glCompressedTexImage1DARB = new Function<void, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, const void *>("glCompressedTexImage1DARB");
    glCompressedTexImage2D = new Function<void, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const void *>("glCompressedTexImage2D");
    glCompressedTexImage2DARB = new Function<void, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const void *>("glCompressedTexImage2DARB");
    glCompressedTexImage3D = new Function<void, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const void *>("glCompressedTexImage3D");
    glCompressedTexImage3DARB = new Function<void, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const void *>("glCompressedTexImage3DARB");
    glCompressedTexSubImage1D = new Function<void, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, const void *>("glCompressedTexSubImage1D");
    glCompressedTexSubImage1DARB = new Function<void, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, const void *>("glCompressedTexSubImage1DARB");
    glCompressedTexSubImage2D = new Function<void, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, const void *>("glCompressedTexSubImage2D");
    glCompressedTexSubImage2DARB = new Function<void, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, const void *>("glCompressedTexSubImage2DARB");
    glCompressedTexSubImage3D = new Function<void, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, const void *>("glCompressedTexSubImage3D");
    glCompressedTexSubImage3DARB = new Function<void, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, const void *>("glCompressedTexSubImage3DARB");
    glCompressedTextureImage1DEXT = new Function<void, GLuint, GLenum, GLint, GLenum, GLsizei, GLint, GLsizei, const void *>("glCompressedTextureImage1DEXT");
    glCompressedTextureImage2DEXT = new Function<void, GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLint, GLsizei, const void *>("glCompressedTextureImage2DEXT");
    glCompressedTextureImage3DEXT = new Function<void, GLuint, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLsizei, const void *>("glCompressedTextureImage3DEXT");
    glCompressedTextureSubImage1DEXT = new Function<void, GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLsizei, const void *>("glCompressedTextureSubImage1DEXT");
    glCompressedTextureSubImage2DEXT = new Function<void, GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLsizei, const void *>("glCompressedTextureSubImage2DEXT");
    glCompressedTextureSubImage3DEXT = new Function<void, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLsizei, const void *>("glCompressedTextureSubImage3DEXT");
    glConvolutionFilter1D = new Function<void, GLenum, GLenum, GLsizei, GLenum, GLenum, const void *>("glConvolutionFilter1D");
    glConvolutionFilter1DEXT = new Function<void, GLenum, GLenum, GLsizei, GLenum, GLenum, const void *>("glConvolutionFilter1DEXT");
    glConvolutionFilter2D = new Function<void, GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, const void *>("glConvolutionFilter2D");
    glConvolutionFilter2DEXT = new Function<void, GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, const void *>("glConvolutionFilter2DEXT");
    glConvolutionParameterf = new Function<void, GLenum, GLenum, GLfloat>("glConvolutionParameterf");
    glConvolutionParameterfEXT = new Function<void, GLenum, GLenum, GLfloat>("glConvolutionParameterfEXT");
    glConvolutionParameterfv = new Function<void, GLenum, GLenum, const GLfloat *>("glConvolutionParameterfv");
    glConvolutionParameterfvEXT = new Function<void, GLenum, GLenum, const GLfloat *>("glConvolutionParameterfvEXT");
    glConvolutionParameteri = new Function<void, GLenum, GLenum, GLint>("glConvolutionParameteri");
    glConvolutionParameteriEXT = new Function<void, GLenum, GLenum, GLint>("glConvolutionParameteriEXT");
    glConvolutionParameteriv = new Function<void, GLenum, GLenum, const GLint *>("glConvolutionParameteriv");
    glConvolutionParameterivEXT = new Function<void, GLenum, GLenum, const GLint *>("glConvolutionParameterivEXT");
    glConvolutionParameterxOES = new Function<void, GLenum, GLenum, GLfixed>("glConvolutionParameterxOES");
    glConvolutionParameterxvOES = new Function<void, GLenum, GLenum, const GLfixed *>("glConvolutionParameterxvOES");
    glCopyBufferSubData = new Function<void, GLenum, GLenum, GLintptr, GLintptr, GLsizeiptr>("glCopyBufferSubData");
    glCopyColorSubTable = new Function<void, GLenum, GLsizei, GLint, GLint, GLsizei>("glCopyColorSubTable");
    glCopyColorSubTableEXT = new Function<void, GLenum, GLsizei, GLint, GLint, GLsizei>("glCopyColorSubTableEXT");
    glCopyColorTable = new Function<void, GLenum, GLenum, GLint, GLint, GLsizei>("glCopyColorTable");
    glCopyColorTableSGI = new Function<void, GLenum, GLenum, GLint, GLint, GLsizei>("glCopyColorTableSGI");
    glCopyConvolutionFilter1D = new Function<void, GLenum, GLenum, GLint, GLint, GLsizei>("glCopyConvolutionFilter1D");
    glCopyConvolutionFilter1DEXT = new Function<void, GLenum, GLenum, GLint, GLint, GLsizei>("glCopyConvolutionFilter1DEXT");
    glCopyConvolutionFilter2D = new Function<void, GLenum, GLenum, GLint, GLint, GLsizei, GLsizei>("glCopyConvolutionFilter2D");
    glCopyConvolutionFilter2DEXT = new Function<void, GLenum, GLenum, GLint, GLint, GLsizei, GLsizei>("glCopyConvolutionFilter2DEXT");
    glCopyImageSubData = new Function<void, GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei>("glCopyImageSubData");
    glCopyImageSubDataNV = new Function<void, GLuint, GLenum, GLint, GLint, GLint, GLint, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei>("glCopyImageSubDataNV");
    glCopyMultiTexImage1DEXT = new Function<void, GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint>("glCopyMultiTexImage1DEXT");
    glCopyMultiTexImage2DEXT = new Function<void, GLenum, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint>("glCopyMultiTexImage2DEXT");
    glCopyMultiTexSubImage1DEXT = new Function<void, GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei>("glCopyMultiTexSubImage1DEXT");
    glCopyMultiTexSubImage2DEXT = new Function<void, GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei>("glCopyMultiTexSubImage2DEXT");
    glCopyMultiTexSubImage3DEXT = new Function<void, GLenum, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei>("glCopyMultiTexSubImage3DEXT");
    glCopyPathNV = new Function<void, GLuint, GLuint>("glCopyPathNV");
    glCopyPixels = new Function<void, GLint, GLint, GLsizei, GLsizei, GLenum>("glCopyPixels");
    glCopyTexImage1D = new Function<void, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint>("glCopyTexImage1D");
    glCopyTexImage1DEXT = new Function<void, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint>("glCopyTexImage1DEXT");
    glCopyTexImage2D = new Function<void, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint>("glCopyTexImage2D");
    glCopyTexImage2DEXT = new Function<void, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint>("glCopyTexImage2DEXT");
    glCopyTexSubImage1D = new Function<void, GLenum, GLint, GLint, GLint, GLint, GLsizei>("glCopyTexSubImage1D");
    glCopyTexSubImage1DEXT = new Function<void, GLenum, GLint, GLint, GLint, GLint, GLsizei>("glCopyTexSubImage1DEXT");
    glCopyTexSubImage2D = new Function<void, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei>("glCopyTexSubImage2D");
    glCopyTexSubImage2DEXT = new Function<void, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei>("glCopyTexSubImage2DEXT");
    glCopyTexSubImage3D = new Function<void, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei>("glCopyTexSubImage3D");
    glCopyTexSubImage3DEXT = new Function<void, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei>("glCopyTexSubImage3DEXT");
    glCopyTextureImage1DEXT = new Function<void, GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLint>("glCopyTextureImage1DEXT");
    glCopyTextureImage2DEXT = new Function<void, GLuint, GLenum, GLint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint>("glCopyTextureImage2DEXT");
    glCopyTextureSubImage1DEXT = new Function<void, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei>("glCopyTextureSubImage1DEXT");
    glCopyTextureSubImage2DEXT = new Function<void, GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei>("glCopyTextureSubImage2DEXT");
    glCopyTextureSubImage3DEXT = new Function<void, GLuint, GLenum, GLint, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei>("glCopyTextureSubImage3DEXT");
    glCoverFillPathInstancedNV = new Function<void, GLsizei, GLenum, const void *, GLuint, GLenum, GLenum, const GLfloat *>("glCoverFillPathInstancedNV");
    glCoverFillPathNV = new Function<void, GLuint, GLenum>("glCoverFillPathNV");
    glCoverStrokePathInstancedNV = new Function<void, GLsizei, GLenum, const void *, GLuint, GLenum, GLenum, const GLfloat *>("glCoverStrokePathInstancedNV");
    glCoverStrokePathNV = new Function<void, GLuint, GLenum>("glCoverStrokePathNV");
    glCreatePerfQueryINTEL = new Function<void, GLuint, GLuint *>("glCreatePerfQueryINTEL");
    glCreateProgram = new Function<GLuint>("glCreateProgram");
    glCreateProgramObjectARB = new Function<GLhandleARB>("glCreateProgramObjectARB");
    glCreateShader = new Function<GLuint, GLenum>("glCreateShader");
    glCreateShaderObjectARB = new Function<GLhandleARB, GLenum>("glCreateShaderObjectARB");
    glCreateShaderProgramEXT = new Function<GLuint, GLenum, const GLchar *>("glCreateShaderProgramEXT");
    glCreateShaderProgramv = new Function<GLuint, GLenum, GLsizei, const GLchar *const*>("glCreateShaderProgramv");
    glCreateSyncFromCLeventARB = new Function<GLsync, _cl_context *, _cl_event *, UnusedMask>("glCreateSyncFromCLeventARB");
    glCullFace = new Function<void, GLenum>("glCullFace");
    glCullParameterdvEXT = new Function<void, GLenum, GLdouble *>("glCullParameterdvEXT");
    glCullParameterfvEXT = new Function<void, GLenum, GLfloat *>("glCullParameterfvEXT");
    glCurrentPaletteMatrixARB = new Function<void, GLint>("glCurrentPaletteMatrixARB");
    glDebugMessageCallback = new Function<void, GLDEBUGPROC, const void *>("glDebugMessageCallback");
    glDebugMessageCallbackAMD = new Function<void, GLDEBUGPROCAMD, void *>("glDebugMessageCallbackAMD");
    glDebugMessageCallbackARB = new Function<void, GLDEBUGPROCARB, const void *>("glDebugMessageCallbackARB");
    glDebugMessageControl = new Function<void, GLenum, GLenum, GLenum, GLsizei, const GLuint *, GLboolean>("glDebugMessageControl");
    glDebugMessageControlARB = new Function<void, GLenum, GLenum, GLenum, GLsizei, const GLuint *, GLboolean>("glDebugMessageControlARB");
    glDebugMessageEnableAMD = new Function<void, GLenum, GLenum, GLsizei, const GLuint *, GLboolean>("glDebugMessageEnableAMD");
    glDebugMessageInsert = new Function<void, GLenum, GLenum, GLuint, GLenum, GLsizei, const GLchar *>("glDebugMessageInsert");
    glDebugMessageInsertAMD = new Function<void, GLenum, GLenum, GLuint, GLsizei, const GLchar *>("glDebugMessageInsertAMD");
    glDebugMessageInsertARB = new Function<void, GLenum, GLenum, GLuint, GLenum, GLsizei, const GLchar *>("glDebugMessageInsertARB");
    glDeformSGIX = new Function<void, FfdMaskSGIX>("glDeformSGIX");
    glDeformationMap3dSGIX = new Function<void, GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, const GLdouble *>("glDeformationMap3dSGIX");
    glDeformationMap3fSGIX = new Function<void, GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, const GLfloat *>("glDeformationMap3fSGIX");
    glDeleteAsyncMarkersSGIX = new Function<void, GLuint, GLsizei>("glDeleteAsyncMarkersSGIX");
    glDeleteBuffers = new Function<void, GLsizei, const GLuint *>("glDeleteBuffers");
    glDeleteBuffersARB = new Function<void, GLsizei, const GLuint *>("glDeleteBuffersARB");
    glDeleteFencesAPPLE = new Function<void, GLsizei, const GLuint *>("glDeleteFencesAPPLE");
    glDeleteFencesNV = new Function<void, GLsizei, const GLuint *>("glDeleteFencesNV");
    glDeleteFragmentShaderATI = new Function<void, GLuint>("glDeleteFragmentShaderATI");
    glDeleteFramebuffers = new Function<void, GLsizei, const GLuint *>("glDeleteFramebuffers");
    glDeleteFramebuffersEXT = new Function<void, GLsizei, const GLuint *>("glDeleteFramebuffersEXT");
    glDeleteLists = new Function<void, GLuint, GLsizei>("glDeleteLists");
    glDeleteNamedStringARB = new Function<void, GLint, const GLchar *>("glDeleteNamedStringARB");
    glDeleteNamesAMD = new Function<void, GLenum, GLuint, const GLuint *>("glDeleteNamesAMD");
    glDeleteObjectARB = new Function<void, GLhandleARB>("glDeleteObjectARB");
    glDeleteOcclusionQueriesNV = new Function<void, GLsizei, const GLuint *>("glDeleteOcclusionQueriesNV");
    glDeletePathsNV = new Function<void, GLuint, GLsizei>("glDeletePathsNV");
    glDeletePerfMonitorsAMD = new Function<void, GLsizei, GLuint *>("glDeletePerfMonitorsAMD");
    glDeletePerfQueryINTEL = new Function<void, GLuint>("glDeletePerfQueryINTEL");
    glDeleteProgram = new Function<void, GLuint>("glDeleteProgram");
    glDeleteProgramPipelines = new Function<void, GLsizei, const GLuint *>("glDeleteProgramPipelines");
    glDeleteProgramsARB = new Function<void, GLsizei, const GLuint *>("glDeleteProgramsARB");
    glDeleteProgramsNV = new Function<void, GLsizei, const GLuint *>("glDeleteProgramsNV");
    glDeleteQueries = new Function<void, GLsizei, const GLuint *>("glDeleteQueries");
    glDeleteQueriesARB = new Function<void, GLsizei, const GLuint *>("glDeleteQueriesARB");
    glDeleteRenderbuffers = new Function<void, GLsizei, const GLuint *>("glDeleteRenderbuffers");
    glDeleteRenderbuffersEXT = new Function<void, GLsizei, const GLuint *>("glDeleteRenderbuffersEXT");
    glDeleteSamplers = new Function<void, GLsizei, const GLuint *>("glDeleteSamplers");
    glDeleteShader = new Function<void, GLuint>("glDeleteShader");
    glDeleteSync = new Function<void, GLsync>("glDeleteSync");
    glDeleteTextures = new Function<void, GLsizei, const GLuint *>("glDeleteTextures");
    glDeleteTexturesEXT = new Function<void, GLsizei, const GLuint *>("glDeleteTexturesEXT");
    glDeleteTransformFeedbacks = new Function<void, GLsizei, const GLuint *>("glDeleteTransformFeedbacks");
    glDeleteTransformFeedbacksNV = new Function<void, GLsizei, const GLuint *>("glDeleteTransformFeedbacksNV");
    glDeleteVertexArrays = new Function<void, GLsizei, const GLuint *>("glDeleteVertexArrays");
    glDeleteVertexArraysAPPLE = new Function<void, GLsizei, const GLuint *>("glDeleteVertexArraysAPPLE");
    glDeleteVertexShaderEXT = new Function<void, GLuint>("glDeleteVertexShaderEXT");
    glDepthBoundsEXT = new Function<void, GLclampd, GLclampd>("glDepthBoundsEXT");
    glDepthBoundsdNV = new Function<void, GLdouble, GLdouble>("glDepthBoundsdNV");
    glDepthFunc = new Function<void, GLenum>("glDepthFunc");
    glDepthMask = new Function<void, GLboolean>("glDepthMask");
    glDepthRange = new Function<void, GLdouble, GLdouble>("glDepthRange");
    glDepthRangeArrayv = new Function<void, GLuint, GLsizei, const GLdouble *>("glDepthRangeArrayv");
    glDepthRangeIndexed = new Function<void, GLuint, GLdouble, GLdouble>("glDepthRangeIndexed");
    glDepthRangedNV = new Function<void, GLdouble, GLdouble>("glDepthRangedNV");
    glDepthRangef = new Function<void, GLfloat, GLfloat>("glDepthRangef");
    glDepthRangefOES = new Function<void, GLclampf, GLclampf>("glDepthRangefOES");
    glDepthRangexOES = new Function<void, GLfixed, GLfixed>("glDepthRangexOES");
    glDetachObjectARB = new Function<void, GLhandleARB, GLhandleARB>("glDetachObjectARB");
    glDetachShader = new Function<void, GLuint, GLuint>("glDetachShader");
    glDetailTexFuncSGIS = new Function<void, GLenum, GLsizei, const GLfloat *>("glDetailTexFuncSGIS");
    glDisable = new Function<void, GLenum>("glDisable");
    glDisableClientState = new Function<void, GLenum>("glDisableClientState");
    glDisableClientStateIndexedEXT = new Function<void, GLenum, GLuint>("glDisableClientStateIndexedEXT");
    glDisableClientStateiEXT = new Function<void, GLenum, GLuint>("glDisableClientStateiEXT");
    glDisableIndexedEXT = new Function<void, GLenum, GLuint>("glDisableIndexedEXT");
    glDisableVariantClientStateEXT = new Function<void, GLuint>("glDisableVariantClientStateEXT");
    glDisableVertexArrayAttribEXT = new Function<void, GLuint, GLuint>("glDisableVertexArrayAttribEXT");
    glDisableVertexArrayEXT = new Function<void, GLuint, GLenum>("glDisableVertexArrayEXT");
    glDisableVertexAttribAPPLE = new Function<void, GLuint, GLenum>("glDisableVertexAttribAPPLE");
    glDisableVertexAttribArray = new Function<void, GLuint>("glDisableVertexAttribArray");
    glDisableVertexAttribArrayARB = new Function<void, GLuint>("glDisableVertexAttribArrayARB");
    glDisablei = new Function<void, GLenum, GLuint>("glDisablei");
    glDispatchCompute = new Function<void, GLuint, GLuint, GLuint>("glDispatchCompute");
    glDispatchComputeGroupSizeARB = new Function<void, GLuint, GLuint, GLuint, GLuint, GLuint, GLuint>("glDispatchComputeGroupSizeARB");
    glDispatchComputeIndirect = new Function<void, GLintptr>("glDispatchComputeIndirect");
    glDrawArrays = new Function<void, GLenum, GLint, GLsizei>("glDrawArrays");
    glDrawArraysEXT = new Function<void, GLenum, GLint, GLsizei>("glDrawArraysEXT");
    glDrawArraysIndirect = new Function<void, GLenum, const void *>("glDrawArraysIndirect");
    glDrawArraysInstanced = new Function<void, GLenum, GLint, GLsizei, GLsizei>("glDrawArraysInstanced");
    glDrawArraysInstancedARB = new Function<void, GLenum, GLint, GLsizei, GLsizei>("glDrawArraysInstancedARB");
    glDrawArraysInstancedBaseInstance = new Function<void, GLenum, GLint, GLsizei, GLsizei, GLuint>("glDrawArraysInstancedBaseInstance");
    glDrawArraysInstancedEXT = new Function<void, GLenum, GLint, GLsizei, GLsizei>("glDrawArraysInstancedEXT");
    glDrawBuffer = new Function<void, GLenum>("glDrawBuffer");
    glDrawBuffers = new Function<void, GLsizei, const GLenum *>("glDrawBuffers");
    glDrawBuffersARB = new Function<void, GLsizei, const GLenum *>("glDrawBuffersARB");
    glDrawBuffersATI = new Function<void, GLsizei, const GLenum *>("glDrawBuffersATI");
    glDrawElementArrayAPPLE = new Function<void, GLenum, GLint, GLsizei>("glDrawElementArrayAPPLE");
    glDrawElementArrayATI = new Function<void, GLenum, GLsizei>("glDrawElementArrayATI");
    glDrawElements = new Function<void, GLenum, GLsizei, GLenum, const void *>("glDrawElements");
    glDrawElementsBaseVertex = new Function<void, GLenum, GLsizei, GLenum, const void *, GLint>("glDrawElementsBaseVertex");
    glDrawElementsIndirect = new Function<void, GLenum, GLenum, const void *>("glDrawElementsIndirect");
    glDrawElementsInstanced = new Function<void, GLenum, GLsizei, GLenum, const void *, GLsizei>("glDrawElementsInstanced");
    glDrawElementsInstancedARB = new Function<void, GLenum, GLsizei, GLenum, const void *, GLsizei>("glDrawElementsInstancedARB");
    glDrawElementsInstancedBaseInstance = new Function<void, GLenum, GLsizei, GLenum, const void *, GLsizei, GLuint>("glDrawElementsInstancedBaseInstance");
    glDrawElementsInstancedBaseVertex = new Function<void, GLenum, GLsizei, GLenum, const void *, GLsizei, GLint>("glDrawElementsInstancedBaseVertex");
    glDrawElementsInstancedBaseVertexBaseInstance = new Function<void, GLenum, GLsizei, GLenum, const void *, GLsizei, GLint, GLuint>("glDrawElementsInstancedBaseVertexBaseInstance");
    glDrawElementsInstancedEXT = new Function<void, GLenum, GLsizei, GLenum, const void *, GLsizei>("glDrawElementsInstancedEXT");
    glDrawMeshArraysSUN = new Function<void, GLenum, GLint, GLsizei, GLsizei>("glDrawMeshArraysSUN");
    glDrawPixels = new Function<void, GLsizei, GLsizei, GLenum, GLenum, const void *>("glDrawPixels");
    glDrawRangeElementArrayAPPLE = new Function<void, GLenum, GLuint, GLuint, GLint, GLsizei>("glDrawRangeElementArrayAPPLE");
    glDrawRangeElementArrayATI = new Function<void, GLenum, GLuint, GLuint, GLsizei>("glDrawRangeElementArrayATI");
    glDrawRangeElements = new Function<void, GLenum, GLuint, GLuint, GLsizei, GLenum, const void *>("glDrawRangeElements");
    glDrawRangeElementsBaseVertex = new Function<void, GLenum, GLuint, GLuint, GLsizei, GLenum, const void *, GLint>("glDrawRangeElementsBaseVertex");
    glDrawRangeElementsEXT = new Function<void, GLenum, GLuint, GLuint, GLsizei, GLenum, const void *>("glDrawRangeElementsEXT");
    glDrawTextureNV = new Function<void, GLuint, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat>("glDrawTextureNV");
    glDrawTransformFeedback = new Function<void, GLenum, GLuint>("glDrawTransformFeedback");
    glDrawTransformFeedbackInstanced = new Function<void, GLenum, GLuint, GLsizei>("glDrawTransformFeedbackInstanced");
    glDrawTransformFeedbackNV = new Function<void, GLenum, GLuint>("glDrawTransformFeedbackNV");
    glDrawTransformFeedbackStream = new Function<void, GLenum, GLuint, GLuint>("glDrawTransformFeedbackStream");
    glDrawTransformFeedbackStreamInstanced = new Function<void, GLenum, GLuint, GLuint, GLsizei>("glDrawTransformFeedbackStreamInstanced");
    glEdgeFlag = new Function<void, GLboolean>("glEdgeFlag");
    glEdgeFlagFormatNV = new Function<void, GLsizei>("glEdgeFlagFormatNV");
    glEdgeFlagPointer = new Function<void, GLsizei, const void *>("glEdgeFlagPointer");
    glEdgeFlagPointerEXT = new Function<void, GLsizei, GLsizei, const GLboolean *>("glEdgeFlagPointerEXT");
    glEdgeFlagPointerListIBM = new Function<void, GLint, const GLboolean **, GLint>("glEdgeFlagPointerListIBM");
    glEdgeFlagv = new Function<void, const GLboolean *>("glEdgeFlagv");
    glElementPointerAPPLE = new Function<void, GLenum, const void *>("glElementPointerAPPLE");
    glElementPointerATI = new Function<void, GLenum, const void *>("glElementPointerATI");
    glEnable = new Function<void, GLenum>("glEnable");
    glEnableClientState = new Function<void, GLenum>("glEnableClientState");
    glEnableClientStateIndexedEXT = new Function<void, GLenum, GLuint>("glEnableClientStateIndexedEXT");
    glEnableClientStateiEXT = new Function<void, GLenum, GLuint>("glEnableClientStateiEXT");
    glEnableIndexedEXT = new Function<void, GLenum, GLuint>("glEnableIndexedEXT");
    glEnableVariantClientStateEXT = new Function<void, GLuint>("glEnableVariantClientStateEXT");
    glEnableVertexArrayAttribEXT = new Function<void, GLuint, GLuint>("glEnableVertexArrayAttribEXT");
    glEnableVertexArrayEXT = new Function<void, GLuint, GLenum>("glEnableVertexArrayEXT");
    glEnableVertexAttribAPPLE = new Function<void, GLuint, GLenum>("glEnableVertexAttribAPPLE");
    glEnableVertexAttribArray = new Function<void, GLuint>("glEnableVertexAttribArray");
    glEnableVertexAttribArrayARB = new Function<void, GLuint>("glEnableVertexAttribArrayARB");
    glEnablei = new Function<void, GLenum, GLuint>("glEnablei");
    glEnd = new Function<void>("glEnd");
    glEndConditionalRender = new Function<void>("glEndConditionalRender");
    glEndConditionalRenderNV = new Function<void>("glEndConditionalRenderNV");
    glEndConditionalRenderNVX = new Function<void>("glEndConditionalRenderNVX");
    glEndFragmentShaderATI = new Function<void>("glEndFragmentShaderATI");
    glEndList = new Function<void>("glEndList");
    glEndOcclusionQueryNV = new Function<void>("glEndOcclusionQueryNV");
    glEndPerfMonitorAMD = new Function<void, GLuint>("glEndPerfMonitorAMD");
    glEndPerfQueryINTEL = new Function<void, GLuint>("glEndPerfQueryINTEL");
    glEndQuery = new Function<void, GLenum>("glEndQuery");
    glEndQueryARB = new Function<void, GLenum>("glEndQueryARB");
    glEndQueryIndexed = new Function<void, GLenum, GLuint>("glEndQueryIndexed");
    glEndTransformFeedback = new Function<void>("glEndTransformFeedback");
    glEndTransformFeedbackEXT = new Function<void>("glEndTransformFeedbackEXT");
    glEndTransformFeedbackNV = new Function<void>("glEndTransformFeedbackNV");
    glEndVertexShaderEXT = new Function<void>("glEndVertexShaderEXT");
    glEndVideoCaptureNV = new Function<void, GLuint>("glEndVideoCaptureNV");
    glEvalCoord1d = new Function<void, GLdouble>("glEvalCoord1d");
    glEvalCoord1dv = new Function<void, const GLdouble *>("glEvalCoord1dv");
    glEvalCoord1f = new Function<void, GLfloat>("glEvalCoord1f");
    glEvalCoord1fv = new Function<void, const GLfloat *>("glEvalCoord1fv");
    glEvalCoord1xOES = new Function<void, GLfixed>("glEvalCoord1xOES");
    glEvalCoord1xvOES = new Function<void, const GLfixed *>("glEvalCoord1xvOES");
    glEvalCoord2d = new Function<void, GLdouble, GLdouble>("glEvalCoord2d");
    glEvalCoord2dv = new Function<void, const GLdouble *>("glEvalCoord2dv");
    glEvalCoord2f = new Function<void, GLfloat, GLfloat>("glEvalCoord2f");
    glEvalCoord2fv = new Function<void, const GLfloat *>("glEvalCoord2fv");
    glEvalCoord2xOES = new Function<void, GLfixed, GLfixed>("glEvalCoord2xOES");
    glEvalCoord2xvOES = new Function<void, const GLfixed *>("glEvalCoord2xvOES");
    glEvalMapsNV = new Function<void, GLenum, GLenum>("glEvalMapsNV");
    glEvalMesh1 = new Function<void, GLenum, GLint, GLint>("glEvalMesh1");
    glEvalMesh2 = new Function<void, GLenum, GLint, GLint, GLint, GLint>("glEvalMesh2");
    glEvalPoint1 = new Function<void, GLint>("glEvalPoint1");
    glEvalPoint2 = new Function<void, GLint, GLint>("glEvalPoint2");
    glExecuteProgramNV = new Function<void, GLenum, GLuint, const GLfloat *>("glExecuteProgramNV");
    glExtractComponentEXT = new Function<void, GLuint, GLuint, GLuint>("glExtractComponentEXT");
    glFeedbackBuffer = new Function<void, GLsizei, GLenum, GLfloat *>("glFeedbackBuffer");
    glFeedbackBufferxOES = new Function<void, GLsizei, GLenum, const GLfixed *>("glFeedbackBufferxOES");
    glFenceSync = new Function<GLsync, GLenum, UnusedMask>("glFenceSync");
    glFinalCombinerInputNV = new Function<void, GLenum, GLenum, GLenum, GLenum>("glFinalCombinerInputNV");
    glFinish = new Function<void>("glFinish");
    glFinishAsyncSGIX = new Function<GLint, GLuint *>("glFinishAsyncSGIX");
    glFinishFenceAPPLE = new Function<void, GLuint>("glFinishFenceAPPLE");
    glFinishFenceNV = new Function<void, GLuint>("glFinishFenceNV");
    glFinishObjectAPPLE = new Function<void, GLenum, GLint>("glFinishObjectAPPLE");
    glFinishTextureSUNX = new Function<void>("glFinishTextureSUNX");
    glFlush = new Function<void>("glFlush");
    glFlushMappedBufferRange = new Function<void, GLenum, GLintptr, GLsizeiptr>("glFlushMappedBufferRange");
    glFlushMappedBufferRangeAPPLE = new Function<void, GLenum, GLintptr, GLsizeiptr>("glFlushMappedBufferRangeAPPLE");
    glFlushMappedNamedBufferRangeEXT = new Function<void, GLuint, GLintptr, GLsizeiptr>("glFlushMappedNamedBufferRangeEXT");
    glFlushPixelDataRangeNV = new Function<void, GLenum>("glFlushPixelDataRangeNV");
    glFlushRasterSGIX = new Function<void>("glFlushRasterSGIX");
    glFlushStaticDataIBM = new Function<void, GLenum>("glFlushStaticDataIBM");
    glFlushVertexArrayRangeAPPLE = new Function<void, GLsizei, void *>("glFlushVertexArrayRangeAPPLE");
    glFlushVertexArrayRangeNV = new Function<void>("glFlushVertexArrayRangeNV");
    glFogCoordFormatNV = new Function<void, GLenum, GLsizei>("glFogCoordFormatNV");
    glFogCoordPointer = new Function<void, GLenum, GLsizei, const void *>("glFogCoordPointer");
    glFogCoordPointerEXT = new Function<void, GLenum, GLsizei, const void *>("glFogCoordPointerEXT");
    glFogCoordPointerListIBM = new Function<void, GLenum, GLint, const void **, GLint>("glFogCoordPointerListIBM");
    glFogCoordd = new Function<void, GLdouble>("glFogCoordd");
    glFogCoorddEXT = new Function<void, GLdouble>("glFogCoorddEXT");
    glFogCoorddv = new Function<void, const GLdouble *>("glFogCoorddv");
    glFogCoorddvEXT = new Function<void, const GLdouble *>("glFogCoorddvEXT");
    glFogCoordf = new Function<void, GLfloat>("glFogCoordf");
    glFogCoordfEXT = new Function<void, GLfloat>("glFogCoordfEXT");
    glFogCoordfv = new Function<void, const GLfloat *>("glFogCoordfv");
    glFogCoordfvEXT = new Function<void, const GLfloat *>("glFogCoordfvEXT");
    glFogCoordhNV = new Function<void, GLhalfNV>("glFogCoordhNV");
    glFogCoordhvNV = new Function<void, const GLhalfNV *>("glFogCoordhvNV");
    glFogFuncSGIS = new Function<void, GLsizei, const GLfloat *>("glFogFuncSGIS");
    glFogf = new Function<void, GLenum, GLfloat>("glFogf");
    glFogfv = new Function<void, GLenum, const GLfloat *>("glFogfv");
    glFogi = new Function<void, GLenum, GLint>("glFogi");
    glFogiv = new Function<void, GLenum, const GLint *>("glFogiv");
    glFogxOES = new Function<void, GLenum, GLfixed>("glFogxOES");
    glFogxvOES = new Function<void, GLenum, const GLfixed *>("glFogxvOES");
    glFragmentColorMaterialSGIX = new Function<void, GLenum, GLenum>("glFragmentColorMaterialSGIX");
    glFragmentLightModelfSGIX = new Function<void, GLenum, GLfloat>("glFragmentLightModelfSGIX");
    glFragmentLightModelfvSGIX = new Function<void, GLenum, const GLfloat *>("glFragmentLightModelfvSGIX");
    glFragmentLightModeliSGIX = new Function<void, GLenum, GLint>("glFragmentLightModeliSGIX");
    glFragmentLightModelivSGIX = new Function<void, GLenum, const GLint *>("glFragmentLightModelivSGIX");
    glFragmentLightfSGIX = new Function<void, GLenum, GLenum, GLfloat>("glFragmentLightfSGIX");
    glFragmentLightfvSGIX = new Function<void, GLenum, GLenum, const GLfloat *>("glFragmentLightfvSGIX");
    glFragmentLightiSGIX = new Function<void, GLenum, GLenum, GLint>("glFragmentLightiSGIX");
    glFragmentLightivSGIX = new Function<void, GLenum, GLenum, const GLint *>("glFragmentLightivSGIX");
    glFragmentMaterialfSGIX = new Function<void, GLenum, GLenum, GLfloat>("glFragmentMaterialfSGIX");
    glFragmentMaterialfvSGIX = new Function<void, GLenum, GLenum, const GLfloat *>("glFragmentMaterialfvSGIX");
    glFragmentMaterialiSGIX = new Function<void, GLenum, GLenum, GLint>("glFragmentMaterialiSGIX");
    glFragmentMaterialivSGIX = new Function<void, GLenum, GLenum, const GLint *>("glFragmentMaterialivSGIX");
    glFrameTerminatorGREMEDY = new Function<void>("glFrameTerminatorGREMEDY");
    glFrameZoomSGIX = new Function<void, GLint>("glFrameZoomSGIX");
    glFramebufferDrawBufferEXT = new Function<void, GLuint, GLenum>("glFramebufferDrawBufferEXT");
    glFramebufferDrawBuffersEXT = new Function<void, GLuint, GLsizei, const GLenum *>("glFramebufferDrawBuffersEXT");
    glFramebufferParameteri = new Function<void, GLenum, GLenum, GLint>("glFramebufferParameteri");
    glFramebufferReadBufferEXT = new Function<void, GLuint, GLenum>("glFramebufferReadBufferEXT");
    glFramebufferRenderbuffer = new Function<void, GLenum, GLenum, GLenum, GLuint>("glFramebufferRenderbuffer");
    glFramebufferRenderbufferEXT = new Function<void, GLenum, GLenum, GLenum, GLuint>("glFramebufferRenderbufferEXT");
    glFramebufferTexture = new Function<void, GLenum, GLenum, GLuint, GLint>("glFramebufferTexture");
    glFramebufferTexture1D = new Function<void, GLenum, GLenum, GLenum, GLuint, GLint>("glFramebufferTexture1D");
    glFramebufferTexture1DEXT = new Function<void, GLenum, GLenum, GLenum, GLuint, GLint>("glFramebufferTexture1DEXT");
    glFramebufferTexture2D = new Function<void, GLenum, GLenum, GLenum, GLuint, GLint>("glFramebufferTexture2D");
    glFramebufferTexture2DEXT = new Function<void, GLenum, GLenum, GLenum, GLuint, GLint>("glFramebufferTexture2DEXT");
    glFramebufferTexture3D = new Function<void, GLenum, GLenum, GLenum, GLuint, GLint, GLint>("glFramebufferTexture3D");
    glFramebufferTexture3DEXT = new Function<void, GLenum, GLenum, GLenum, GLuint, GLint, GLint>("glFramebufferTexture3DEXT");
    glFramebufferTextureARB = new Function<void, GLenum, GLenum, GLuint, GLint>("glFramebufferTextureARB");
    glFramebufferTextureEXT = new Function<void, GLenum, GLenum, GLuint, GLint>("glFramebufferTextureEXT");
    glFramebufferTextureFaceARB = new Function<void, GLenum, GLenum, GLuint, GLint, GLenum>("glFramebufferTextureFaceARB");
    glFramebufferTextureFaceEXT = new Function<void, GLenum, GLenum, GLuint, GLint, GLenum>("glFramebufferTextureFaceEXT");
    glFramebufferTextureLayer = new Function<void, GLenum, GLenum, GLuint, GLint, GLint>("glFramebufferTextureLayer");
    glFramebufferTextureLayerARB = new Function<void, GLenum, GLenum, GLuint, GLint, GLint>("glFramebufferTextureLayerARB");
    glFramebufferTextureLayerEXT = new Function<void, GLenum, GLenum, GLuint, GLint, GLint>("glFramebufferTextureLayerEXT");
    glFreeObjectBufferATI = new Function<void, GLuint>("glFreeObjectBufferATI");
    glFrontFace = new Function<void, GLenum>("glFrontFace");
    glFrustum = new Function<void, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble>("glFrustum");
    glFrustumfOES = new Function<void, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat>("glFrustumfOES");
    glFrustumxOES = new Function<void, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed>("glFrustumxOES");
    glGenAsyncMarkersSGIX = new Function<GLuint, GLsizei>("glGenAsyncMarkersSGIX");
    glGenBuffers = new Function<void, GLsizei, GLuint *>("glGenBuffers");
    glGenBuffersARB = new Function<void, GLsizei, GLuint *>("glGenBuffersARB");
    glGenFencesAPPLE = new Function<void, GLsizei, GLuint *>("glGenFencesAPPLE");
    glGenFencesNV = new Function<void, GLsizei, GLuint *>("glGenFencesNV");
    glGenFragmentShadersATI = new Function<GLuint, GLuint>("glGenFragmentShadersATI");
    glGenFramebuffers = new Function<void, GLsizei, GLuint *>("glGenFramebuffers");
    glGenFramebuffersEXT = new Function<void, GLsizei, GLuint *>("glGenFramebuffersEXT");
    glGenLists = new Function<GLuint, GLsizei>("glGenLists");
    glGenNamesAMD = new Function<void, GLenum, GLuint, GLuint *>("glGenNamesAMD");
    glGenOcclusionQueriesNV = new Function<void, GLsizei, GLuint *>("glGenOcclusionQueriesNV");
    glGenPathsNV = new Function<GLuint, GLsizei>("glGenPathsNV");
    glGenPerfMonitorsAMD = new Function<void, GLsizei, GLuint *>("glGenPerfMonitorsAMD");
    glGenProgramPipelines = new Function<void, GLsizei, GLuint *>("glGenProgramPipelines");
    glGenProgramsARB = new Function<void, GLsizei, GLuint *>("glGenProgramsARB");
    glGenProgramsNV = new Function<void, GLsizei, GLuint *>("glGenProgramsNV");
    glGenQueries = new Function<void, GLsizei, GLuint *>("glGenQueries");
    glGenQueriesARB = new Function<void, GLsizei, GLuint *>("glGenQueriesARB");
    glGenRenderbuffers = new Function<void, GLsizei, GLuint *>("glGenRenderbuffers");
    glGenRenderbuffersEXT = new Function<void, GLsizei, GLuint *>("glGenRenderbuffersEXT");
    glGenSamplers = new Function<void, GLsizei, GLuint *>("glGenSamplers");
    glGenSymbolsEXT = new Function<GLuint, GLenum, GLenum, GLenum, GLuint>("glGenSymbolsEXT");
    glGenTextures = new Function<void, GLsizei, GLuint *>("glGenTextures");
    glGenTexturesEXT = new Function<void, GLsizei, GLuint *>("glGenTexturesEXT");
    glGenTransformFeedbacks = new Function<void, GLsizei, GLuint *>("glGenTransformFeedbacks");
    glGenTransformFeedbacksNV = new Function<void, GLsizei, GLuint *>("glGenTransformFeedbacksNV");
    glGenVertexArrays = new Function<void, GLsizei, GLuint *>("glGenVertexArrays");
    glGenVertexArraysAPPLE = new Function<void, GLsizei, GLuint *>("glGenVertexArraysAPPLE");
    glGenVertexShadersEXT = new Function<GLuint, GLuint>("glGenVertexShadersEXT");
    glGenerateMipmap = new Function<void, GLenum>("glGenerateMipmap");
    glGenerateMipmapEXT = new Function<void, GLenum>("glGenerateMipmapEXT");
    glGenerateMultiTexMipmapEXT = new Function<void, GLenum, GLenum>("glGenerateMultiTexMipmapEXT");
    glGenerateTextureMipmapEXT = new Function<void, GLuint, GLenum>("glGenerateTextureMipmapEXT");
    glGetActiveAtomicCounterBufferiv = new Function<void, GLuint, GLuint, GLenum, GLint *>("glGetActiveAtomicCounterBufferiv");
    glGetActiveAttrib = new Function<void, GLuint, GLuint, GLsizei, GLsizei *, GLint *, GLenum *, GLchar *>("glGetActiveAttrib");
    glGetActiveAttribARB = new Function<void, GLhandleARB, GLuint, GLsizei, GLsizei *, GLint *, GLenum *, GLcharARB *>("glGetActiveAttribARB");
    glGetActiveSubroutineName = new Function<void, GLuint, GLenum, GLuint, GLsizei, GLsizei *, GLchar *>("glGetActiveSubroutineName");
    glGetActiveSubroutineUniformName = new Function<void, GLuint, GLenum, GLuint, GLsizei, GLsizei *, GLchar *>("glGetActiveSubroutineUniformName");
    glGetActiveSubroutineUniformiv = new Function<void, GLuint, GLenum, GLuint, GLenum, GLint *>("glGetActiveSubroutineUniformiv");
    glGetActiveUniform = new Function<void, GLuint, GLuint, GLsizei, GLsizei *, GLint *, GLenum *, GLchar *>("glGetActiveUniform");
    glGetActiveUniformARB = new Function<void, GLhandleARB, GLuint, GLsizei, GLsizei *, GLint *, GLenum *, GLcharARB *>("glGetActiveUniformARB");
    glGetActiveUniformBlockName = new Function<void, GLuint, GLuint, GLsizei, GLsizei *, GLchar *>("glGetActiveUniformBlockName");
    glGetActiveUniformBlockiv = new Function<void, GLuint, GLuint, GLenum, GLint *>("glGetActiveUniformBlockiv");
    glGetActiveUniformName = new Function<void, GLuint, GLuint, GLsizei, GLsizei *, GLchar *>("glGetActiveUniformName");
    glGetActiveUniformsiv = new Function<void, GLuint, GLsizei, const GLuint *, GLenum, GLint *>("glGetActiveUniformsiv");
    glGetActiveVaryingNV = new Function<void, GLuint, GLuint, GLsizei, GLsizei *, GLsizei *, GLenum *, GLchar *>("glGetActiveVaryingNV");
    glGetArrayObjectfvATI = new Function<void, GLenum, GLenum, GLfloat *>("glGetArrayObjectfvATI");
    glGetArrayObjectivATI = new Function<void, GLenum, GLenum, GLint *>("glGetArrayObjectivATI");
    glGetAttachedObjectsARB = new Function<void, GLhandleARB, GLsizei, GLsizei *, GLhandleARB *>("glGetAttachedObjectsARB");
    glGetAttachedShaders = new Function<void, GLuint, GLsizei, GLsizei *, GLuint *>("glGetAttachedShaders");
    glGetAttribLocation = new Function<GLint, GLuint, const GLchar *>("glGetAttribLocation");
    glGetAttribLocationARB = new Function<GLint, GLhandleARB, const GLcharARB *>("glGetAttribLocationARB");
    glGetBooleanIndexedvEXT = new Function<void, GLenum, GLuint, GLboolean *>("glGetBooleanIndexedvEXT");
    glGetBooleani_v = new Function<void, GLenum, GLuint, GLboolean *>("glGetBooleani_v");
    glGetBooleanv = new Function<void, GLenum, GLboolean *>("glGetBooleanv");
    glGetBufferParameteri64v = new Function<void, GLenum, GLenum, GLint64 *>("glGetBufferParameteri64v");
    glGetBufferParameteriv = new Function<void, GLenum, GLenum, GLint *>("glGetBufferParameteriv");
    glGetBufferParameterivARB = new Function<void, GLenum, GLenum, GLint *>("glGetBufferParameterivARB");
    glGetBufferParameterui64vNV = new Function<void, GLenum, GLenum, GLuint64EXT *>("glGetBufferParameterui64vNV");
    glGetBufferPointerv = new Function<void, GLenum, GLenum, void **>("glGetBufferPointerv");
    glGetBufferPointervARB = new Function<void, GLenum, GLenum, void **>("glGetBufferPointervARB");
    glGetBufferSubData = new Function<void, GLenum, GLintptr, GLsizeiptr, void *>("glGetBufferSubData");
    glGetBufferSubDataARB = new Function<void, GLenum, GLintptrARB, GLsizeiptrARB, void *>("glGetBufferSubDataARB");
    glGetClipPlane = new Function<void, GLenum, GLdouble *>("glGetClipPlane");
    glGetClipPlanefOES = new Function<void, GLenum, GLfloat *>("glGetClipPlanefOES");
    glGetClipPlanexOES = new Function<void, GLenum, GLfixed *>("glGetClipPlanexOES");
    glGetColorTable = new Function<void, GLenum, GLenum, GLenum, void *>("glGetColorTable");
    glGetColorTableEXT = new Function<void, GLenum, GLenum, GLenum, void *>("glGetColorTableEXT");
    glGetColorTableParameterfv = new Function<void, GLenum, GLenum, GLfloat *>("glGetColorTableParameterfv");
    glGetColorTableParameterfvEXT = new Function<void, GLenum, GLenum, GLfloat *>("glGetColorTableParameterfvEXT");
    glGetColorTableParameterfvSGI = new Function<void, GLenum, GLenum, GLfloat *>("glGetColorTableParameterfvSGI");
    glGetColorTableParameteriv = new Function<void, GLenum, GLenum, GLint *>("glGetColorTableParameteriv");
    glGetColorTableParameterivEXT = new Function<void, GLenum, GLenum, GLint *>("glGetColorTableParameterivEXT");
    glGetColorTableParameterivSGI = new Function<void, GLenum, GLenum, GLint *>("glGetColorTableParameterivSGI");
    glGetColorTableSGI = new Function<void, GLenum, GLenum, GLenum, void *>("glGetColorTableSGI");
    glGetCombinerInputParameterfvNV = new Function<void, GLenum, GLenum, GLenum, GLenum, GLfloat *>("glGetCombinerInputParameterfvNV");
    glGetCombinerInputParameterivNV = new Function<void, GLenum, GLenum, GLenum, GLenum, GLint *>("glGetCombinerInputParameterivNV");
    glGetCombinerOutputParameterfvNV = new Function<void, GLenum, GLenum, GLenum, GLfloat *>("glGetCombinerOutputParameterfvNV");
    glGetCombinerOutputParameterivNV = new Function<void, GLenum, GLenum, GLenum, GLint *>("glGetCombinerOutputParameterivNV");
    glGetCombinerStageParameterfvNV = new Function<void, GLenum, GLenum, GLfloat *>("glGetCombinerStageParameterfvNV");
    glGetCompressedMultiTexImageEXT = new Function<void, GLenum, GLenum, GLint, void *>("glGetCompressedMultiTexImageEXT");
    glGetCompressedTexImage = new Function<void, GLenum, GLint, void *>("glGetCompressedTexImage");
    glGetCompressedTexImageARB = new Function<void, GLenum, GLint, void *>("glGetCompressedTexImageARB");
    glGetCompressedTextureImageEXT = new Function<void, GLuint, GLenum, GLint, void *>("glGetCompressedTextureImageEXT");
    glGetConvolutionFilter = new Function<void, GLenum, GLenum, GLenum, void *>("glGetConvolutionFilter");
    glGetConvolutionFilterEXT = new Function<void, GLenum, GLenum, GLenum, void *>("glGetConvolutionFilterEXT");
    glGetConvolutionParameterfv = new Function<void, GLenum, GLenum, GLfloat *>("glGetConvolutionParameterfv");
    glGetConvolutionParameterfvEXT = new Function<void, GLenum, GLenum, GLfloat *>("glGetConvolutionParameterfvEXT");
    glGetConvolutionParameteriv = new Function<void, GLenum, GLenum, GLint *>("glGetConvolutionParameteriv");
    glGetConvolutionParameterivEXT = new Function<void, GLenum, GLenum, GLint *>("glGetConvolutionParameterivEXT");
    glGetConvolutionParameterxvOES = new Function<void, GLenum, GLenum, GLfixed *>("glGetConvolutionParameterxvOES");
    glGetDebugMessageLog = new Function<GLuint, GLuint, GLsizei, GLenum *, GLenum *, GLuint *, GLenum *, GLsizei *, GLchar *>("glGetDebugMessageLog");
    glGetDebugMessageLogAMD = new Function<GLuint, GLuint, GLsizei, GLenum *, GLuint *, GLuint *, GLsizei *, GLchar *>("glGetDebugMessageLogAMD");
    glGetDebugMessageLogARB = new Function<GLuint, GLuint, GLsizei, GLenum *, GLenum *, GLuint *, GLenum *, GLsizei *, GLchar *>("glGetDebugMessageLogARB");
    glGetDetailTexFuncSGIS = new Function<void, GLenum, GLfloat *>("glGetDetailTexFuncSGIS");
    glGetDoubleIndexedvEXT = new Function<void, GLenum, GLuint, GLdouble *>("glGetDoubleIndexedvEXT");
    glGetDoublei_v = new Function<void, GLenum, GLuint, GLdouble *>("glGetDoublei_v");
    glGetDoublei_vEXT = new Function<void, GLenum, GLuint, GLdouble *>("glGetDoublei_vEXT");
    glGetDoublev = new Function<void, GLenum, GLdouble *>("glGetDoublev");
    glGetError = new Function<GLenum>("glGetError");
    glGetFenceivNV = new Function<void, GLuint, GLenum, GLint *>("glGetFenceivNV");
    glGetFinalCombinerInputParameterfvNV = new Function<void, GLenum, GLenum, GLfloat *>("glGetFinalCombinerInputParameterfvNV");
    glGetFinalCombinerInputParameterivNV = new Function<void, GLenum, GLenum, GLint *>("glGetFinalCombinerInputParameterivNV");
    glGetFirstPerfQueryIdINTEL = new Function<void, GLuint *>("glGetFirstPerfQueryIdINTEL");
    glGetFixedvOES = new Function<void, GLenum, GLfixed *>("glGetFixedvOES");
    glGetFloatIndexedvEXT = new Function<void, GLenum, GLuint, GLfloat *>("glGetFloatIndexedvEXT");
    glGetFloati_v = new Function<void, GLenum, GLuint, GLfloat *>("glGetFloati_v");
    glGetFloati_vEXT = new Function<void, GLenum, GLuint, GLfloat *>("glGetFloati_vEXT");
    glGetFloatv = new Function<void, GLenum, GLfloat *>("glGetFloatv");
    glGetFogFuncSGIS = new Function<void, GLfloat *>("glGetFogFuncSGIS");
    glGetFragDataIndex = new Function<GLint, GLuint, const GLchar *>("glGetFragDataIndex");
    glGetFragDataLocation = new Function<GLint, GLuint, const GLchar *>("glGetFragDataLocation");
    glGetFragDataLocationEXT = new Function<GLint, GLuint, const GLchar *>("glGetFragDataLocationEXT");
    glGetFragmentLightfvSGIX = new Function<void, GLenum, GLenum, GLfloat *>("glGetFragmentLightfvSGIX");
    glGetFragmentLightivSGIX = new Function<void, GLenum, GLenum, GLint *>("glGetFragmentLightivSGIX");
    glGetFragmentMaterialfvSGIX = new Function<void, GLenum, GLenum, GLfloat *>("glGetFragmentMaterialfvSGIX");
    glGetFragmentMaterialivSGIX = new Function<void, GLenum, GLenum, GLint *>("glGetFragmentMaterialivSGIX");
    glGetFramebufferAttachmentParameteriv = new Function<void, GLenum, GLenum, GLenum, GLint *>("glGetFramebufferAttachmentParameteriv");
    glGetFramebufferAttachmentParameterivEXT = new Function<void, GLenum, GLenum, GLenum, GLint *>("glGetFramebufferAttachmentParameterivEXT");
    glGetFramebufferParameteriv = new Function<void, GLenum, GLenum, GLint *>("glGetFramebufferParameteriv");
    glGetFramebufferParameterivEXT = new Function<void, GLuint, GLenum, GLint *>("glGetFramebufferParameterivEXT");
    glGetGraphicsResetStatusARB = new Function<GLenum>("glGetGraphicsResetStatusARB");
    glGetHandleARB = new Function<GLhandleARB, GLenum>("glGetHandleARB");
    glGetHistogram = new Function<void, GLenum, GLboolean, GLenum, GLenum, void *>("glGetHistogram");
    glGetHistogramEXT = new Function<void, GLenum, GLboolean, GLenum, GLenum, void *>("glGetHistogramEXT");
    glGetHistogramParameterfv = new Function<void, GLenum, GLenum, GLfloat *>("glGetHistogramParameterfv");
    glGetHistogramParameterfvEXT = new Function<void, GLenum, GLenum, GLfloat *>("glGetHistogramParameterfvEXT");
    glGetHistogramParameteriv = new Function<void, GLenum, GLenum, GLint *>("glGetHistogramParameteriv");
    glGetHistogramParameterivEXT = new Function<void, GLenum, GLenum, GLint *>("glGetHistogramParameterivEXT");
    glGetHistogramParameterxvOES = new Function<void, GLenum, GLenum, GLfixed *>("glGetHistogramParameterxvOES");
    glGetImageHandleARB = new Function<GLuint64, GLuint, GLint, GLboolean, GLint, GLenum>("glGetImageHandleARB");
    glGetImageHandleNV = new Function<GLuint64, GLuint, GLint, GLboolean, GLint, GLenum>("glGetImageHandleNV");
    glGetImageTransformParameterfvHP = new Function<void, GLenum, GLenum, GLfloat *>("glGetImageTransformParameterfvHP");
    glGetImageTransformParameterivHP = new Function<void, GLenum, GLenum, GLint *>("glGetImageTransformParameterivHP");
    glGetInfoLogARB = new Function<void, GLhandleARB, GLsizei, GLsizei *, GLcharARB *>("glGetInfoLogARB");
    glGetInstrumentsSGIX = new Function<GLint>("glGetInstrumentsSGIX");
    glGetInteger64i_v = new Function<void, GLenum, GLuint, GLint64 *>("glGetInteger64i_v");
    glGetInteger64v = new Function<void, GLenum, GLint64 *>("glGetInteger64v");
    glGetIntegerIndexedvEXT = new Function<void, GLenum, GLuint, GLint *>("glGetIntegerIndexedvEXT");
    glGetIntegeri_v = new Function<void, GLenum, GLuint, GLint *>("glGetIntegeri_v");
    glGetIntegerui64i_vNV = new Function<void, GLenum, GLuint, GLuint64EXT *>("glGetIntegerui64i_vNV");
    glGetIntegerui64vNV = new Function<void, GLenum, GLuint64EXT *>("glGetIntegerui64vNV");
    glGetIntegerv = new Function<void, GLenum, GLint *>("glGetIntegerv");
    glGetInternalformati64v = new Function<void, GLenum, GLenum, GLenum, GLsizei, GLint64 *>("glGetInternalformati64v");
    glGetInternalformativ = new Function<void, GLenum, GLenum, GLenum, GLsizei, GLint *>("glGetInternalformativ");
    glGetInvariantBooleanvEXT = new Function<void, GLuint, GLenum, GLboolean *>("glGetInvariantBooleanvEXT");
    glGetInvariantFloatvEXT = new Function<void, GLuint, GLenum, GLfloat *>("glGetInvariantFloatvEXT");
    glGetInvariantIntegervEXT = new Function<void, GLuint, GLenum, GLint *>("glGetInvariantIntegervEXT");
    glGetLightfv = new Function<void, GLenum, GLenum, GLfloat *>("glGetLightfv");
    glGetLightiv = new Function<void, GLenum, GLenum, GLint *>("glGetLightiv");
    glGetLightxOES = new Function<void, GLenum, GLenum, GLfixed *>("glGetLightxOES");
    glGetListParameterfvSGIX = new Function<void, GLuint, GLenum, GLfloat *>("glGetListParameterfvSGIX");
    glGetListParameterivSGIX = new Function<void, GLuint, GLenum, GLint *>("glGetListParameterivSGIX");
    glGetLocalConstantBooleanvEXT = new Function<void, GLuint, GLenum, GLboolean *>("glGetLocalConstantBooleanvEXT");
    glGetLocalConstantFloatvEXT = new Function<void, GLuint, GLenum, GLfloat *>("glGetLocalConstantFloatvEXT");
    glGetLocalConstantIntegervEXT = new Function<void, GLuint, GLenum, GLint *>("glGetLocalConstantIntegervEXT");
    glGetMapAttribParameterfvNV = new Function<void, GLenum, GLuint, GLenum, GLfloat *>("glGetMapAttribParameterfvNV");
    glGetMapAttribParameterivNV = new Function<void, GLenum, GLuint, GLenum, GLint *>("glGetMapAttribParameterivNV");
    glGetMapControlPointsNV = new Function<void, GLenum, GLuint, GLenum, GLsizei, GLsizei, GLboolean, void *>("glGetMapControlPointsNV");
    glGetMapParameterfvNV = new Function<void, GLenum, GLenum, GLfloat *>("glGetMapParameterfvNV");
    glGetMapParameterivNV = new Function<void, GLenum, GLenum, GLint *>("glGetMapParameterivNV");
    glGetMapdv = new Function<void, GLenum, GLenum, GLdouble *>("glGetMapdv");
    glGetMapfv = new Function<void, GLenum, GLenum, GLfloat *>("glGetMapfv");
    glGetMapiv = new Function<void, GLenum, GLenum, GLint *>("glGetMapiv");
    glGetMapxvOES = new Function<void, GLenum, GLenum, GLfixed *>("glGetMapxvOES");
    glGetMaterialfv = new Function<void, GLenum, GLenum, GLfloat *>("glGetMaterialfv");
    glGetMaterialiv = new Function<void, GLenum, GLenum, GLint *>("glGetMaterialiv");
    glGetMaterialxOES = new Function<void, GLenum, GLenum, GLfixed>("glGetMaterialxOES");
    glGetMinmax = new Function<void, GLenum, GLboolean, GLenum, GLenum, void *>("glGetMinmax");
    glGetMinmaxEXT = new Function<void, GLenum, GLboolean, GLenum, GLenum, void *>("glGetMinmaxEXT");
    glGetMinmaxParameterfv = new Function<void, GLenum, GLenum, GLfloat *>("glGetMinmaxParameterfv");
    glGetMinmaxParameterfvEXT = new Function<void, GLenum, GLenum, GLfloat *>("glGetMinmaxParameterfvEXT");
    glGetMinmaxParameteriv = new Function<void, GLenum, GLenum, GLint *>("glGetMinmaxParameteriv");
    glGetMinmaxParameterivEXT = new Function<void, GLenum, GLenum, GLint *>("glGetMinmaxParameterivEXT");
    glGetMultiTexEnvfvEXT = new Function<void, GLenum, GLenum, GLenum, GLfloat *>("glGetMultiTexEnvfvEXT");
    glGetMultiTexEnvivEXT = new Function<void, GLenum, GLenum, GLenum, GLint *>("glGetMultiTexEnvivEXT");
    glGetMultiTexGendvEXT = new Function<void, GLenum, GLenum, GLenum, GLdouble *>("glGetMultiTexGendvEXT");
    glGetMultiTexGenfvEXT = new Function<void, GLenum, GLenum, GLenum, GLfloat *>("glGetMultiTexGenfvEXT");
    glGetMultiTexGenivEXT = new Function<void, GLenum, GLenum, GLenum, GLint *>("glGetMultiTexGenivEXT");
    glGetMultiTexImageEXT = new Function<void, GLenum, GLenum, GLint, GLenum, GLenum, void *>("glGetMultiTexImageEXT");
    glGetMultiTexLevelParameterfvEXT = new Function<void, GLenum, GLenum, GLint, GLenum, GLfloat *>("glGetMultiTexLevelParameterfvEXT");
    glGetMultiTexLevelParameterivEXT = new Function<void, GLenum, GLenum, GLint, GLenum, GLint *>("glGetMultiTexLevelParameterivEXT");
    glGetMultiTexParameterIivEXT = new Function<void, GLenum, GLenum, GLenum, GLint *>("glGetMultiTexParameterIivEXT");
    glGetMultiTexParameterIuivEXT = new Function<void, GLenum, GLenum, GLenum, GLuint *>("glGetMultiTexParameterIuivEXT");
    glGetMultiTexParameterfvEXT = new Function<void, GLenum, GLenum, GLenum, GLfloat *>("glGetMultiTexParameterfvEXT");
    glGetMultiTexParameterivEXT = new Function<void, GLenum, GLenum, GLenum, GLint *>("glGetMultiTexParameterivEXT");
    glGetMultisamplefv = new Function<void, GLenum, GLuint, GLfloat *>("glGetMultisamplefv");
    glGetMultisamplefvNV = new Function<void, GLenum, GLuint, GLfloat *>("glGetMultisamplefvNV");
    glGetNamedBufferParameterivEXT = new Function<void, GLuint, GLenum, GLint *>("glGetNamedBufferParameterivEXT");
    glGetNamedBufferParameterui64vNV = new Function<void, GLuint, GLenum, GLuint64EXT *>("glGetNamedBufferParameterui64vNV");
    glGetNamedBufferPointervEXT = new Function<void, GLuint, GLenum, void **>("glGetNamedBufferPointervEXT");
    glGetNamedBufferSubDataEXT = new Function<void, GLuint, GLintptr, GLsizeiptr, void *>("glGetNamedBufferSubDataEXT");
    glGetNamedFramebufferAttachmentParameterivEXT = new Function<void, GLuint, GLenum, GLenum, GLint *>("glGetNamedFramebufferAttachmentParameterivEXT");
    glGetNamedFramebufferParameterivEXT = new Function<void, GLuint, GLenum, GLint *>("glGetNamedFramebufferParameterivEXT");
    glGetNamedProgramLocalParameterIivEXT = new Function<void, GLuint, GLenum, GLuint, GLint *>("glGetNamedProgramLocalParameterIivEXT");
    glGetNamedProgramLocalParameterIuivEXT = new Function<void, GLuint, GLenum, GLuint, GLuint *>("glGetNamedProgramLocalParameterIuivEXT");
    glGetNamedProgramLocalParameterdvEXT = new Function<void, GLuint, GLenum, GLuint, GLdouble *>("glGetNamedProgramLocalParameterdvEXT");
    glGetNamedProgramLocalParameterfvEXT = new Function<void, GLuint, GLenum, GLuint, GLfloat *>("glGetNamedProgramLocalParameterfvEXT");
    glGetNamedProgramStringEXT = new Function<void, GLuint, GLenum, GLenum, void *>("glGetNamedProgramStringEXT");
    glGetNamedProgramivEXT = new Function<void, GLuint, GLenum, GLenum, GLint *>("glGetNamedProgramivEXT");
    glGetNamedRenderbufferParameterivEXT = new Function<void, GLuint, GLenum, GLint *>("glGetNamedRenderbufferParameterivEXT");
    glGetNamedStringARB = new Function<void, GLint, const GLchar *, GLsizei, GLint *, GLchar *>("glGetNamedStringARB");
    glGetNamedStringivARB = new Function<void, GLint, const GLchar *, GLenum, GLint *>("glGetNamedStringivARB");
    glGetNextPerfQueryIdINTEL = new Function<void, GLuint, GLuint *>("glGetNextPerfQueryIdINTEL");
    glGetObjectBufferfvATI = new Function<void, GLuint, GLenum, GLfloat *>("glGetObjectBufferfvATI");
    glGetObjectBufferivATI = new Function<void, GLuint, GLenum, GLint *>("glGetObjectBufferivATI");
    glGetObjectLabel = new Function<void, GLenum, GLuint, GLsizei, GLsizei *, GLchar *>("glGetObjectLabel");
    glGetObjectLabelEXT = new Function<void, GLenum, GLuint, GLsizei, GLsizei *, GLchar *>("glGetObjectLabelEXT");
    glGetObjectParameterfvARB = new Function<void, GLhandleARB, GLenum, GLfloat *>("glGetObjectParameterfvARB");
    glGetObjectParameterivAPPLE = new Function<void, GLenum, GLuint, GLenum, GLint *>("glGetObjectParameterivAPPLE");
    glGetObjectParameterivARB = new Function<void, GLhandleARB, GLenum, GLint *>("glGetObjectParameterivARB");
    glGetObjectPtrLabel = new Function<void, const void *, GLsizei, GLsizei *, GLchar *>("glGetObjectPtrLabel");
    glGetOcclusionQueryivNV = new Function<void, GLuint, GLenum, GLint *>("glGetOcclusionQueryivNV");
    glGetOcclusionQueryuivNV = new Function<void, GLuint, GLenum, GLuint *>("glGetOcclusionQueryuivNV");
    glGetPathColorGenfvNV = new Function<void, GLenum, GLenum, GLfloat *>("glGetPathColorGenfvNV");
    glGetPathColorGenivNV = new Function<void, GLenum, GLenum, GLint *>("glGetPathColorGenivNV");
    glGetPathCommandsNV = new Function<void, GLuint, GLubyte *>("glGetPathCommandsNV");
    glGetPathCoordsNV = new Function<void, GLuint, GLfloat *>("glGetPathCoordsNV");
    glGetPathDashArrayNV = new Function<void, GLuint, GLfloat *>("glGetPathDashArrayNV");
    glGetPathLengthNV = new Function<GLfloat, GLuint, GLsizei, GLsizei>("glGetPathLengthNV");
    glGetPathMetricRangeNV = new Function<void, PathRenderingMaskNV, GLuint, GLsizei, GLsizei, GLfloat *>("glGetPathMetricRangeNV");
    glGetPathMetricsNV = new Function<void, PathRenderingMaskNV, GLsizei, GLenum, const void *, GLuint, GLsizei, GLfloat *>("glGetPathMetricsNV");
    glGetPathParameterfvNV = new Function<void, GLuint, GLenum, GLfloat *>("glGetPathParameterfvNV");
    glGetPathParameterivNV = new Function<void, GLuint, GLenum, GLint *>("glGetPathParameterivNV");
    glGetPathSpacingNV = new Function<void, GLenum, GLsizei, GLenum, const void *, GLuint, GLfloat, GLfloat, GLenum, GLfloat *>("glGetPathSpacingNV");
    glGetPathTexGenfvNV = new Function<void, GLenum, GLenum, GLfloat *>("glGetPathTexGenfvNV");
    glGetPathTexGenivNV = new Function<void, GLenum, GLenum, GLint *>("glGetPathTexGenivNV");
    glGetPerfCounterInfoINTEL = new Function<void, GLuint, GLuint, GLuint, GLchar *, GLuint, GLchar *, GLuint *, GLuint *, GLuint *, GLuint *, GLuint64 *>("glGetPerfCounterInfoINTEL");
    glGetPerfMonitorCounterDataAMD = new Function<void, GLuint, GLenum, GLsizei, GLuint *, GLint *>("glGetPerfMonitorCounterDataAMD");
    glGetPerfMonitorCounterInfoAMD = new Function<void, GLuint, GLuint, GLenum, void *>("glGetPerfMonitorCounterInfoAMD");
    glGetPerfMonitorCounterStringAMD = new Function<void, GLuint, GLuint, GLsizei, GLsizei *, GLchar *>("glGetPerfMonitorCounterStringAMD");
    glGetPerfMonitorCountersAMD = new Function<void, GLuint, GLint *, GLint *, GLsizei, GLuint *>("glGetPerfMonitorCountersAMD");
    glGetPerfMonitorGroupStringAMD = new Function<void, GLuint, GLsizei, GLsizei *, GLchar *>("glGetPerfMonitorGroupStringAMD");
    glGetPerfMonitorGroupsAMD = new Function<void, GLint *, GLsizei, GLuint *>("glGetPerfMonitorGroupsAMD");
    glGetPerfQueryDataINTEL = new Function<void, GLuint, GLuint, GLsizei, GLvoid *, GLuint *>("glGetPerfQueryDataINTEL");
    glGetPerfQueryIdByNameINTEL = new Function<void, GLchar *, GLuint *>("glGetPerfQueryIdByNameINTEL");
    glGetPerfQueryInfoINTEL = new Function<void, GLuint, GLuint, GLchar *, GLuint *, GLuint *, GLuint *, GLuint *>("glGetPerfQueryInfoINTEL");
    glGetPixelMapfv = new Function<void, GLenum, GLfloat *>("glGetPixelMapfv");
    glGetPixelMapuiv = new Function<void, GLenum, GLuint *>("glGetPixelMapuiv");
    glGetPixelMapusv = new Function<void, GLenum, GLushort *>("glGetPixelMapusv");
    glGetPixelMapxv = new Function<void, GLenum, GLint, GLfixed *>("glGetPixelMapxv");
    glGetPixelTexGenParameterfvSGIS = new Function<void, GLenum, GLfloat *>("glGetPixelTexGenParameterfvSGIS");
    glGetPixelTexGenParameterivSGIS = new Function<void, GLenum, GLint *>("glGetPixelTexGenParameterivSGIS");
    glGetPixelTransformParameterfvEXT = new Function<void, GLenum, GLenum, GLfloat *>("glGetPixelTransformParameterfvEXT");
    glGetPixelTransformParameterivEXT = new Function<void, GLenum, GLenum, GLint *>("glGetPixelTransformParameterivEXT");
    glGetPointerIndexedvEXT = new Function<void, GLenum, GLuint, void **>("glGetPointerIndexedvEXT");
    glGetPointeri_vEXT = new Function<void, GLenum, GLuint, void **>("glGetPointeri_vEXT");
    glGetPointerv = new Function<void, GLenum, void **>("glGetPointerv");
    glGetPointervEXT = new Function<void, GLenum, void **>("glGetPointervEXT");
    glGetPolygonStipple = new Function<void, GLubyte *>("glGetPolygonStipple");
    glGetProgramBinary = new Function<void, GLuint, GLsizei, GLsizei *, GLenum *, void *>("glGetProgramBinary");
    glGetProgramEnvParameterIivNV = new Function<void, GLenum, GLuint, GLint *>("glGetProgramEnvParameterIivNV");
    glGetProgramEnvParameterIuivNV = new Function<void, GLenum, GLuint, GLuint *>("glGetProgramEnvParameterIuivNV");
    glGetProgramEnvParameterdvARB = new Function<void, GLenum, GLuint, GLdouble *>("glGetProgramEnvParameterdvARB");
    glGetProgramEnvParameterfvARB = new Function<void, GLenum, GLuint, GLfloat *>("glGetProgramEnvParameterfvARB");
    glGetProgramInfoLog = new Function<void, GLuint, GLsizei, GLsizei *, GLchar *>("glGetProgramInfoLog");
    glGetProgramInterfaceiv = new Function<void, GLuint, GLenum, GLenum, GLint *>("glGetProgramInterfaceiv");
    glGetProgramLocalParameterIivNV = new Function<void, GLenum, GLuint, GLint *>("glGetProgramLocalParameterIivNV");
    glGetProgramLocalParameterIuivNV = new Function<void, GLenum, GLuint, GLuint *>("glGetProgramLocalParameterIuivNV");
    glGetProgramLocalParameterdvARB = new Function<void, GLenum, GLuint, GLdouble *>("glGetProgramLocalParameterdvARB");
    glGetProgramLocalParameterfvARB = new Function<void, GLenum, GLuint, GLfloat *>("glGetProgramLocalParameterfvARB");
    glGetProgramNamedParameterdvNV = new Function<void, GLuint, GLsizei, const GLubyte *, GLdouble *>("glGetProgramNamedParameterdvNV");
    glGetProgramNamedParameterfvNV = new Function<void, GLuint, GLsizei, const GLubyte *, GLfloat *>("glGetProgramNamedParameterfvNV");
    glGetProgramParameterdvNV = new Function<void, GLenum, GLuint, GLenum, GLdouble *>("glGetProgramParameterdvNV");
    glGetProgramParameterfvNV = new Function<void, GLenum, GLuint, GLenum, GLfloat *>("glGetProgramParameterfvNV");
    glGetProgramPipelineInfoLog = new Function<void, GLuint, GLsizei, GLsizei *, GLchar *>("glGetProgramPipelineInfoLog");
    glGetProgramPipelineiv = new Function<void, GLuint, GLenum, GLint *>("glGetProgramPipelineiv");
    glGetProgramResourceIndex = new Function<GLuint, GLuint, GLenum, const GLchar *>("glGetProgramResourceIndex");
    glGetProgramResourceLocation = new Function<GLint, GLuint, GLenum, const GLchar *>("glGetProgramResourceLocation");
    glGetProgramResourceLocationIndex = new Function<GLint, GLuint, GLenum, const GLchar *>("glGetProgramResourceLocationIndex");
    glGetProgramResourceName = new Function<void, GLuint, GLenum, GLuint, GLsizei, GLsizei *, GLchar *>("glGetProgramResourceName");
    glGetProgramResourcefvNV = new Function<void, GLuint, GLenum, GLuint, GLsizei, const GLenum *, GLsizei, GLsizei *, GLfloat *>("glGetProgramResourcefvNV");
    glGetProgramResourceiv = new Function<void, GLuint, GLenum, GLuint, GLsizei, const GLenum *, GLsizei, GLsizei *, GLint *>("glGetProgramResourceiv");
    glGetProgramStageiv = new Function<void, GLuint, GLenum, GLenum, GLint *>("glGetProgramStageiv");
    glGetProgramStringARB = new Function<void, GLenum, GLenum, void *>("glGetProgramStringARB");
    glGetProgramStringNV = new Function<void, GLuint, GLenum, GLubyte *>("glGetProgramStringNV");
    glGetProgramSubroutineParameteruivNV = new Function<void, GLenum, GLuint, GLuint *>("glGetProgramSubroutineParameteruivNV");
    glGetProgramiv = new Function<void, GLuint, GLenum, GLint *>("glGetProgramiv");
    glGetProgramivARB = new Function<void, GLenum, GLenum, GLint *>("glGetProgramivARB");
    glGetProgramivNV = new Function<void, GLuint, GLenum, GLint *>("glGetProgramivNV");
    glGetQueryIndexediv = new Function<void, GLenum, GLuint, GLenum, GLint *>("glGetQueryIndexediv");
    glGetQueryObjecti64v = new Function<void, GLuint, GLenum, GLint64 *>("glGetQueryObjecti64v");
    glGetQueryObjecti64vEXT = new Function<void, GLuint, GLenum, GLint64 *>("glGetQueryObjecti64vEXT");
    glGetQueryObjectiv = new Function<void, GLuint, GLenum, GLint *>("glGetQueryObjectiv");
    glGetQueryObjectivARB = new Function<void, GLuint, GLenum, GLint *>("glGetQueryObjectivARB");
    glGetQueryObjectui64v = new Function<void, GLuint, GLenum, GLuint64 *>("glGetQueryObjectui64v");
    glGetQueryObjectui64vEXT = new Function<void, GLuint, GLenum, GLuint64 *>("glGetQueryObjectui64vEXT");
    glGetQueryObjectuiv = new Function<void, GLuint, GLenum, GLuint *>("glGetQueryObjectuiv");
    glGetQueryObjectuivARB = new Function<void, GLuint, GLenum, GLuint *>("glGetQueryObjectuivARB");
    glGetQueryiv = new Function<void, GLenum, GLenum, GLint *>("glGetQueryiv");
    glGetQueryivARB = new Function<void, GLenum, GLenum, GLint *>("glGetQueryivARB");
    glGetRenderbufferParameteriv = new Function<void, GLenum, GLenum, GLint *>("glGetRenderbufferParameteriv");
    glGetRenderbufferParameterivEXT = new Function<void, GLenum, GLenum, GLint *>("glGetRenderbufferParameterivEXT");
    glGetSamplerParameterIiv = new Function<void, GLuint, GLenum, GLint *>("glGetSamplerParameterIiv");
    glGetSamplerParameterIuiv = new Function<void, GLuint, GLenum, GLuint *>("glGetSamplerParameterIuiv");
    glGetSamplerParameterfv = new Function<void, GLuint, GLenum, GLfloat *>("glGetSamplerParameterfv");
    glGetSamplerParameteriv = new Function<void, GLuint, GLenum, GLint *>("glGetSamplerParameteriv");
    glGetSeparableFilter = new Function<void, GLenum, GLenum, GLenum, void *, void *, void *>("glGetSeparableFilter");
    glGetSeparableFilterEXT = new Function<void, GLenum, GLenum, GLenum, void *, void *, void *>("glGetSeparableFilterEXT");
    glGetShaderInfoLog = new Function<void, GLuint, GLsizei, GLsizei *, GLchar *>("glGetShaderInfoLog");
    glGetShaderPrecisionFormat = new Function<void, GLenum, GLenum, GLint *, GLint *>("glGetShaderPrecisionFormat");
    glGetShaderSource = new Function<void, GLuint, GLsizei, GLsizei *, GLchar *>("glGetShaderSource");
    glGetShaderSourceARB = new Function<void, GLhandleARB, GLsizei, GLsizei *, GLcharARB *>("glGetShaderSourceARB");
    glGetShaderiv = new Function<void, GLuint, GLenum, GLint *>("glGetShaderiv");
    glGetSharpenTexFuncSGIS = new Function<void, GLenum, GLfloat *>("glGetSharpenTexFuncSGIS");
    glGetString = new Function<const GLubyte *, GLenum>("glGetString");
    glGetStringi = new Function<const GLubyte *, GLenum, GLuint>("glGetStringi");
    glGetSubroutineIndex = new Function<GLuint, GLuint, GLenum, const GLchar *>("glGetSubroutineIndex");
    glGetSubroutineUniformLocation = new Function<GLint, GLuint, GLenum, const GLchar *>("glGetSubroutineUniformLocation");
    glGetSynciv = new Function<void, GLsync, GLenum, GLsizei, GLsizei *, GLint *>("glGetSynciv");
    glGetTexBumpParameterfvATI = new Function<void, GLenum, GLfloat *>("glGetTexBumpParameterfvATI");
    glGetTexBumpParameterivATI = new Function<void, GLenum, GLint *>("glGetTexBumpParameterivATI");
    glGetTexEnvfv = new Function<void, GLenum, GLenum, GLfloat *>("glGetTexEnvfv");
    glGetTexEnviv = new Function<void, GLenum, GLenum, GLint *>("glGetTexEnviv");
    glGetTexEnvxvOES = new Function<void, GLenum, GLenum, GLfixed *>("glGetTexEnvxvOES");
    glGetTexFilterFuncSGIS = new Function<void, GLenum, GLenum, GLfloat *>("glGetTexFilterFuncSGIS");
    glGetTexGendv = new Function<void, GLenum, GLenum, GLdouble *>("glGetTexGendv");
    glGetTexGenfv = new Function<void, GLenum, GLenum, GLfloat *>("glGetTexGenfv");
    glGetTexGeniv = new Function<void, GLenum, GLenum, GLint *>("glGetTexGeniv");
    glGetTexGenxvOES = new Function<void, GLenum, GLenum, GLfixed *>("glGetTexGenxvOES");
    glGetTexImage = new Function<void, GLenum, GLint, GLenum, GLenum, void *>("glGetTexImage");
    glGetTexLevelParameterfv = new Function<void, GLenum, GLint, GLenum, GLfloat *>("glGetTexLevelParameterfv");
    glGetTexLevelParameteriv = new Function<void, GLenum, GLint, GLenum, GLint *>("glGetTexLevelParameteriv");
    glGetTexLevelParameterxvOES = new Function<void, GLenum, GLint, GLenum, GLfixed *>("glGetTexLevelParameterxvOES");
    glGetTexParameterIiv = new Function<void, GLenum, GLenum, GLint *>("glGetTexParameterIiv");
    glGetTexParameterIivEXT = new Function<void, GLenum, GLenum, GLint *>("glGetTexParameterIivEXT");
    glGetTexParameterIuiv = new Function<void, GLenum, GLenum, GLuint *>("glGetTexParameterIuiv");
    glGetTexParameterIuivEXT = new Function<void, GLenum, GLenum, GLuint *>("glGetTexParameterIuivEXT");
    glGetTexParameterPointervAPPLE = new Function<void, GLenum, GLenum, void **>("glGetTexParameterPointervAPPLE");
    glGetTexParameterfv = new Function<void, GLenum, GLenum, GLfloat *>("glGetTexParameterfv");
    glGetTexParameteriv = new Function<void, GLenum, GLenum, GLint *>("glGetTexParameteriv");
    glGetTexParameterxvOES = new Function<void, GLenum, GLenum, GLfixed *>("glGetTexParameterxvOES");
    glGetTextureHandleARB = new Function<GLuint64, GLuint>("glGetTextureHandleARB");
    glGetTextureHandleNV = new Function<GLuint64, GLuint>("glGetTextureHandleNV");
    glGetTextureImageEXT = new Function<void, GLuint, GLenum, GLint, GLenum, GLenum, void *>("glGetTextureImageEXT");
    glGetTextureLevelParameterfvEXT = new Function<void, GLuint, GLenum, GLint, GLenum, GLfloat *>("glGetTextureLevelParameterfvEXT");
    glGetTextureLevelParameterivEXT = new Function<void, GLuint, GLenum, GLint, GLenum, GLint *>("glGetTextureLevelParameterivEXT");
    glGetTextureParameterIivEXT = new Function<void, GLuint, GLenum, GLenum, GLint *>("glGetTextureParameterIivEXT");
    glGetTextureParameterIuivEXT = new Function<void, GLuint, GLenum, GLenum, GLuint *>("glGetTextureParameterIuivEXT");
    glGetTextureParameterfvEXT = new Function<void, GLuint, GLenum, GLenum, GLfloat *>("glGetTextureParameterfvEXT");
    glGetTextureParameterivEXT = new Function<void, GLuint, GLenum, GLenum, GLint *>("glGetTextureParameterivEXT");
    glGetTextureSamplerHandleARB = new Function<GLuint64, GLuint, GLuint>("glGetTextureSamplerHandleARB");
    glGetTextureSamplerHandleNV = new Function<GLuint64, GLuint, GLuint>("glGetTextureSamplerHandleNV");
    glGetTrackMatrixivNV = new Function<void, GLenum, GLuint, GLenum, GLint *>("glGetTrackMatrixivNV");
    glGetTransformFeedbackVarying = new Function<void, GLuint, GLuint, GLsizei, GLsizei *, GLsizei *, GLenum *, GLchar *>("glGetTransformFeedbackVarying");
    glGetTransformFeedbackVaryingEXT = new Function<void, GLuint, GLuint, GLsizei, GLsizei *, GLsizei *, GLenum *, GLchar *>("glGetTransformFeedbackVaryingEXT");
    glGetTransformFeedbackVaryingNV = new Function<void, GLuint, GLuint, GLint *>("glGetTransformFeedbackVaryingNV");
    glGetUniformBlockIndex = new Function<GLuint, GLuint, const GLchar *>("glGetUniformBlockIndex");
    glGetUniformBufferSizeEXT = new Function<GLint, GLuint, GLint>("glGetUniformBufferSizeEXT");
    glGetUniformIndices = new Function<void, GLuint, GLsizei, const GLchar *const*, GLuint *>("glGetUniformIndices");
    glGetUniformLocation = new Function<GLint, GLuint, const GLchar *>("glGetUniformLocation");
    glGetUniformLocationARB = new Function<GLint, GLhandleARB, const GLcharARB *>("glGetUniformLocationARB");
    glGetUniformOffsetEXT = new Function<GLintptr, GLuint, GLint>("glGetUniformOffsetEXT");
    glGetUniformSubroutineuiv = new Function<void, GLenum, GLint, GLuint *>("glGetUniformSubroutineuiv");
    glGetUniformdv = new Function<void, GLuint, GLint, GLdouble *>("glGetUniformdv");
    glGetUniformfv = new Function<void, GLuint, GLint, GLfloat *>("glGetUniformfv");
    glGetUniformfvARB = new Function<void, GLhandleARB, GLint, GLfloat *>("glGetUniformfvARB");
    glGetUniformi64vNV = new Function<void, GLuint, GLint, GLint64EXT *>("glGetUniformi64vNV");
    glGetUniformiv = new Function<void, GLuint, GLint, GLint *>("glGetUniformiv");
    glGetUniformivARB = new Function<void, GLhandleARB, GLint, GLint *>("glGetUniformivARB");
    glGetUniformui64vNV = new Function<void, GLuint, GLint, GLuint64EXT *>("glGetUniformui64vNV");
    glGetUniformuiv = new Function<void, GLuint, GLint, GLuint *>("glGetUniformuiv");
    glGetUniformuivEXT = new Function<void, GLuint, GLint, GLuint *>("glGetUniformuivEXT");
    glGetVariantArrayObjectfvATI = new Function<void, GLuint, GLenum, GLfloat *>("glGetVariantArrayObjectfvATI");
    glGetVariantArrayObjectivATI = new Function<void, GLuint, GLenum, GLint *>("glGetVariantArrayObjectivATI");
    glGetVariantBooleanvEXT = new Function<void, GLuint, GLenum, GLboolean *>("glGetVariantBooleanvEXT");
    glGetVariantFloatvEXT = new Function<void, GLuint, GLenum, GLfloat *>("glGetVariantFloatvEXT");
    glGetVariantIntegervEXT = new Function<void, GLuint, GLenum, GLint *>("glGetVariantIntegervEXT");
    glGetVariantPointervEXT = new Function<void, GLuint, GLenum, void **>("glGetVariantPointervEXT");
    glGetVaryingLocationNV = new Function<GLint, GLuint, const GLchar *>("glGetVaryingLocationNV");
    glGetVertexArrayIntegeri_vEXT = new Function<void, GLuint, GLuint, GLenum, GLint *>("glGetVertexArrayIntegeri_vEXT");
    glGetVertexArrayIntegervEXT = new Function<void, GLuint, GLenum, GLint *>("glGetVertexArrayIntegervEXT");
    glGetVertexArrayPointeri_vEXT = new Function<void, GLuint, GLuint, GLenum, void **>("glGetVertexArrayPointeri_vEXT");
    glGetVertexArrayPointervEXT = new Function<void, GLuint, GLenum, void **>("glGetVertexArrayPointervEXT");
    glGetVertexAttribArrayObjectfvATI = new Function<void, GLuint, GLenum, GLfloat *>("glGetVertexAttribArrayObjectfvATI");
    glGetVertexAttribArrayObjectivATI = new Function<void, GLuint, GLenum, GLint *>("glGetVertexAttribArrayObjectivATI");
    glGetVertexAttribIiv = new Function<void, GLuint, GLenum, GLint *>("glGetVertexAttribIiv");
    glGetVertexAttribIivEXT = new Function<void, GLuint, GLenum, GLint *>("glGetVertexAttribIivEXT");
    glGetVertexAttribIuiv = new Function<void, GLuint, GLenum, GLuint *>("glGetVertexAttribIuiv");
    glGetVertexAttribIuivEXT = new Function<void, GLuint, GLenum, GLuint *>("glGetVertexAttribIuivEXT");
    glGetVertexAttribLdv = new Function<void, GLuint, GLenum, GLdouble *>("glGetVertexAttribLdv");
    glGetVertexAttribLdvEXT = new Function<void, GLuint, GLenum, GLdouble *>("glGetVertexAttribLdvEXT");
    glGetVertexAttribLi64vNV = new Function<void, GLuint, GLenum, GLint64EXT *>("glGetVertexAttribLi64vNV");
    glGetVertexAttribLui64vARB = new Function<void, GLuint, GLenum, GLuint64EXT *>("glGetVertexAttribLui64vARB");
    glGetVertexAttribLui64vNV = new Function<void, GLuint, GLenum, GLuint64EXT *>("glGetVertexAttribLui64vNV");
    glGetVertexAttribPointerv = new Function<void, GLuint, GLenum, void **>("glGetVertexAttribPointerv");
    glGetVertexAttribPointervARB = new Function<void, GLuint, GLenum, void **>("glGetVertexAttribPointervARB");
    glGetVertexAttribPointervNV = new Function<void, GLuint, GLenum, void **>("glGetVertexAttribPointervNV");
    glGetVertexAttribdv = new Function<void, GLuint, GLenum, GLdouble *>("glGetVertexAttribdv");
    glGetVertexAttribdvARB = new Function<void, GLuint, GLenum, GLdouble *>("glGetVertexAttribdvARB");
    glGetVertexAttribdvNV = new Function<void, GLuint, GLenum, GLdouble *>("glGetVertexAttribdvNV");
    glGetVertexAttribfv = new Function<void, GLuint, GLenum, GLfloat *>("glGetVertexAttribfv");
    glGetVertexAttribfvARB = new Function<void, GLuint, GLenum, GLfloat *>("glGetVertexAttribfvARB");
    glGetVertexAttribfvNV = new Function<void, GLuint, GLenum, GLfloat *>("glGetVertexAttribfvNV");
    glGetVertexAttribiv = new Function<void, GLuint, GLenum, GLint *>("glGetVertexAttribiv");
    glGetVertexAttribivARB = new Function<void, GLuint, GLenum, GLint *>("glGetVertexAttribivARB");
    glGetVertexAttribivNV = new Function<void, GLuint, GLenum, GLint *>("glGetVertexAttribivNV");
    glGetVideoCaptureStreamdvNV = new Function<void, GLuint, GLuint, GLenum, GLdouble *>("glGetVideoCaptureStreamdvNV");
    glGetVideoCaptureStreamfvNV = new Function<void, GLuint, GLuint, GLenum, GLfloat *>("glGetVideoCaptureStreamfvNV");
    glGetVideoCaptureStreamivNV = new Function<void, GLuint, GLuint, GLenum, GLint *>("glGetVideoCaptureStreamivNV");
    glGetVideoCaptureivNV = new Function<void, GLuint, GLenum, GLint *>("glGetVideoCaptureivNV");
    glGetVideoi64vNV = new Function<void, GLuint, GLenum, GLint64EXT *>("glGetVideoi64vNV");
    glGetVideoivNV = new Function<void, GLuint, GLenum, GLint *>("glGetVideoivNV");
    glGetVideoui64vNV = new Function<void, GLuint, GLenum, GLuint64EXT *>("glGetVideoui64vNV");
    glGetVideouivNV = new Function<void, GLuint, GLenum, GLuint *>("glGetVideouivNV");
    glGetnColorTableARB = new Function<void, GLenum, GLenum, GLenum, GLsizei, void *>("glGetnColorTableARB");
    glGetnCompressedTexImageARB = new Function<void, GLenum, GLint, GLsizei, void *>("glGetnCompressedTexImageARB");
    glGetnConvolutionFilterARB = new Function<void, GLenum, GLenum, GLenum, GLsizei, void *>("glGetnConvolutionFilterARB");
    glGetnHistogramARB = new Function<void, GLenum, GLboolean, GLenum, GLenum, GLsizei, void *>("glGetnHistogramARB");
    glGetnMapdvARB = new Function<void, GLenum, GLenum, GLsizei, GLdouble *>("glGetnMapdvARB");
    glGetnMapfvARB = new Function<void, GLenum, GLenum, GLsizei, GLfloat *>("glGetnMapfvARB");
    glGetnMapivARB = new Function<void, GLenum, GLenum, GLsizei, GLint *>("glGetnMapivARB");
    glGetnMinmaxARB = new Function<void, GLenum, GLboolean, GLenum, GLenum, GLsizei, void *>("glGetnMinmaxARB");
    glGetnPixelMapfvARB = new Function<void, GLenum, GLsizei, GLfloat *>("glGetnPixelMapfvARB");
    glGetnPixelMapuivARB = new Function<void, GLenum, GLsizei, GLuint *>("glGetnPixelMapuivARB");
    glGetnPixelMapusvARB = new Function<void, GLenum, GLsizei, GLushort *>("glGetnPixelMapusvARB");
    glGetnPolygonStippleARB = new Function<void, GLsizei, GLubyte *>("glGetnPolygonStippleARB");
    glGetnSeparableFilterARB = new Function<void, GLenum, GLenum, GLenum, GLsizei, void *, GLsizei, void *, void *>("glGetnSeparableFilterARB");
    glGetnTexImageARB = new Function<void, GLenum, GLint, GLenum, GLenum, GLsizei, void *>("glGetnTexImageARB");
    glGetnUniformdvARB = new Function<void, GLuint, GLint, GLsizei, GLdouble *>("glGetnUniformdvARB");
    glGetnUniformfvARB = new Function<void, GLuint, GLint, GLsizei, GLfloat *>("glGetnUniformfvARB");
    glGetnUniformivARB = new Function<void, GLuint, GLint, GLsizei, GLint *>("glGetnUniformivARB");
    glGetnUniformuivARB = new Function<void, GLuint, GLint, GLsizei, GLuint *>("glGetnUniformuivARB");
    glGlobalAlphaFactorbSUN = new Function<void, GLbyte>("glGlobalAlphaFactorbSUN");
    glGlobalAlphaFactordSUN = new Function<void, GLdouble>("glGlobalAlphaFactordSUN");
    glGlobalAlphaFactorfSUN = new Function<void, GLfloat>("glGlobalAlphaFactorfSUN");
    glGlobalAlphaFactoriSUN = new Function<void, GLint>("glGlobalAlphaFactoriSUN");
    glGlobalAlphaFactorsSUN = new Function<void, GLshort>("glGlobalAlphaFactorsSUN");
    glGlobalAlphaFactorubSUN = new Function<void, GLubyte>("glGlobalAlphaFactorubSUN");
    glGlobalAlphaFactoruiSUN = new Function<void, GLuint>("glGlobalAlphaFactoruiSUN");
    glGlobalAlphaFactorusSUN = new Function<void, GLushort>("glGlobalAlphaFactorusSUN");
    glHint = new Function<void, GLenum, GLenum>("glHint");
    glHintPGI = new Function<void, GLenum, GLint>("glHintPGI");
    glHistogram = new Function<void, GLenum, GLsizei, GLenum, GLboolean>("glHistogram");
    glHistogramEXT = new Function<void, GLenum, GLsizei, GLenum, GLboolean>("glHistogramEXT");
    glIglooInterfaceSGIX = new Function<void, GLenum, const void *>("glIglooInterfaceSGIX");
    glImageTransformParameterfHP = new Function<void, GLenum, GLenum, GLfloat>("glImageTransformParameterfHP");
    glImageTransformParameterfvHP = new Function<void, GLenum, GLenum, const GLfloat *>("glImageTransformParameterfvHP");
    glImageTransformParameteriHP = new Function<void, GLenum, GLenum, GLint>("glImageTransformParameteriHP");
    glImageTransformParameterivHP = new Function<void, GLenum, GLenum, const GLint *>("glImageTransformParameterivHP");
    glImportSyncEXT = new Function<GLsync, GLenum, GLintptr, UnusedMask>("glImportSyncEXT");
    glIndexFormatNV = new Function<void, GLenum, GLsizei>("glIndexFormatNV");
    glIndexFuncEXT = new Function<void, GLenum, GLclampf>("glIndexFuncEXT");
    glIndexMask = new Function<void, GLuint>("glIndexMask");
    glIndexMaterialEXT = new Function<void, GLenum, GLenum>("glIndexMaterialEXT");
    glIndexPointer = new Function<void, GLenum, GLsizei, const void *>("glIndexPointer");
    glIndexPointerEXT = new Function<void, GLenum, GLsizei, GLsizei, const void *>("glIndexPointerEXT");
    glIndexPointerListIBM = new Function<void, GLenum, GLint, const void **, GLint>("glIndexPointerListIBM");
    glIndexd = new Function<void, GLdouble>("glIndexd");
    glIndexdv = new Function<void, const GLdouble *>("glIndexdv");
    glIndexf = new Function<void, GLfloat>("glIndexf");
    glIndexfv = new Function<void, const GLfloat *>("glIndexfv");
    glIndexi = new Function<void, GLint>("glIndexi");
    glIndexiv = new Function<void, const GLint *>("glIndexiv");
    glIndexs = new Function<void, GLshort>("glIndexs");
    glIndexsv = new Function<void, const GLshort *>("glIndexsv");
    glIndexub = new Function<void, GLubyte>("glIndexub");
    glIndexubv = new Function<void, const GLubyte *>("glIndexubv");
    glIndexxOES = new Function<void, GLfixed>("glIndexxOES");
    glIndexxvOES = new Function<void, const GLfixed *>("glIndexxvOES");
    glInitNames = new Function<void>("glInitNames");
    glInsertComponentEXT = new Function<void, GLuint, GLuint, GLuint>("glInsertComponentEXT");
    glInsertEventMarkerEXT = new Function<void, GLsizei, const GLchar *>("glInsertEventMarkerEXT");
    glInstrumentsBufferSGIX = new Function<void, GLsizei, GLint *>("glInstrumentsBufferSGIX");
    glInterleavedArrays = new Function<void, GLenum, GLsizei, const void *>("glInterleavedArrays");
    glInterpolatePathsNV = new Function<void, GLuint, GLuint, GLuint, GLfloat>("glInterpolatePathsNV");
    glInvalidateBufferData = new Function<void, GLuint>("glInvalidateBufferData");
    glInvalidateBufferSubData = new Function<void, GLuint, GLintptr, GLsizeiptr>("glInvalidateBufferSubData");
    glInvalidateFramebuffer = new Function<void, GLenum, GLsizei, const GLenum *>("glInvalidateFramebuffer");
    glInvalidateSubFramebuffer = new Function<void, GLenum, GLsizei, const GLenum *, GLint, GLint, GLsizei, GLsizei>("glInvalidateSubFramebuffer");
    glInvalidateTexImage = new Function<void, GLuint, GLint>("glInvalidateTexImage");
    glInvalidateTexSubImage = new Function<void, GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei>("glInvalidateTexSubImage");
    glIsAsyncMarkerSGIX = new Function<GLboolean, GLuint>("glIsAsyncMarkerSGIX");
    glIsBuffer = new Function<GLboolean, GLuint>("glIsBuffer");
    glIsBufferARB = new Function<GLboolean, GLuint>("glIsBufferARB");
    glIsBufferResidentNV = new Function<GLboolean, GLenum>("glIsBufferResidentNV");
    glIsEnabled = new Function<GLboolean, GLenum>("glIsEnabled");
    glIsEnabledIndexedEXT = new Function<GLboolean, GLenum, GLuint>("glIsEnabledIndexedEXT");
    glIsEnabledi = new Function<GLboolean, GLenum, GLuint>("glIsEnabledi");
    glIsFenceAPPLE = new Function<GLboolean, GLuint>("glIsFenceAPPLE");
    glIsFenceNV = new Function<GLboolean, GLuint>("glIsFenceNV");
    glIsFramebuffer = new Function<GLboolean, GLuint>("glIsFramebuffer");
    glIsFramebufferEXT = new Function<GLboolean, GLuint>("glIsFramebufferEXT");
    glIsImageHandleResidentARB = new Function<GLboolean, GLuint64>("glIsImageHandleResidentARB");
    glIsImageHandleResidentNV = new Function<GLboolean, GLuint64>("glIsImageHandleResidentNV");
    glIsList = new Function<GLboolean, GLuint>("glIsList");
    glIsNameAMD = new Function<GLboolean, GLenum, GLuint>("glIsNameAMD");
    glIsNamedBufferResidentNV = new Function<GLboolean, GLuint>("glIsNamedBufferResidentNV");
    glIsNamedStringARB = new Function<GLboolean, GLint, const GLchar *>("glIsNamedStringARB");
    glIsObjectBufferATI = new Function<GLboolean, GLuint>("glIsObjectBufferATI");
    glIsOcclusionQueryNV = new Function<GLboolean, GLuint>("glIsOcclusionQueryNV");
    glIsPathNV = new Function<GLboolean, GLuint>("glIsPathNV");
    glIsPointInFillPathNV = new Function<GLboolean, GLuint, GLuint, GLfloat, GLfloat>("glIsPointInFillPathNV");
    glIsPointInStrokePathNV = new Function<GLboolean, GLuint, GLfloat, GLfloat>("glIsPointInStrokePathNV");
    glIsProgram = new Function<GLboolean, GLuint>("glIsProgram");
    glIsProgramARB = new Function<GLboolean, GLuint>("glIsProgramARB");
    glIsProgramNV = new Function<GLboolean, GLuint>("glIsProgramNV");
    glIsProgramPipeline = new Function<GLboolean, GLuint>("glIsProgramPipeline");
    glIsQuery = new Function<GLboolean, GLuint>("glIsQuery");
    glIsQueryARB = new Function<GLboolean, GLuint>("glIsQueryARB");
    glIsRenderbuffer = new Function<GLboolean, GLuint>("glIsRenderbuffer");
    glIsRenderbufferEXT = new Function<GLboolean, GLuint>("glIsRenderbufferEXT");
    glIsSampler = new Function<GLboolean, GLuint>("glIsSampler");
    glIsShader = new Function<GLboolean, GLuint>("glIsShader");
    glIsSync = new Function<GLboolean, GLsync>("glIsSync");
    glIsTexture = new Function<GLboolean, GLuint>("glIsTexture");
    glIsTextureEXT = new Function<GLboolean, GLuint>("glIsTextureEXT");
    glIsTextureHandleResidentARB = new Function<GLboolean, GLuint64>("glIsTextureHandleResidentARB");
    glIsTextureHandleResidentNV = new Function<GLboolean, GLuint64>("glIsTextureHandleResidentNV");
    glIsTransformFeedback = new Function<GLboolean, GLuint>("glIsTransformFeedback");
    glIsTransformFeedbackNV = new Function<GLboolean, GLuint>("glIsTransformFeedbackNV");
    glIsVariantEnabledEXT = new Function<GLboolean, GLuint, GLenum>("glIsVariantEnabledEXT");
    glIsVertexArray = new Function<GLboolean, GLuint>("glIsVertexArray");
    glIsVertexArrayAPPLE = new Function<GLboolean, GLuint>("glIsVertexArrayAPPLE");
    glIsVertexAttribEnabledAPPLE = new Function<GLboolean, GLuint, GLenum>("glIsVertexAttribEnabledAPPLE");
    glLabelObjectEXT = new Function<void, GLenum, GLuint, GLsizei, const GLchar *>("glLabelObjectEXT");
    glLightEnviSGIX = new Function<void, GLenum, GLint>("glLightEnviSGIX");
    glLightModelf = new Function<void, GLenum, GLfloat>("glLightModelf");
    glLightModelfv = new Function<void, GLenum, const GLfloat *>("glLightModelfv");
    glLightModeli = new Function<void, GLenum, GLint>("glLightModeli");
    glLightModeliv = new Function<void, GLenum, const GLint *>("glLightModeliv");
    glLightModelxOES = new Function<void, GLenum, GLfixed>("glLightModelxOES");
    glLightModelxvOES = new Function<void, GLenum, const GLfixed *>("glLightModelxvOES");
    glLightf = new Function<void, GLenum, GLenum, GLfloat>("glLightf");
    glLightfv = new Function<void, GLenum, GLenum, const GLfloat *>("glLightfv");
    glLighti = new Function<void, GLenum, GLenum, GLint>("glLighti");
    glLightiv = new Function<void, GLenum, GLenum, const GLint *>("glLightiv");
    glLightxOES = new Function<void, GLenum, GLenum, GLfixed>("glLightxOES");
    glLightxvOES = new Function<void, GLenum, GLenum, const GLfixed *>("glLightxvOES");
    glLineStipple = new Function<void, GLint, GLushort>("glLineStipple");
    glLineWidth = new Function<void, GLfloat>("glLineWidth");
    glLineWidthxOES = new Function<void, GLfixed>("glLineWidthxOES");
    glLinkProgram = new Function<void, GLuint>("glLinkProgram");
    glLinkProgramARB = new Function<void, GLhandleARB>("glLinkProgramARB");
    glListBase = new Function<void, GLuint>("glListBase");
    glListParameterfSGIX = new Function<void, GLuint, GLenum, GLfloat>("glListParameterfSGIX");
    glListParameterfvSGIX = new Function<void, GLuint, GLenum, const GLfloat *>("glListParameterfvSGIX");
    glListParameteriSGIX = new Function<void, GLuint, GLenum, GLint>("glListParameteriSGIX");
    glListParameterivSGIX = new Function<void, GLuint, GLenum, const GLint *>("glListParameterivSGIX");
    glLoadIdentity = new Function<void>("glLoadIdentity");
    glLoadIdentityDeformationMapSGIX = new Function<void, FfdMaskSGIX>("glLoadIdentityDeformationMapSGIX");
    glLoadMatrixd = new Function<void, const GLdouble *>("glLoadMatrixd");
    glLoadMatrixf = new Function<void, const GLfloat *>("glLoadMatrixf");
    glLoadMatrixxOES = new Function<void, const GLfixed *>("glLoadMatrixxOES");
    glLoadName = new Function<void, GLuint>("glLoadName");
    glLoadProgramNV = new Function<void, GLenum, GLuint, GLsizei, const GLubyte *>("glLoadProgramNV");
    glLoadTransposeMatrixd = new Function<void, const GLdouble *>("glLoadTransposeMatrixd");
    glLoadTransposeMatrixdARB = new Function<void, const GLdouble *>("glLoadTransposeMatrixdARB");
    glLoadTransposeMatrixf = new Function<void, const GLfloat *>("glLoadTransposeMatrixf");
    glLoadTransposeMatrixfARB = new Function<void, const GLfloat *>("glLoadTransposeMatrixfARB");
    glLoadTransposeMatrixxOES = new Function<void, const GLfixed *>("glLoadTransposeMatrixxOES");
    glLockArraysEXT = new Function<void, GLint, GLsizei>("glLockArraysEXT");
    glLogicOp = new Function<void, GLenum>("glLogicOp");
    glMakeBufferNonResidentNV = new Function<void, GLenum>("glMakeBufferNonResidentNV");
    glMakeBufferResidentNV = new Function<void, GLenum, GLenum>("glMakeBufferResidentNV");
    glMakeImageHandleNonResidentARB = new Function<void, GLuint64>("glMakeImageHandleNonResidentARB");
    glMakeImageHandleNonResidentNV = new Function<void, GLuint64>("glMakeImageHandleNonResidentNV");
    glMakeImageHandleResidentARB = new Function<void, GLuint64, GLenum>("glMakeImageHandleResidentARB");
    glMakeImageHandleResidentNV = new Function<void, GLuint64, GLenum>("glMakeImageHandleResidentNV");
    glMakeNamedBufferNonResidentNV = new Function<void, GLuint>("glMakeNamedBufferNonResidentNV");
    glMakeNamedBufferResidentNV = new Function<void, GLuint, GLenum>("glMakeNamedBufferResidentNV");
    glMakeTextureHandleNonResidentARB = new Function<void, GLuint64>("glMakeTextureHandleNonResidentARB");
    glMakeTextureHandleNonResidentNV = new Function<void, GLuint64>("glMakeTextureHandleNonResidentNV");
    glMakeTextureHandleResidentARB = new Function<void, GLuint64>("glMakeTextureHandleResidentARB");
    glMakeTextureHandleResidentNV = new Function<void, GLuint64>("glMakeTextureHandleResidentNV");
    glMap1d = new Function<void, GLenum, GLdouble, GLdouble, GLint, GLint, const GLdouble *>("glMap1d");
    glMap1f = new Function<void, GLenum, GLfloat, GLfloat, GLint, GLint, const GLfloat *>("glMap1f");
    glMap1xOES = new Function<void, GLenum, GLfixed, GLfixed, GLint, GLint, GLfixed>("glMap1xOES");
    glMap2d = new Function<void, GLenum, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, const GLdouble *>("glMap2d");
    glMap2f = new Function<void, GLenum, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, const GLfloat *>("glMap2f");
    glMap2xOES = new Function<void, GLenum, GLfixed, GLfixed, GLint, GLint, GLfixed, GLfixed, GLint, GLint, GLfixed>("glMap2xOES");
    glMapBuffer = new Function<void *, GLenum, GLenum>("glMapBuffer");
    glMapBufferARB = new Function<void *, GLenum, GLenum>("glMapBufferARB");
    glMapBufferRange = new Function<void *, GLenum, GLintptr, GLsizeiptr, BufferAccessMask>("glMapBufferRange");
    glMapControlPointsNV = new Function<void, GLenum, GLuint, GLenum, GLsizei, GLsizei, GLint, GLint, GLboolean, const void *>("glMapControlPointsNV");
    glMapGrid1d = new Function<void, GLint, GLdouble, GLdouble>("glMapGrid1d");
    glMapGrid1f = new Function<void, GLint, GLfloat, GLfloat>("glMapGrid1f");
    glMapGrid1xOES = new Function<void, GLint, GLfixed, GLfixed>("glMapGrid1xOES");
    glMapGrid2d = new Function<void, GLint, GLdouble, GLdouble, GLint, GLdouble, GLdouble>("glMapGrid2d");
    glMapGrid2f = new Function<void, GLint, GLfloat, GLfloat, GLint, GLfloat, GLfloat>("glMapGrid2f");
    glMapGrid2xOES = new Function<void, GLint, GLfixed, GLfixed, GLfixed, GLfixed>("glMapGrid2xOES");
    glMapNamedBufferEXT = new Function<void *, GLuint, GLenum>("glMapNamedBufferEXT");
    glMapNamedBufferRangeEXT = new Function<void *, GLuint, GLintptr, GLsizeiptr, BufferAccessMask>("glMapNamedBufferRangeEXT");
    glMapObjectBufferATI = new Function<void *, GLuint>("glMapObjectBufferATI");
    glMapParameterfvNV = new Function<void, GLenum, GLenum, const GLfloat *>("glMapParameterfvNV");
    glMapParameterivNV = new Function<void, GLenum, GLenum, const GLint *>("glMapParameterivNV");
    glMapTexture2DINTEL = new Function<void *, GLuint, GLint, MapBufferUsageMask, GLint *, GLenum *>("glMapTexture2DINTEL");
    glMapVertexAttrib1dAPPLE = new Function<void, GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, const GLdouble *>("glMapVertexAttrib1dAPPLE");
    glMapVertexAttrib1fAPPLE = new Function<void, GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, const GLfloat *>("glMapVertexAttrib1fAPPLE");
    glMapVertexAttrib2dAPPLE = new Function<void, GLuint, GLuint, GLdouble, GLdouble, GLint, GLint, GLdouble, GLdouble, GLint, GLint, const GLdouble *>("glMapVertexAttrib2dAPPLE");
    glMapVertexAttrib2fAPPLE = new Function<void, GLuint, GLuint, GLfloat, GLfloat, GLint, GLint, GLfloat, GLfloat, GLint, GLint, const GLfloat *>("glMapVertexAttrib2fAPPLE");
    glMaterialf = new Function<void, GLenum, GLenum, GLfloat>("glMaterialf");
    glMaterialfv = new Function<void, GLenum, GLenum, const GLfloat *>("glMaterialfv");
    glMateriali = new Function<void, GLenum, GLenum, GLint>("glMateriali");
    glMaterialiv = new Function<void, GLenum, GLenum, const GLint *>("glMaterialiv");
    glMaterialxOES = new Function<void, GLenum, GLenum, GLfixed>("glMaterialxOES");
    glMaterialxvOES = new Function<void, GLenum, GLenum, const GLfixed *>("glMaterialxvOES");
    glMatrixFrustumEXT = new Function<void, GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble>("glMatrixFrustumEXT");
    glMatrixIndexPointerARB = new Function<void, GLint, GLenum, GLsizei, const void *>("glMatrixIndexPointerARB");
    glMatrixIndexubvARB = new Function<void, GLint, const GLubyte *>("glMatrixIndexubvARB");
    glMatrixIndexuivARB = new Function<void, GLint, const GLuint *>("glMatrixIndexuivARB");
    glMatrixIndexusvARB = new Function<void, GLint, const GLushort *>("glMatrixIndexusvARB");
    glMatrixLoad3x2fNV = new Function<void, GLenum, const GLfloat *>("glMatrixLoad3x2fNV");
    glMatrixLoad3x3fNV = new Function<void, GLenum, const GLfloat *>("glMatrixLoad3x3fNV");
    glMatrixLoadIdentityEXT = new Function<void, GLenum>("glMatrixLoadIdentityEXT");
    glMatrixLoadTranspose3x3fNV = new Function<void, GLenum, const GLfloat *>("glMatrixLoadTranspose3x3fNV");
    glMatrixLoadTransposedEXT = new Function<void, GLenum, const GLdouble *>("glMatrixLoadTransposedEXT");
    glMatrixLoadTransposefEXT = new Function<void, GLenum, const GLfloat *>("glMatrixLoadTransposefEXT");
    glMatrixLoaddEXT = new Function<void, GLenum, const GLdouble *>("glMatrixLoaddEXT");
    glMatrixLoadfEXT = new Function<void, GLenum, const GLfloat *>("glMatrixLoadfEXT");
    glMatrixMode = new Function<void, GLenum>("glMatrixMode");
    glMatrixMult3x2fNV = new Function<void, GLenum, const GLfloat *>("glMatrixMult3x2fNV");
    glMatrixMult3x3fNV = new Function<void, GLenum, const GLfloat *>("glMatrixMult3x3fNV");
    glMatrixMultTranspose3x3fNV = new Function<void, GLenum, const GLfloat *>("glMatrixMultTranspose3x3fNV");
    glMatrixMultTransposedEXT = new Function<void, GLenum, const GLdouble *>("glMatrixMultTransposedEXT");
    glMatrixMultTransposefEXT = new Function<void, GLenum, const GLfloat *>("glMatrixMultTransposefEXT");
    glMatrixMultdEXT = new Function<void, GLenum, const GLdouble *>("glMatrixMultdEXT");
    glMatrixMultfEXT = new Function<void, GLenum, const GLfloat *>("glMatrixMultfEXT");
    glMatrixOrthoEXT = new Function<void, GLenum, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble>("glMatrixOrthoEXT");
    glMatrixPopEXT = new Function<void, GLenum>("glMatrixPopEXT");
    glMatrixPushEXT = new Function<void, GLenum>("glMatrixPushEXT");
    glMatrixRotatedEXT = new Function<void, GLenum, GLdouble, GLdouble, GLdouble, GLdouble>("glMatrixRotatedEXT");
    glMatrixRotatefEXT = new Function<void, GLenum, GLfloat, GLfloat, GLfloat, GLfloat>("glMatrixRotatefEXT");
    glMatrixScaledEXT = new Function<void, GLenum, GLdouble, GLdouble, GLdouble>("glMatrixScaledEXT");
    glMatrixScalefEXT = new Function<void, GLenum, GLfloat, GLfloat, GLfloat>("glMatrixScalefEXT");
    glMatrixTranslatedEXT = new Function<void, GLenum, GLdouble, GLdouble, GLdouble>("glMatrixTranslatedEXT");
    glMatrixTranslatefEXT = new Function<void, GLenum, GLfloat, GLfloat, GLfloat>("glMatrixTranslatefEXT");
    glMemoryBarrier = new Function<void, MemoryBarrierMask>("glMemoryBarrier");
    glMemoryBarrierEXT = new Function<void, MemoryBarrierMask>("glMemoryBarrierEXT");
    glMinSampleShading = new Function<void, GLfloat>("glMinSampleShading");
    glMinSampleShadingARB = new Function<void, GLfloat>("glMinSampleShadingARB");
    glMinmax = new Function<void, GLenum, GLenum, GLboolean>("glMinmax");
    glMinmaxEXT = new Function<void, GLenum, GLenum, GLboolean>("glMinmaxEXT");
    glMultMatrixd = new Function<void, const GLdouble *>("glMultMatrixd");
    glMultMatrixf = new Function<void, const GLfloat *>("glMultMatrixf");
    glMultMatrixxOES = new Function<void, const GLfixed *>("glMultMatrixxOES");
    glMultTransposeMatrixd = new Function<void, const GLdouble *>("glMultTransposeMatrixd");
    glMultTransposeMatrixdARB = new Function<void, const GLdouble *>("glMultTransposeMatrixdARB");
    glMultTransposeMatrixf = new Function<void, const GLfloat *>("glMultTransposeMatrixf");
    glMultTransposeMatrixfARB = new Function<void, const GLfloat *>("glMultTransposeMatrixfARB");
    glMultTransposeMatrixxOES = new Function<void, const GLfixed *>("glMultTransposeMatrixxOES");
    glMultiDrawArrays = new Function<void, GLenum, const GLint *, const GLsizei *, GLsizei>("glMultiDrawArrays");
    glMultiDrawArraysEXT = new Function<void, GLenum, const GLint *, const GLsizei *, GLsizei>("glMultiDrawArraysEXT");
    glMultiDrawArraysIndirect = new Function<void, GLenum, const void *, GLsizei, GLsizei>("glMultiDrawArraysIndirect");
    glMultiDrawArraysIndirectAMD = new Function<void, GLenum, const void *, GLsizei, GLsizei>("glMultiDrawArraysIndirectAMD");
    glMultiDrawArraysIndirectBindlessCountNV = new Function<void, GLenum, const void *, GLsizei, GLsizei, GLsizei, GLint>("glMultiDrawArraysIndirectBindlessCountNV");
    glMultiDrawArraysIndirectBindlessNV = new Function<void, GLenum, const void *, GLsizei, GLsizei, GLint>("glMultiDrawArraysIndirectBindlessNV");
    glMultiDrawArraysIndirectCountARB = new Function<void, GLenum, GLintptr, GLintptr, GLsizei, GLsizei>("glMultiDrawArraysIndirectCountARB");
    glMultiDrawElementArrayAPPLE = new Function<void, GLenum, const GLint *, const GLsizei *, GLsizei>("glMultiDrawElementArrayAPPLE");
    glMultiDrawElements = new Function<void, GLenum, const GLsizei *, GLenum, const void *const*, GLsizei>("glMultiDrawElements");
    glMultiDrawElementsBaseVertex = new Function<void, GLenum, const GLsizei *, GLenum, const void *const*, GLsizei, const GLint *>("glMultiDrawElementsBaseVertex");
    glMultiDrawElementsEXT = new Function<void, GLenum, const GLsizei *, GLenum, const void *const*, GLsizei>("glMultiDrawElementsEXT");
    glMultiDrawElementsIndirect = new Function<void, GLenum, GLenum, const void *, GLsizei, GLsizei>("glMultiDrawElementsIndirect");
    glMultiDrawElementsIndirectAMD = new Function<void, GLenum, GLenum, const void *, GLsizei, GLsizei>("glMultiDrawElementsIndirectAMD");
    glMultiDrawElementsIndirectBindlessCountNV = new Function<void, GLenum, GLenum, const void *, GLsizei, GLsizei, GLsizei, GLint>("glMultiDrawElementsIndirectBindlessCountNV");
    glMultiDrawElementsIndirectBindlessNV = new Function<void, GLenum, GLenum, const void *, GLsizei, GLsizei, GLint>("glMultiDrawElementsIndirectBindlessNV");
    glMultiDrawElementsIndirectCountARB = new Function<void, GLenum, GLenum, GLintptr, GLintptr, GLsizei, GLsizei>("glMultiDrawElementsIndirectCountARB");
    glMultiDrawRangeElementArrayAPPLE = new Function<void, GLenum, GLuint, GLuint, const GLint *, const GLsizei *, GLsizei>("glMultiDrawRangeElementArrayAPPLE");
    glMultiModeDrawArraysIBM = new Function<void, const GLenum *, const GLint *, const GLsizei *, GLsizei, GLint>("glMultiModeDrawArraysIBM");
    glMultiModeDrawElementsIBM = new Function<void, const GLenum *, const GLsizei *, GLenum, const void *const*, GLsizei, GLint>("glMultiModeDrawElementsIBM");
    glMultiTexBufferEXT = new Function<void, GLenum, GLenum, GLenum, GLuint>("glMultiTexBufferEXT");
    glMultiTexCoord1bOES = new Function<void, GLenum, GLbyte>("glMultiTexCoord1bOES");
    glMultiTexCoord1bvOES = new Function<void, GLenum, const GLbyte *>("glMultiTexCoord1bvOES");
    glMultiTexCoord1d = new Function<void, GLenum, GLdouble>("glMultiTexCoord1d");
    glMultiTexCoord1dARB = new Function<void, GLenum, GLdouble>("glMultiTexCoord1dARB");
    glMultiTexCoord1dv = new Function<void, GLenum, const GLdouble *>("glMultiTexCoord1dv");
    glMultiTexCoord1dvARB = new Function<void, GLenum, const GLdouble *>("glMultiTexCoord1dvARB");
    glMultiTexCoord1f = new Function<void, GLenum, GLfloat>("glMultiTexCoord1f");
    glMultiTexCoord1fARB = new Function<void, GLenum, GLfloat>("glMultiTexCoord1fARB");
    glMultiTexCoord1fv = new Function<void, GLenum, const GLfloat *>("glMultiTexCoord1fv");
    glMultiTexCoord1fvARB = new Function<void, GLenum, const GLfloat *>("glMultiTexCoord1fvARB");
    glMultiTexCoord1hNV = new Function<void, GLenum, GLhalfNV>("glMultiTexCoord1hNV");
    glMultiTexCoord1hvNV = new Function<void, GLenum, const GLhalfNV *>("glMultiTexCoord1hvNV");
    glMultiTexCoord1i = new Function<void, GLenum, GLint>("glMultiTexCoord1i");
    glMultiTexCoord1iARB = new Function<void, GLenum, GLint>("glMultiTexCoord1iARB");
    glMultiTexCoord1iv = new Function<void, GLenum, const GLint *>("glMultiTexCoord1iv");
    glMultiTexCoord1ivARB = new Function<void, GLenum, const GLint *>("glMultiTexCoord1ivARB");
    glMultiTexCoord1s = new Function<void, GLenum, GLshort>("glMultiTexCoord1s");
    glMultiTexCoord1sARB = new Function<void, GLenum, GLshort>("glMultiTexCoord1sARB");
    glMultiTexCoord1sv = new Function<void, GLenum, const GLshort *>("glMultiTexCoord1sv");
    glMultiTexCoord1svARB = new Function<void, GLenum, const GLshort *>("glMultiTexCoord1svARB");
    glMultiTexCoord1xOES = new Function<void, GLenum, GLfixed>("glMultiTexCoord1xOES");
    glMultiTexCoord1xvOES = new Function<void, GLenum, const GLfixed *>("glMultiTexCoord1xvOES");
    glMultiTexCoord2bOES = new Function<void, GLenum, GLbyte, GLbyte>("glMultiTexCoord2bOES");
    glMultiTexCoord2bvOES = new Function<void, GLenum, const GLbyte *>("glMultiTexCoord2bvOES");
    glMultiTexCoord2d = new Function<void, GLenum, GLdouble, GLdouble>("glMultiTexCoord2d");
    glMultiTexCoord2dARB = new Function<void, GLenum, GLdouble, GLdouble>("glMultiTexCoord2dARB");
    glMultiTexCoord2dv = new Function<void, GLenum, const GLdouble *>("glMultiTexCoord2dv");
    glMultiTexCoord2dvARB = new Function<void, GLenum, const GLdouble *>("glMultiTexCoord2dvARB");
    glMultiTexCoord2f = new Function<void, GLenum, GLfloat, GLfloat>("glMultiTexCoord2f");
    glMultiTexCoord2fARB = new Function<void, GLenum, GLfloat, GLfloat>("glMultiTexCoord2fARB");
    glMultiTexCoord2fv = new Function<void, GLenum, const GLfloat *>("glMultiTexCoord2fv");
    glMultiTexCoord2fvARB = new Function<void, GLenum, const GLfloat *>("glMultiTexCoord2fvARB");
    glMultiTexCoord2hNV = new Function<void, GLenum, GLhalfNV, GLhalfNV>("glMultiTexCoord2hNV");
    glMultiTexCoord2hvNV = new Function<void, GLenum, const GLhalfNV *>("glMultiTexCoord2hvNV");
    glMultiTexCoord2i = new Function<void, GLenum, GLint, GLint>("glMultiTexCoord2i");
    glMultiTexCoord2iARB = new Function<void, GLenum, GLint, GLint>("glMultiTexCoord2iARB");
    glMultiTexCoord2iv = new Function<void, GLenum, const GLint *>("glMultiTexCoord2iv");
    glMultiTexCoord2ivARB = new Function<void, GLenum, const GLint *>("glMultiTexCoord2ivARB");
    glMultiTexCoord2s = new Function<void, GLenum, GLshort, GLshort>("glMultiTexCoord2s");
    glMultiTexCoord2sARB = new Function<void, GLenum, GLshort, GLshort>("glMultiTexCoord2sARB");
    glMultiTexCoord2sv = new Function<void, GLenum, const GLshort *>("glMultiTexCoord2sv");
    glMultiTexCoord2svARB = new Function<void, GLenum, const GLshort *>("glMultiTexCoord2svARB");
    glMultiTexCoord2xOES = new Function<void, GLenum, GLfixed, GLfixed>("glMultiTexCoord2xOES");
    glMultiTexCoord2xvOES = new Function<void, GLenum, const GLfixed *>("glMultiTexCoord2xvOES");
    glMultiTexCoord3bOES = new Function<void, GLenum, GLbyte, GLbyte, GLbyte>("glMultiTexCoord3bOES");
    glMultiTexCoord3bvOES = new Function<void, GLenum, const GLbyte *>("glMultiTexCoord3bvOES");
    glMultiTexCoord3d = new Function<void, GLenum, GLdouble, GLdouble, GLdouble>("glMultiTexCoord3d");
    glMultiTexCoord3dARB = new Function<void, GLenum, GLdouble, GLdouble, GLdouble>("glMultiTexCoord3dARB");
    glMultiTexCoord3dv = new Function<void, GLenum, const GLdouble *>("glMultiTexCoord3dv");
    glMultiTexCoord3dvARB = new Function<void, GLenum, const GLdouble *>("glMultiTexCoord3dvARB");
    glMultiTexCoord3f = new Function<void, GLenum, GLfloat, GLfloat, GLfloat>("glMultiTexCoord3f");
    glMultiTexCoord3fARB = new Function<void, GLenum, GLfloat, GLfloat, GLfloat>("glMultiTexCoord3fARB");
    glMultiTexCoord3fv = new Function<void, GLenum, const GLfloat *>("glMultiTexCoord3fv");
    glMultiTexCoord3fvARB = new Function<void, GLenum, const GLfloat *>("glMultiTexCoord3fvARB");
    glMultiTexCoord3hNV = new Function<void, GLenum, GLhalfNV, GLhalfNV, GLhalfNV>("glMultiTexCoord3hNV");
    glMultiTexCoord3hvNV = new Function<void, GLenum, const GLhalfNV *>("glMultiTexCoord3hvNV");
    glMultiTexCoord3i = new Function<void, GLenum, GLint, GLint, GLint>("glMultiTexCoord3i");
    glMultiTexCoord3iARB = new Function<void, GLenum, GLint, GLint, GLint>("glMultiTexCoord3iARB");
    glMultiTexCoord3iv = new Function<void, GLenum, const GLint *>("glMultiTexCoord3iv");
    glMultiTexCoord3ivARB = new Function<void, GLenum, const GLint *>("glMultiTexCoord3ivARB");
    glMultiTexCoord3s = new Function<void, GLenum, GLshort, GLshort, GLshort>("glMultiTexCoord3s");
    glMultiTexCoord3sARB = new Function<void, GLenum, GLshort, GLshort, GLshort>("glMultiTexCoord3sARB");
    glMultiTexCoord3sv = new Function<void, GLenum, const GLshort *>("glMultiTexCoord3sv");
    glMultiTexCoord3svARB = new Function<void, GLenum, const GLshort *>("glMultiTexCoord3svARB");
    glMultiTexCoord3xOES = new Function<void, GLenum, GLfixed, GLfixed, GLfixed>("glMultiTexCoord3xOES");
    glMultiTexCoord3xvOES = new Function<void, GLenum, const GLfixed *>("glMultiTexCoord3xvOES");
    glMultiTexCoord4bOES = new Function<void, GLenum, GLbyte, GLbyte, GLbyte, GLbyte>("glMultiTexCoord4bOES");
    glMultiTexCoord4bvOES = new Function<void, GLenum, const GLbyte *>("glMultiTexCoord4bvOES");
    glMultiTexCoord4d = new Function<void, GLenum, GLdouble, GLdouble, GLdouble, GLdouble>("glMultiTexCoord4d");
    glMultiTexCoord4dARB = new Function<void, GLenum, GLdouble, GLdouble, GLdouble, GLdouble>("glMultiTexCoord4dARB");
    glMultiTexCoord4dv = new Function<void, GLenum, const GLdouble *>("glMultiTexCoord4dv");
    glMultiTexCoord4dvARB = new Function<void, GLenum, const GLdouble *>("glMultiTexCoord4dvARB");
    glMultiTexCoord4f = new Function<void, GLenum, GLfloat, GLfloat, GLfloat, GLfloat>("glMultiTexCoord4f");
    glMultiTexCoord4fARB = new Function<void, GLenum, GLfloat, GLfloat, GLfloat, GLfloat>("glMultiTexCoord4fARB");
    glMultiTexCoord4fv = new Function<void, GLenum, const GLfloat *>("glMultiTexCoord4fv");
    glMultiTexCoord4fvARB = new Function<void, GLenum, const GLfloat *>("glMultiTexCoord4fvARB");
    glMultiTexCoord4hNV = new Function<void, GLenum, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV>("glMultiTexCoord4hNV");
    glMultiTexCoord4hvNV = new Function<void, GLenum, const GLhalfNV *>("glMultiTexCoord4hvNV");
    glMultiTexCoord4i = new Function<void, GLenum, GLint, GLint, GLint, GLint>("glMultiTexCoord4i");
    glMultiTexCoord4iARB = new Function<void, GLenum, GLint, GLint, GLint, GLint>("glMultiTexCoord4iARB");
    glMultiTexCoord4iv = new Function<void, GLenum, const GLint *>("glMultiTexCoord4iv");
    glMultiTexCoord4ivARB = new Function<void, GLenum, const GLint *>("glMultiTexCoord4ivARB");
    glMultiTexCoord4s = new Function<void, GLenum, GLshort, GLshort, GLshort, GLshort>("glMultiTexCoord4s");
    glMultiTexCoord4sARB = new Function<void, GLenum, GLshort, GLshort, GLshort, GLshort>("glMultiTexCoord4sARB");
    glMultiTexCoord4sv = new Function<void, GLenum, const GLshort *>("glMultiTexCoord4sv");
    glMultiTexCoord4svARB = new Function<void, GLenum, const GLshort *>("glMultiTexCoord4svARB");
    glMultiTexCoord4xOES = new Function<void, GLenum, GLfixed, GLfixed, GLfixed, GLfixed>("glMultiTexCoord4xOES");
    glMultiTexCoord4xvOES = new Function<void, GLenum, const GLfixed *>("glMultiTexCoord4xvOES");
    glMultiTexCoordP1ui = new Function<void, GLenum, GLenum, GLuint>("glMultiTexCoordP1ui");
    glMultiTexCoordP1uiv = new Function<void, GLenum, GLenum, const GLuint *>("glMultiTexCoordP1uiv");
    glMultiTexCoordP2ui = new Function<void, GLenum, GLenum, GLuint>("glMultiTexCoordP2ui");
    glMultiTexCoordP2uiv = new Function<void, GLenum, GLenum, const GLuint *>("glMultiTexCoordP2uiv");
    glMultiTexCoordP3ui = new Function<void, GLenum, GLenum, GLuint>("glMultiTexCoordP3ui");
    glMultiTexCoordP3uiv = new Function<void, GLenum, GLenum, const GLuint *>("glMultiTexCoordP3uiv");
    glMultiTexCoordP4ui = new Function<void, GLenum, GLenum, GLuint>("glMultiTexCoordP4ui");
    glMultiTexCoordP4uiv = new Function<void, GLenum, GLenum, const GLuint *>("glMultiTexCoordP4uiv");
    glMultiTexCoordPointerEXT = new Function<void, GLenum, GLint, GLenum, GLsizei, const void *>("glMultiTexCoordPointerEXT");
    glMultiTexEnvfEXT = new Function<void, GLenum, GLenum, GLenum, GLfloat>("glMultiTexEnvfEXT");
    glMultiTexEnvfvEXT = new Function<void, GLenum, GLenum, GLenum, const GLfloat *>("glMultiTexEnvfvEXT");
    glMultiTexEnviEXT = new Function<void, GLenum, GLenum, GLenum, GLint>("glMultiTexEnviEXT");
    glMultiTexEnvivEXT = new Function<void, GLenum, GLenum, GLenum, const GLint *>("glMultiTexEnvivEXT");
    glMultiTexGendEXT = new Function<void, GLenum, GLenum, GLenum, GLdouble>("glMultiTexGendEXT");
    glMultiTexGendvEXT = new Function<void, GLenum, GLenum, GLenum, const GLdouble *>("glMultiTexGendvEXT");
    glMultiTexGenfEXT = new Function<void, GLenum, GLenum, GLenum, GLfloat>("glMultiTexGenfEXT");
    glMultiTexGenfvEXT = new Function<void, GLenum, GLenum, GLenum, const GLfloat *>("glMultiTexGenfvEXT");
    glMultiTexGeniEXT = new Function<void, GLenum, GLenum, GLenum, GLint>("glMultiTexGeniEXT");
    glMultiTexGenivEXT = new Function<void, GLenum, GLenum, GLenum, const GLint *>("glMultiTexGenivEXT");
    glMultiTexImage1DEXT = new Function<void, GLenum, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, const void *>("glMultiTexImage1DEXT");
    glMultiTexImage2DEXT = new Function<void, GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, const void *>("glMultiTexImage2DEXT");
    glMultiTexImage3DEXT = new Function<void, GLenum, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, const void *>("glMultiTexImage3DEXT");
    glMultiTexParameterIivEXT = new Function<void, GLenum, GLenum, GLenum, const GLint *>("glMultiTexParameterIivEXT");
    glMultiTexParameterIuivEXT = new Function<void, GLenum, GLenum, GLenum, const GLuint *>("glMultiTexParameterIuivEXT");
    glMultiTexParameterfEXT = new Function<void, GLenum, GLenum, GLenum, GLfloat>("glMultiTexParameterfEXT");
    glMultiTexParameterfvEXT = new Function<void, GLenum, GLenum, GLenum, const GLfloat *>("glMultiTexParameterfvEXT");
    glMultiTexParameteriEXT = new Function<void, GLenum, GLenum, GLenum, GLint>("glMultiTexParameteriEXT");
    glMultiTexParameterivEXT = new Function<void, GLenum, GLenum, GLenum, const GLint *>("glMultiTexParameterivEXT");
    glMultiTexRenderbufferEXT = new Function<void, GLenum, GLenum, GLuint>("glMultiTexRenderbufferEXT");
    glMultiTexSubImage1DEXT = new Function<void, GLenum, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, const void *>("glMultiTexSubImage1DEXT");
    glMultiTexSubImage2DEXT = new Function<void, GLenum, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const void *>("glMultiTexSubImage2DEXT");
    glMultiTexSubImage3DEXT = new Function<void, GLenum, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, const void *>("glMultiTexSubImage3DEXT");
    glNamedBufferDataEXT = new Function<void, GLuint, GLsizeiptr, const void *, GLenum>("glNamedBufferDataEXT");
    glNamedBufferStorageEXT = new Function<void, GLuint, GLsizeiptr, const void *, MapBufferUsageMask>("glNamedBufferStorageEXT");
    glNamedBufferSubDataEXT = new Function<void, GLuint, GLintptr, GLsizeiptr, const void *>("glNamedBufferSubDataEXT");
    glNamedCopyBufferSubDataEXT = new Function<void, GLuint, GLuint, GLintptr, GLintptr, GLsizeiptr>("glNamedCopyBufferSubDataEXT");
    glNamedFramebufferParameteriEXT = new Function<void, GLuint, GLenum, GLint>("glNamedFramebufferParameteriEXT");
    glNamedFramebufferRenderbufferEXT = new Function<void, GLuint, GLenum, GLenum, GLuint>("glNamedFramebufferRenderbufferEXT");
    glNamedFramebufferTexture1DEXT = new Function<void, GLuint, GLenum, GLenum, GLuint, GLint>("glNamedFramebufferTexture1DEXT");
    glNamedFramebufferTexture2DEXT = new Function<void, GLuint, GLenum, GLenum, GLuint, GLint>("glNamedFramebufferTexture2DEXT");
    glNamedFramebufferTexture3DEXT = new Function<void, GLuint, GLenum, GLenum, GLuint, GLint, GLint>("glNamedFramebufferTexture3DEXT");
    glNamedFramebufferTextureEXT = new Function<void, GLuint, GLenum, GLuint, GLint>("glNamedFramebufferTextureEXT");
    glNamedFramebufferTextureFaceEXT = new Function<void, GLuint, GLenum, GLuint, GLint, GLenum>("glNamedFramebufferTextureFaceEXT");
    glNamedFramebufferTextureLayerEXT = new Function<void, GLuint, GLenum, GLuint, GLint, GLint>("glNamedFramebufferTextureLayerEXT");
    glNamedProgramLocalParameter4dEXT = new Function<void, GLuint, GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble>("glNamedProgramLocalParameter4dEXT");
    glNamedProgramLocalParameter4dvEXT = new Function<void, GLuint, GLenum, GLuint, const GLdouble *>("glNamedProgramLocalParameter4dvEXT");
    glNamedProgramLocalParameter4fEXT = new Function<void, GLuint, GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat>("glNamedProgramLocalParameter4fEXT");
    glNamedProgramLocalParameter4fvEXT = new Function<void, GLuint, GLenum, GLuint, const GLfloat *>("glNamedProgramLocalParameter4fvEXT");
    glNamedProgramLocalParameterI4iEXT = new Function<void, GLuint, GLenum, GLuint, GLint, GLint, GLint, GLint>("glNamedProgramLocalParameterI4iEXT");
    glNamedProgramLocalParameterI4ivEXT = new Function<void, GLuint, GLenum, GLuint, const GLint *>("glNamedProgramLocalParameterI4ivEXT");
    glNamedProgramLocalParameterI4uiEXT = new Function<void, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint, GLuint>("glNamedProgramLocalParameterI4uiEXT");
    glNamedProgramLocalParameterI4uivEXT = new Function<void, GLuint, GLenum, GLuint, const GLuint *>("glNamedProgramLocalParameterI4uivEXT");
    glNamedProgramLocalParameters4fvEXT = new Function<void, GLuint, GLenum, GLuint, GLsizei, const GLfloat *>("glNamedProgramLocalParameters4fvEXT");
    glNamedProgramLocalParametersI4ivEXT = new Function<void, GLuint, GLenum, GLuint, GLsizei, const GLint *>("glNamedProgramLocalParametersI4ivEXT");
    glNamedProgramLocalParametersI4uivEXT = new Function<void, GLuint, GLenum, GLuint, GLsizei, const GLuint *>("glNamedProgramLocalParametersI4uivEXT");
    glNamedProgramStringEXT = new Function<void, GLuint, GLenum, GLenum, GLsizei, const void *>("glNamedProgramStringEXT");
    glNamedRenderbufferStorageEXT = new Function<void, GLuint, GLenum, GLsizei, GLsizei>("glNamedRenderbufferStorageEXT");
    glNamedRenderbufferStorageMultisampleCoverageEXT = new Function<void, GLuint, GLsizei, GLsizei, GLenum, GLsizei, GLsizei>("glNamedRenderbufferStorageMultisampleCoverageEXT");
    glNamedRenderbufferStorageMultisampleEXT = new Function<void, GLuint, GLsizei, GLenum, GLsizei, GLsizei>("glNamedRenderbufferStorageMultisampleEXT");
    glNamedStringARB = new Function<void, GLenum, GLint, const GLchar *, GLint, const GLchar *>("glNamedStringARB");
    glNewList = new Function<void, GLuint, GLenum>("glNewList");
    glNewObjectBufferATI = new Function<GLuint, GLsizei, const void *, GLenum>("glNewObjectBufferATI");
    glNormal3b = new Function<void, GLbyte, GLbyte, GLbyte>("glNormal3b");
    glNormal3bv = new Function<void, const GLbyte *>("glNormal3bv");
    glNormal3d = new Function<void, GLdouble, GLdouble, GLdouble>("glNormal3d");
    glNormal3dv = new Function<void, const GLdouble *>("glNormal3dv");
    glNormal3f = new Function<void, GLfloat, GLfloat, GLfloat>("glNormal3f");
    glNormal3fVertex3fSUN = new Function<void, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat>("glNormal3fVertex3fSUN");
    glNormal3fVertex3fvSUN = new Function<void, const GLfloat *, const GLfloat *>("glNormal3fVertex3fvSUN");
    glNormal3fv = new Function<void, const GLfloat *>("glNormal3fv");
    glNormal3hNV = new Function<void, GLhalfNV, GLhalfNV, GLhalfNV>("glNormal3hNV");
    glNormal3hvNV = new Function<void, const GLhalfNV *>("glNormal3hvNV");
    glNormal3i = new Function<void, GLint, GLint, GLint>("glNormal3i");
    glNormal3iv = new Function<void, const GLint *>("glNormal3iv");
    glNormal3s = new Function<void, GLshort, GLshort, GLshort>("glNormal3s");
    glNormal3sv = new Function<void, const GLshort *>("glNormal3sv");
    glNormal3xOES = new Function<void, GLfixed, GLfixed, GLfixed>("glNormal3xOES");
    glNormal3xvOES = new Function<void, const GLfixed *>("glNormal3xvOES");
    glNormalFormatNV = new Function<void, GLenum, GLsizei>("glNormalFormatNV");
    glNormalP3ui = new Function<void, GLenum, GLuint>("glNormalP3ui");
    glNormalP3uiv = new Function<void, GLenum, const GLuint *>("glNormalP3uiv");
    glNormalPointer = new Function<void, GLenum, GLsizei, const void *>("glNormalPointer");
    glNormalPointerEXT = new Function<void, GLenum, GLsizei, GLsizei, const void *>("glNormalPointerEXT");
    glNormalPointerListIBM = new Function<void, GLenum, GLint, const void **, GLint>("glNormalPointerListIBM");
    glNormalPointervINTEL = new Function<void, GLenum, const void **>("glNormalPointervINTEL");
    glNormalStream3bATI = new Function<void, GLenum, GLbyte, GLbyte, GLbyte>("glNormalStream3bATI");
    glNormalStream3bvATI = new Function<void, GLenum, const GLbyte *>("glNormalStream3bvATI");
    glNormalStream3dATI = new Function<void, GLenum, GLdouble, GLdouble, GLdouble>("glNormalStream3dATI");
    glNormalStream3dvATI = new Function<void, GLenum, const GLdouble *>("glNormalStream3dvATI");
    glNormalStream3fATI = new Function<void, GLenum, GLfloat, GLfloat, GLfloat>("glNormalStream3fATI");
    glNormalStream3fvATI = new Function<void, GLenum, const GLfloat *>("glNormalStream3fvATI");
    glNormalStream3iATI = new Function<void, GLenum, GLint, GLint, GLint>("glNormalStream3iATI");
    glNormalStream3ivATI = new Function<void, GLenum, const GLint *>("glNormalStream3ivATI");
    glNormalStream3sATI = new Function<void, GLenum, GLshort, GLshort, GLshort>("glNormalStream3sATI");
    glNormalStream3svATI = new Function<void, GLenum, const GLshort *>("glNormalStream3svATI");
    glObjectLabel = new Function<void, GLenum, GLuint, GLsizei, const GLchar *>("glObjectLabel");
    glObjectPtrLabel = new Function<void, const void *, GLsizei, const GLchar *>("glObjectPtrLabel");
    glObjectPurgeableAPPLE = new Function<GLenum, GLenum, GLuint, GLenum>("glObjectPurgeableAPPLE");
    glObjectUnpurgeableAPPLE = new Function<GLenum, GLenum, GLuint, GLenum>("glObjectUnpurgeableAPPLE");
    glOrtho = new Function<void, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble, GLdouble>("glOrtho");
    glOrthofOES = new Function<void, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat>("glOrthofOES");
    glOrthoxOES = new Function<void, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed, GLfixed>("glOrthoxOES");
    glPNTrianglesfATI = new Function<void, GLenum, GLfloat>("glPNTrianglesfATI");
    glPNTrianglesiATI = new Function<void, GLenum, GLint>("glPNTrianglesiATI");
    glPassTexCoordATI = new Function<void, GLuint, GLuint, GLenum>("glPassTexCoordATI");
    glPassThrough = new Function<void, GLfloat>("glPassThrough");
    glPassThroughxOES = new Function<void, GLfixed>("glPassThroughxOES");
    glPatchParameterfv = new Function<void, GLenum, const GLfloat *>("glPatchParameterfv");
    glPatchParameteri = new Function<void, GLenum, GLint>("glPatchParameteri");
    glPathColorGenNV = new Function<void, GLenum, GLenum, GLenum, const GLfloat *>("glPathColorGenNV");
    glPathCommandsNV = new Function<void, GLuint, GLsizei, const GLubyte *, GLsizei, GLenum, const void *>("glPathCommandsNV");
    glPathCoordsNV = new Function<void, GLuint, GLsizei, GLenum, const void *>("glPathCoordsNV");
    glPathCoverDepthFuncNV = new Function<void, GLenum>("glPathCoverDepthFuncNV");
    glPathDashArrayNV = new Function<void, GLuint, GLsizei, const GLfloat *>("glPathDashArrayNV");
    glPathFogGenNV = new Function<void, GLenum>("glPathFogGenNV");
    glPathGlyphIndexArrayNV = new Function<GLenum, GLuint, GLenum, const void *, PathFontStyle, GLuint, GLsizei, GLuint, GLfloat>("glPathGlyphIndexArrayNV");
    glPathGlyphIndexRangeNV = new Function<GLenum, GLenum, const void *, PathFontStyle, GLuint, GLfloat, GLuint_array_2>("glPathGlyphIndexRangeNV");
    glPathGlyphRangeNV = new Function<void, GLuint, GLenum, const void *, PathFontStyle, GLuint, GLsizei, GLenum, GLuint, GLfloat>("glPathGlyphRangeNV");
    glPathGlyphsNV = new Function<void, GLuint, GLenum, const void *, PathFontStyle, GLsizei, GLenum, const void *, GLenum, GLuint, GLfloat>("glPathGlyphsNV");
    glPathMemoryGlyphIndexArrayNV = new Function<GLenum, GLuint, GLenum, GLsizeiptr, const void *, GLsizei, GLuint, GLsizei, GLuint, GLfloat>("glPathMemoryGlyphIndexArrayNV");
    glPathParameterfNV = new Function<void, GLuint, GLenum, GLfloat>("glPathParameterfNV");
    glPathParameterfvNV = new Function<void, GLuint, GLenum, const GLfloat *>("glPathParameterfvNV");
    glPathParameteriNV = new Function<void, GLuint, GLenum, GLint>("glPathParameteriNV");
    glPathParameterivNV = new Function<void, GLuint, GLenum, const GLint *>("glPathParameterivNV");
    glPathStencilDepthOffsetNV = new Function<void, GLfloat, GLfloat>("glPathStencilDepthOffsetNV");
    glPathStencilFuncNV = new Function<void, GLenum, GLint, GLuint>("glPathStencilFuncNV");
    glPathStringNV = new Function<void, GLuint, GLenum, GLsizei, const void *>("glPathStringNV");
    glPathSubCommandsNV = new Function<void, GLuint, GLsizei, GLsizei, GLsizei, const GLubyte *, GLsizei, GLenum, const void *>("glPathSubCommandsNV");
    glPathSubCoordsNV = new Function<void, GLuint, GLsizei, GLsizei, GLenum, const void *>("glPathSubCoordsNV");
    glPathTexGenNV = new Function<void, GLenum, GLenum, GLint, const GLfloat *>("glPathTexGenNV");
    glPauseTransformFeedback = new Function<void>("glPauseTransformFeedback");
    glPauseTransformFeedbackNV = new Function<void>("glPauseTransformFeedbackNV");
    glPixelDataRangeNV = new Function<void, GLenum, GLsizei, const void *>("glPixelDataRangeNV");
    glPixelMapfv = new Function<void, GLenum, GLsizei, const GLfloat *>("glPixelMapfv");
    glPixelMapuiv = new Function<void, GLenum, GLsizei, const GLuint *>("glPixelMapuiv");
    glPixelMapusv = new Function<void, GLenum, GLsizei, const GLushort *>("glPixelMapusv");
    glPixelMapx = new Function<void, GLenum, GLint, const GLfixed *>("glPixelMapx");
    glPixelStoref = new Function<void, GLenum, GLfloat>("glPixelStoref");
    glPixelStorei = new Function<void, GLenum, GLint>("glPixelStorei");
    glPixelStorex = new Function<void, GLenum, GLfixed>("glPixelStorex");
    glPixelTexGenParameterfSGIS = new Function<void, GLenum, GLfloat>("glPixelTexGenParameterfSGIS");
    glPixelTexGenParameterfvSGIS = new Function<void, GLenum, const GLfloat *>("glPixelTexGenParameterfvSGIS");
    glPixelTexGenParameteriSGIS = new Function<void, GLenum, GLint>("glPixelTexGenParameteriSGIS");
    glPixelTexGenParameterivSGIS = new Function<void, GLenum, const GLint *>("glPixelTexGenParameterivSGIS");
    glPixelTexGenSGIX = new Function<void, GLenum>("glPixelTexGenSGIX");
    glPixelTransferf = new Function<void, GLenum, GLfloat>("glPixelTransferf");
    glPixelTransferi = new Function<void, GLenum, GLint>("glPixelTransferi");
    glPixelTransferxOES = new Function<void, GLenum, GLfixed>("glPixelTransferxOES");
    glPixelTransformParameterfEXT = new Function<void, GLenum, GLenum, GLfloat>("glPixelTransformParameterfEXT");
    glPixelTransformParameterfvEXT = new Function<void, GLenum, GLenum, const GLfloat *>("glPixelTransformParameterfvEXT");
    glPixelTransformParameteriEXT = new Function<void, GLenum, GLenum, GLint>("glPixelTransformParameteriEXT");
    glPixelTransformParameterivEXT = new Function<void, GLenum, GLenum, const GLint *>("glPixelTransformParameterivEXT");
    glPixelZoom = new Function<void, GLfloat, GLfloat>("glPixelZoom");
    glPixelZoomxOES = new Function<void, GLfixed, GLfixed>("glPixelZoomxOES");
    glPointAlongPathNV = new Function<GLboolean, GLuint, GLsizei, GLsizei, GLfloat, GLfloat *, GLfloat *, GLfloat *, GLfloat *>("glPointAlongPathNV");
    glPointParameterf = new Function<void, GLenum, GLfloat>("glPointParameterf");
    glPointParameterfARB = new Function<void, GLenum, GLfloat>("glPointParameterfARB");
    glPointParameterfEXT = new Function<void, GLenum, GLfloat>("glPointParameterfEXT");
    glPointParameterfSGIS = new Function<void, GLenum, GLfloat>("glPointParameterfSGIS");
    glPointParameterfv = new Function<void, GLenum, const GLfloat *>("glPointParameterfv");
    glPointParameterfvARB = new Function<void, GLenum, const GLfloat *>("glPointParameterfvARB");
    glPointParameterfvEXT = new Function<void, GLenum, const GLfloat *>("glPointParameterfvEXT");
    glPointParameterfvSGIS = new Function<void, GLenum, const GLfloat *>("glPointParameterfvSGIS");
    glPointParameteri = new Function<void, GLenum, GLint>("glPointParameteri");
    glPointParameteriNV = new Function<void, GLenum, GLint>("glPointParameteriNV");
    glPointParameteriv = new Function<void, GLenum, const GLint *>("glPointParameteriv");
    glPointParameterivNV = new Function<void, GLenum, const GLint *>("glPointParameterivNV");
    glPointParameterxvOES = new Function<void, GLenum, const GLfixed *>("glPointParameterxvOES");
    glPointSize = new Function<void, GLfloat>("glPointSize");
    glPointSizexOES = new Function<void, GLfixed>("glPointSizexOES");
    glPollAsyncSGIX = new Function<GLint, GLuint *>("glPollAsyncSGIX");
    glPollInstrumentsSGIX = new Function<GLint, GLint *>("glPollInstrumentsSGIX");
    glPolygonMode = new Function<void, GLenum, GLenum>("glPolygonMode");
    glPolygonOffset = new Function<void, GLfloat, GLfloat>("glPolygonOffset");
    glPolygonOffsetEXT = new Function<void, GLfloat, GLfloat>("glPolygonOffsetEXT");
    glPolygonOffsetxOES = new Function<void, GLfixed, GLfixed>("glPolygonOffsetxOES");
    glPolygonStipple = new Function<void, const GLubyte *>("glPolygonStipple");
    glPopAttrib = new Function<void>("glPopAttrib");
    glPopClientAttrib = new Function<void>("glPopClientAttrib");
    glPopDebugGroup = new Function<void>("glPopDebugGroup");
    glPopGroupMarkerEXT = new Function<void>("glPopGroupMarkerEXT");
    glPopMatrix = new Function<void>("glPopMatrix");
    glPopName = new Function<void>("glPopName");
    glPresentFrameDualFillNV = new Function<void, GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint, GLenum, GLuint>("glPresentFrameDualFillNV");
    glPresentFrameKeyedNV = new Function<void, GLuint, GLuint64EXT, GLuint, GLuint, GLenum, GLenum, GLuint, GLuint, GLenum, GLuint, GLuint>("glPresentFrameKeyedNV");
    glPrimitiveRestartIndex = new Function<void, GLuint>("glPrimitiveRestartIndex");
    glPrimitiveRestartIndexNV = new Function<void, GLuint>("glPrimitiveRestartIndexNV");
    glPrimitiveRestartNV = new Function<void>("glPrimitiveRestartNV");
    glPrioritizeTextures = new Function<void, GLsizei, const GLuint *, const GLfloat *>("glPrioritizeTextures");
    glPrioritizeTexturesEXT = new Function<void, GLsizei, const GLuint *, const GLclampf *>("glPrioritizeTexturesEXT");
    glPrioritizeTexturesxOES = new Function<void, GLsizei, const GLuint *, const GLfixed *>("glPrioritizeTexturesxOES");
    glProgramBinary = new Function<void, GLuint, GLenum, const void *, GLsizei>("glProgramBinary");
    glProgramBufferParametersIivNV = new Function<void, GLenum, GLuint, GLuint, GLsizei, const GLint *>("glProgramBufferParametersIivNV");
    glProgramBufferParametersIuivNV = new Function<void, GLenum, GLuint, GLuint, GLsizei, const GLuint *>("glProgramBufferParametersIuivNV");
    glProgramBufferParametersfvNV = new Function<void, GLenum, GLuint, GLuint, GLsizei, const GLfloat *>("glProgramBufferParametersfvNV");
    glProgramEnvParameter4dARB = new Function<void, GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble>("glProgramEnvParameter4dARB");
    glProgramEnvParameter4dvARB = new Function<void, GLenum, GLuint, const GLdouble *>("glProgramEnvParameter4dvARB");
    glProgramEnvParameter4fARB = new Function<void, GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat>("glProgramEnvParameter4fARB");
    glProgramEnvParameter4fvARB = new Function<void, GLenum, GLuint, const GLfloat *>("glProgramEnvParameter4fvARB");
    glProgramEnvParameterI4iNV = new Function<void, GLenum, GLuint, GLint, GLint, GLint, GLint>("glProgramEnvParameterI4iNV");
    glProgramEnvParameterI4ivNV = new Function<void, GLenum, GLuint, const GLint *>("glProgramEnvParameterI4ivNV");
    glProgramEnvParameterI4uiNV = new Function<void, GLenum, GLuint, GLuint, GLuint, GLuint, GLuint>("glProgramEnvParameterI4uiNV");
    glProgramEnvParameterI4uivNV = new Function<void, GLenum, GLuint, const GLuint *>("glProgramEnvParameterI4uivNV");
    glProgramEnvParameters4fvEXT = new Function<void, GLenum, GLuint, GLsizei, const GLfloat *>("glProgramEnvParameters4fvEXT");
    glProgramEnvParametersI4ivNV = new Function<void, GLenum, GLuint, GLsizei, const GLint *>("glProgramEnvParametersI4ivNV");
    glProgramEnvParametersI4uivNV = new Function<void, GLenum, GLuint, GLsizei, const GLuint *>("glProgramEnvParametersI4uivNV");
    glProgramLocalParameter4dARB = new Function<void, GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble>("glProgramLocalParameter4dARB");
    glProgramLocalParameter4dvARB = new Function<void, GLenum, GLuint, const GLdouble *>("glProgramLocalParameter4dvARB");
    glProgramLocalParameter4fARB = new Function<void, GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat>("glProgramLocalParameter4fARB");
    glProgramLocalParameter4fvARB = new Function<void, GLenum, GLuint, const GLfloat *>("glProgramLocalParameter4fvARB");
    glProgramLocalParameterI4iNV = new Function<void, GLenum, GLuint, GLint, GLint, GLint, GLint>("glProgramLocalParameterI4iNV");
    glProgramLocalParameterI4ivNV = new Function<void, GLenum, GLuint, const GLint *>("glProgramLocalParameterI4ivNV");
    glProgramLocalParameterI4uiNV = new Function<void, GLenum, GLuint, GLuint, GLuint, GLuint, GLuint>("glProgramLocalParameterI4uiNV");
    glProgramLocalParameterI4uivNV = new Function<void, GLenum, GLuint, const GLuint *>("glProgramLocalParameterI4uivNV");
    glProgramLocalParameters4fvEXT = new Function<void, GLenum, GLuint, GLsizei, const GLfloat *>("glProgramLocalParameters4fvEXT");
    glProgramLocalParametersI4ivNV = new Function<void, GLenum, GLuint, GLsizei, const GLint *>("glProgramLocalParametersI4ivNV");
    glProgramLocalParametersI4uivNV = new Function<void, GLenum, GLuint, GLsizei, const GLuint *>("glProgramLocalParametersI4uivNV");
    glProgramNamedParameter4dNV = new Function<void, GLuint, GLsizei, const GLubyte *, GLdouble, GLdouble, GLdouble, GLdouble>("glProgramNamedParameter4dNV");
    glProgramNamedParameter4dvNV = new Function<void, GLuint, GLsizei, const GLubyte *, const GLdouble *>("glProgramNamedParameter4dvNV");
    glProgramNamedParameter4fNV = new Function<void, GLuint, GLsizei, const GLubyte *, GLfloat, GLfloat, GLfloat, GLfloat>("glProgramNamedParameter4fNV");
    glProgramNamedParameter4fvNV = new Function<void, GLuint, GLsizei, const GLubyte *, const GLfloat *>("glProgramNamedParameter4fvNV");
    glProgramParameter4dNV = new Function<void, GLenum, GLuint, GLdouble, GLdouble, GLdouble, GLdouble>("glProgramParameter4dNV");
    glProgramParameter4dvNV = new Function<void, GLenum, GLuint, const GLdouble *>("glProgramParameter4dvNV");
    glProgramParameter4fNV = new Function<void, GLenum, GLuint, GLfloat, GLfloat, GLfloat, GLfloat>("glProgramParameter4fNV");
    glProgramParameter4fvNV = new Function<void, GLenum, GLuint, const GLfloat *>("glProgramParameter4fvNV");
    glProgramParameteri = new Function<void, GLuint, GLenum, GLint>("glProgramParameteri");
    glProgramParameteriARB = new Function<void, GLuint, GLenum, GLint>("glProgramParameteriARB");
    glProgramParameteriEXT = new Function<void, GLuint, GLenum, GLint>("glProgramParameteriEXT");
    glProgramParameters4dvNV = new Function<void, GLenum, GLuint, GLsizei, const GLdouble *>("glProgramParameters4dvNV");
    glProgramParameters4fvNV = new Function<void, GLenum, GLuint, GLsizei, const GLfloat *>("glProgramParameters4fvNV");
    glProgramPathFragmentInputGenNV = new Function<void, GLuint, GLint, GLenum, GLint, const GLfloat *>("glProgramPathFragmentInputGenNV");
    glProgramStringARB = new Function<void, GLenum, GLenum, GLsizei, const void *>("glProgramStringARB");
    glProgramSubroutineParametersuivNV = new Function<void, GLenum, GLsizei, const GLuint *>("glProgramSubroutineParametersuivNV");
    glProgramUniform1d = new Function<void, GLuint, GLint, GLdouble>("glProgramUniform1d");
    glProgramUniform1dEXT = new Function<void, GLuint, GLint, GLdouble>("glProgramUniform1dEXT");
    glProgramUniform1dv = new Function<void, GLuint, GLint, GLsizei, const GLdouble *>("glProgramUniform1dv");
    glProgramUniform1dvEXT = new Function<void, GLuint, GLint, GLsizei, const GLdouble *>("glProgramUniform1dvEXT");
    glProgramUniform1f = new Function<void, GLuint, GLint, GLfloat>("glProgramUniform1f");
    glProgramUniform1fEXT = new Function<void, GLuint, GLint, GLfloat>("glProgramUniform1fEXT");
    glProgramUniform1fv = new Function<void, GLuint, GLint, GLsizei, const GLfloat *>("glProgramUniform1fv");
    glProgramUniform1fvEXT = new Function<void, GLuint, GLint, GLsizei, const GLfloat *>("glProgramUniform1fvEXT");
    glProgramUniform1i = new Function<void, GLuint, GLint, GLint>("glProgramUniform1i");
    glProgramUniform1i64NV = new Function<void, GLuint, GLint, GLint64EXT>("glProgramUniform1i64NV");
    glProgramUniform1i64vNV = new Function<void, GLuint, GLint, GLsizei, const GLint64EXT *>("glProgramUniform1i64vNV");
    glProgramUniform1iEXT = new Function<void, GLuint, GLint, GLint>("glProgramUniform1iEXT");
    glProgramUniform1iv = new Function<void, GLuint, GLint, GLsizei, const GLint *>("glProgramUniform1iv");
    glProgramUniform1ivEXT = new Function<void, GLuint, GLint, GLsizei, const GLint *>("glProgramUniform1ivEXT");
    glProgramUniform1ui = new Function<void, GLuint, GLint, GLuint>("glProgramUniform1ui");
    glProgramUniform1ui64NV = new Function<void, GLuint, GLint, GLuint64EXT>("glProgramUniform1ui64NV");
    glProgramUniform1ui64vNV = new Function<void, GLuint, GLint, GLsizei, const GLuint64EXT *>("glProgramUniform1ui64vNV");
    glProgramUniform1uiEXT = new Function<void, GLuint, GLint, GLuint>("glProgramUniform1uiEXT");
    glProgramUniform1uiv = new Function<void, GLuint, GLint, GLsizei, const GLuint *>("glProgramUniform1uiv");
    glProgramUniform1uivEXT = new Function<void, GLuint, GLint, GLsizei, const GLuint *>("glProgramUniform1uivEXT");
    glProgramUniform2d = new Function<void, GLuint, GLint, GLdouble, GLdouble>("glProgramUniform2d");
    glProgramUniform2dEXT = new Function<void, GLuint, GLint, GLdouble, GLdouble>("glProgramUniform2dEXT");
    glProgramUniform2dv = new Function<void, GLuint, GLint, GLsizei, const GLdouble *>("glProgramUniform2dv");
    glProgramUniform2dvEXT = new Function<void, GLuint, GLint, GLsizei, const GLdouble *>("glProgramUniform2dvEXT");
    glProgramUniform2f = new Function<void, GLuint, GLint, GLfloat, GLfloat>("glProgramUniform2f");
    glProgramUniform2fEXT = new Function<void, GLuint, GLint, GLfloat, GLfloat>("glProgramUniform2fEXT");
    glProgramUniform2fv = new Function<void, GLuint, GLint, GLsizei, const GLfloat *>("glProgramUniform2fv");
    glProgramUniform2fvEXT = new Function<void, GLuint, GLint, GLsizei, const GLfloat *>("glProgramUniform2fvEXT");
    glProgramUniform2i = new Function<void, GLuint, GLint, GLint, GLint>("glProgramUniform2i");
    glProgramUniform2i64NV = new Function<void, GLuint, GLint, GLint64EXT, GLint64EXT>("glProgramUniform2i64NV");
    glProgramUniform2i64vNV = new Function<void, GLuint, GLint, GLsizei, const GLint64EXT *>("glProgramUniform2i64vNV");
    glProgramUniform2iEXT = new Function<void, GLuint, GLint, GLint, GLint>("glProgramUniform2iEXT");
    glProgramUniform2iv = new Function<void, GLuint, GLint, GLsizei, const GLint *>("glProgramUniform2iv");
    glProgramUniform2ivEXT = new Function<void, GLuint, GLint, GLsizei, const GLint *>("glProgramUniform2ivEXT");
    glProgramUniform2ui = new Function<void, GLuint, GLint, GLuint, GLuint>("glProgramUniform2ui");
    glProgramUniform2ui64NV = new Function<void, GLuint, GLint, GLuint64EXT, GLuint64EXT>("glProgramUniform2ui64NV");
    glProgramUniform2ui64vNV = new Function<void, GLuint, GLint, GLsizei, const GLuint64EXT *>("glProgramUniform2ui64vNV");
    glProgramUniform2uiEXT = new Function<void, GLuint, GLint, GLuint, GLuint>("glProgramUniform2uiEXT");
    glProgramUniform2uiv = new Function<void, GLuint, GLint, GLsizei, const GLuint *>("glProgramUniform2uiv");
    glProgramUniform2uivEXT = new Function<void, GLuint, GLint, GLsizei, const GLuint *>("glProgramUniform2uivEXT");
    glProgramUniform3d = new Function<void, GLuint, GLint, GLdouble, GLdouble, GLdouble>("glProgramUniform3d");
    glProgramUniform3dEXT = new Function<void, GLuint, GLint, GLdouble, GLdouble, GLdouble>("glProgramUniform3dEXT");
    glProgramUniform3dv = new Function<void, GLuint, GLint, GLsizei, const GLdouble *>("glProgramUniform3dv");
    glProgramUniform3dvEXT = new Function<void, GLuint, GLint, GLsizei, const GLdouble *>("glProgramUniform3dvEXT");
    glProgramUniform3f = new Function<void, GLuint, GLint, GLfloat, GLfloat, GLfloat>("glProgramUniform3f");
    glProgramUniform3fEXT = new Function<void, GLuint, GLint, GLfloat, GLfloat, GLfloat>("glProgramUniform3fEXT");
    glProgramUniform3fv = new Function<void, GLuint, GLint, GLsizei, const GLfloat *>("glProgramUniform3fv");
    glProgramUniform3fvEXT = new Function<void, GLuint, GLint, GLsizei, const GLfloat *>("glProgramUniform3fvEXT");
    glProgramUniform3i = new Function<void, GLuint, GLint, GLint, GLint, GLint>("glProgramUniform3i");
    glProgramUniform3i64NV = new Function<void, GLuint, GLint, GLint64EXT, GLint64EXT, GLint64EXT>("glProgramUniform3i64NV");
    glProgramUniform3i64vNV = new Function<void, GLuint, GLint, GLsizei, const GLint64EXT *>("glProgramUniform3i64vNV");
    glProgramUniform3iEXT = new Function<void, GLuint, GLint, GLint, GLint, GLint>("glProgramUniform3iEXT");
    glProgramUniform3iv = new Function<void, GLuint, GLint, GLsizei, const GLint *>("glProgramUniform3iv");
    glProgramUniform3ivEXT = new Function<void, GLuint, GLint, GLsizei, const GLint *>("glProgramUniform3ivEXT");
    glProgramUniform3ui = new Function<void, GLuint, GLint, GLuint, GLuint, GLuint>("glProgramUniform3ui");
    glProgramUniform3ui64NV = new Function<void, GLuint, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT>("glProgramUniform3ui64NV");
    glProgramUniform3ui64vNV = new Function<void, GLuint, GLint, GLsizei, const GLuint64EXT *>("glProgramUniform3ui64vNV");
    glProgramUniform3uiEXT = new Function<void, GLuint, GLint, GLuint, GLuint, GLuint>("glProgramUniform3uiEXT");
    glProgramUniform3uiv = new Function<void, GLuint, GLint, GLsizei, const GLuint *>("glProgramUniform3uiv");
    glProgramUniform3uivEXT = new Function<void, GLuint, GLint, GLsizei, const GLuint *>("glProgramUniform3uivEXT");
    glProgramUniform4d = new Function<void, GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble>("glProgramUniform4d");
    glProgramUniform4dEXT = new Function<void, GLuint, GLint, GLdouble, GLdouble, GLdouble, GLdouble>("glProgramUniform4dEXT");
    glProgramUniform4dv = new Function<void, GLuint, GLint, GLsizei, const GLdouble *>("glProgramUniform4dv");
    glProgramUniform4dvEXT = new Function<void, GLuint, GLint, GLsizei, const GLdouble *>("glProgramUniform4dvEXT");
    glProgramUniform4f = new Function<void, GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat>("glProgramUniform4f");
    glProgramUniform4fEXT = new Function<void, GLuint, GLint, GLfloat, GLfloat, GLfloat, GLfloat>("glProgramUniform4fEXT");
    glProgramUniform4fv = new Function<void, GLuint, GLint, GLsizei, const GLfloat *>("glProgramUniform4fv");
    glProgramUniform4fvEXT = new Function<void, GLuint, GLint, GLsizei, const GLfloat *>("glProgramUniform4fvEXT");
    glProgramUniform4i = new Function<void, GLuint, GLint, GLint, GLint, GLint, GLint>("glProgramUniform4i");
    glProgramUniform4i64NV = new Function<void, GLuint, GLint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT>("glProgramUniform4i64NV");
    glProgramUniform4i64vNV = new Function<void, GLuint, GLint, GLsizei, const GLint64EXT *>("glProgramUniform4i64vNV");
    glProgramUniform4iEXT = new Function<void, GLuint, GLint, GLint, GLint, GLint, GLint>("glProgramUniform4iEXT");
    glProgramUniform4iv = new Function<void, GLuint, GLint, GLsizei, const GLint *>("glProgramUniform4iv");
    glProgramUniform4ivEXT = new Function<void, GLuint, GLint, GLsizei, const GLint *>("glProgramUniform4ivEXT");
    glProgramUniform4ui = new Function<void, GLuint, GLint, GLuint, GLuint, GLuint, GLuint>("glProgramUniform4ui");
    glProgramUniform4ui64NV = new Function<void, GLuint, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT>("glProgramUniform4ui64NV");
    glProgramUniform4ui64vNV = new Function<void, GLuint, GLint, GLsizei, const GLuint64EXT *>("glProgramUniform4ui64vNV");
    glProgramUniform4uiEXT = new Function<void, GLuint, GLint, GLuint, GLuint, GLuint, GLuint>("glProgramUniform4uiEXT");
    glProgramUniform4uiv = new Function<void, GLuint, GLint, GLsizei, const GLuint *>("glProgramUniform4uiv");
    glProgramUniform4uivEXT = new Function<void, GLuint, GLint, GLsizei, const GLuint *>("glProgramUniform4uivEXT");
    glProgramUniformHandleui64ARB = new Function<void, GLuint, GLint, GLuint64>("glProgramUniformHandleui64ARB");
    glProgramUniformHandleui64NV = new Function<void, GLuint, GLint, GLuint64>("glProgramUniformHandleui64NV");
    glProgramUniformHandleui64vARB = new Function<void, GLuint, GLint, GLsizei, const GLuint64 *>("glProgramUniformHandleui64vARB");
    glProgramUniformHandleui64vNV = new Function<void, GLuint, GLint, GLsizei, const GLuint64 *>("glProgramUniformHandleui64vNV");
    glProgramUniformMatrix2dv = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLdouble *>("glProgramUniformMatrix2dv");
    glProgramUniformMatrix2dvEXT = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLdouble *>("glProgramUniformMatrix2dvEXT");
    glProgramUniformMatrix2fv = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLfloat *>("glProgramUniformMatrix2fv");
    glProgramUniformMatrix2fvEXT = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLfloat *>("glProgramUniformMatrix2fvEXT");
    glProgramUniformMatrix2x3dv = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLdouble *>("glProgramUniformMatrix2x3dv");
    glProgramUniformMatrix2x3dvEXT = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLdouble *>("glProgramUniformMatrix2x3dvEXT");
    glProgramUniformMatrix2x3fv = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLfloat *>("glProgramUniformMatrix2x3fv");
    glProgramUniformMatrix2x3fvEXT = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLfloat *>("glProgramUniformMatrix2x3fvEXT");
    glProgramUniformMatrix2x4dv = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLdouble *>("glProgramUniformMatrix2x4dv");
    glProgramUniformMatrix2x4dvEXT = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLdouble *>("glProgramUniformMatrix2x4dvEXT");
    glProgramUniformMatrix2x4fv = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLfloat *>("glProgramUniformMatrix2x4fv");
    glProgramUniformMatrix2x4fvEXT = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLfloat *>("glProgramUniformMatrix2x4fvEXT");
    glProgramUniformMatrix3dv = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLdouble *>("glProgramUniformMatrix3dv");
    glProgramUniformMatrix3dvEXT = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLdouble *>("glProgramUniformMatrix3dvEXT");
    glProgramUniformMatrix3fv = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLfloat *>("glProgramUniformMatrix3fv");
    glProgramUniformMatrix3fvEXT = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLfloat *>("glProgramUniformMatrix3fvEXT");
    glProgramUniformMatrix3x2dv = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLdouble *>("glProgramUniformMatrix3x2dv");
    glProgramUniformMatrix3x2dvEXT = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLdouble *>("glProgramUniformMatrix3x2dvEXT");
    glProgramUniformMatrix3x2fv = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLfloat *>("glProgramUniformMatrix3x2fv");
    glProgramUniformMatrix3x2fvEXT = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLfloat *>("glProgramUniformMatrix3x2fvEXT");
    glProgramUniformMatrix3x4dv = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLdouble *>("glProgramUniformMatrix3x4dv");
    glProgramUniformMatrix3x4dvEXT = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLdouble *>("glProgramUniformMatrix3x4dvEXT");
    glProgramUniformMatrix3x4fv = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLfloat *>("glProgramUniformMatrix3x4fv");
    glProgramUniformMatrix3x4fvEXT = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLfloat *>("glProgramUniformMatrix3x4fvEXT");
    glProgramUniformMatrix4dv = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLdouble *>("glProgramUniformMatrix4dv");
    glProgramUniformMatrix4dvEXT = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLdouble *>("glProgramUniformMatrix4dvEXT");
    glProgramUniformMatrix4fv = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLfloat *>("glProgramUniformMatrix4fv");
    glProgramUniformMatrix4fvEXT = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLfloat *>("glProgramUniformMatrix4fvEXT");
    glProgramUniformMatrix4x2dv = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLdouble *>("glProgramUniformMatrix4x2dv");
    glProgramUniformMatrix4x2dvEXT = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLdouble *>("glProgramUniformMatrix4x2dvEXT");
    glProgramUniformMatrix4x2fv = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLfloat *>("glProgramUniformMatrix4x2fv");
    glProgramUniformMatrix4x2fvEXT = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLfloat *>("glProgramUniformMatrix4x2fvEXT");
    glProgramUniformMatrix4x3dv = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLdouble *>("glProgramUniformMatrix4x3dv");
    glProgramUniformMatrix4x3dvEXT = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLdouble *>("glProgramUniformMatrix4x3dvEXT");
    glProgramUniformMatrix4x3fv = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLfloat *>("glProgramUniformMatrix4x3fv");
    glProgramUniformMatrix4x3fvEXT = new Function<void, GLuint, GLint, GLsizei, GLboolean, const GLfloat *>("glProgramUniformMatrix4x3fvEXT");
    glProgramUniformui64NV = new Function<void, GLuint, GLint, GLuint64EXT>("glProgramUniformui64NV");
    glProgramUniformui64vNV = new Function<void, GLuint, GLint, GLsizei, const GLuint64EXT *>("glProgramUniformui64vNV");
    glProgramVertexLimitNV = new Function<void, GLenum, GLint>("glProgramVertexLimitNV");
    glProvokingVertex = new Function<void, GLenum>("glProvokingVertex");
    glProvokingVertexEXT = new Function<void, GLenum>("glProvokingVertexEXT");
    glPushAttrib = new Function<void, AttribMask>("glPushAttrib");
    glPushClientAttrib = new Function<void, ClientAttribMask>("glPushClientAttrib");
    glPushClientAttribDefaultEXT = new Function<void, ClientAttribMask>("glPushClientAttribDefaultEXT");
    glPushDebugGroup = new Function<void, GLenum, GLuint, GLsizei, const GLchar *>("glPushDebugGroup");
    glPushGroupMarkerEXT = new Function<void, GLsizei, const GLchar *>("glPushGroupMarkerEXT");
    glPushMatrix = new Function<void>("glPushMatrix");
    glPushName = new Function<void, GLuint>("glPushName");
    glQueryCounter = new Function<void, GLuint, GLenum>("glQueryCounter");
    glQueryMatrixxOES = new Function<GLbitfield, GLfixed *, GLint *>("glQueryMatrixxOES");
    glQueryObjectParameteruiAMD = new Function<void, GLenum, GLuint, GLenum, GLuint>("glQueryObjectParameteruiAMD");
    glRasterPos2d = new Function<void, GLdouble, GLdouble>("glRasterPos2d");
    glRasterPos2dv = new Function<void, const GLdouble *>("glRasterPos2dv");
    glRasterPos2f = new Function<void, GLfloat, GLfloat>("glRasterPos2f");
    glRasterPos2fv = new Function<void, const GLfloat *>("glRasterPos2fv");
    glRasterPos2i = new Function<void, GLint, GLint>("glRasterPos2i");
    glRasterPos2iv = new Function<void, const GLint *>("glRasterPos2iv");
    glRasterPos2s = new Function<void, GLshort, GLshort>("glRasterPos2s");
    glRasterPos2sv = new Function<void, const GLshort *>("glRasterPos2sv");
    glRasterPos2xOES = new Function<void, GLfixed, GLfixed>("glRasterPos2xOES");
    glRasterPos2xvOES = new Function<void, const GLfixed *>("glRasterPos2xvOES");
    glRasterPos3d = new Function<void, GLdouble, GLdouble, GLdouble>("glRasterPos3d");
    glRasterPos3dv = new Function<void, const GLdouble *>("glRasterPos3dv");
    glRasterPos3f = new Function<void, GLfloat, GLfloat, GLfloat>("glRasterPos3f");
    glRasterPos3fv = new Function<void, const GLfloat *>("glRasterPos3fv");
    glRasterPos3i = new Function<void, GLint, GLint, GLint>("glRasterPos3i");
    glRasterPos3iv = new Function<void, const GLint *>("glRasterPos3iv");
    glRasterPos3s = new Function<void, GLshort, GLshort, GLshort>("glRasterPos3s");
    glRasterPos3sv = new Function<void, const GLshort *>("glRasterPos3sv");
    glRasterPos3xOES = new Function<void, GLfixed, GLfixed, GLfixed>("glRasterPos3xOES");
    glRasterPos3xvOES = new Function<void, const GLfixed *>("glRasterPos3xvOES");
    glRasterPos4d = new Function<void, GLdouble, GLdouble, GLdouble, GLdouble>("glRasterPos4d");
    glRasterPos4dv = new Function<void, const GLdouble *>("glRasterPos4dv");
    glRasterPos4f = new Function<void, GLfloat, GLfloat, GLfloat, GLfloat>("glRasterPos4f");
    glRasterPos4fv = new Function<void, const GLfloat *>("glRasterPos4fv");
    glRasterPos4i = new Function<void, GLint, GLint, GLint, GLint>("glRasterPos4i");
    glRasterPos4iv = new Function<void, const GLint *>("glRasterPos4iv");
    glRasterPos4s = new Function<void, GLshort, GLshort, GLshort, GLshort>("glRasterPos4s");
    glRasterPos4sv = new Function<void, const GLshort *>("glRasterPos4sv");
    glRasterPos4xOES = new Function<void, GLfixed, GLfixed, GLfixed, GLfixed>("glRasterPos4xOES");
    glRasterPos4xvOES = new Function<void, const GLfixed *>("glRasterPos4xvOES");
    glReadBuffer = new Function<void, GLenum>("glReadBuffer");
    glReadInstrumentsSGIX = new Function<void, GLint>("glReadInstrumentsSGIX");
    glReadPixels = new Function<void, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, void *>("glReadPixels");
    glReadnPixelsARB = new Function<void, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, GLsizei, void *>("glReadnPixelsARB");
    glRectd = new Function<void, GLdouble, GLdouble, GLdouble, GLdouble>("glRectd");
    glRectdv = new Function<void, const GLdouble *, const GLdouble *>("glRectdv");
    glRectf = new Function<void, GLfloat, GLfloat, GLfloat, GLfloat>("glRectf");
    glRectfv = new Function<void, const GLfloat *, const GLfloat *>("glRectfv");
    glRecti = new Function<void, GLint, GLint, GLint, GLint>("glRecti");
    glRectiv = new Function<void, const GLint *, const GLint *>("glRectiv");
    glRects = new Function<void, GLshort, GLshort, GLshort, GLshort>("glRects");
    glRectsv = new Function<void, const GLshort *, const GLshort *>("glRectsv");
    glRectxOES = new Function<void, GLfixed, GLfixed, GLfixed, GLfixed>("glRectxOES");
    glRectxvOES = new Function<void, const GLfixed *, const GLfixed *>("glRectxvOES");
    glReferencePlaneSGIX = new Function<void, const GLdouble *>("glReferencePlaneSGIX");
    glReleaseShaderCompiler = new Function<void>("glReleaseShaderCompiler");
    glRenderMode = new Function<GLint, GLenum>("glRenderMode");
    glRenderbufferStorage = new Function<void, GLenum, GLenum, GLsizei, GLsizei>("glRenderbufferStorage");
    glRenderbufferStorageEXT = new Function<void, GLenum, GLenum, GLsizei, GLsizei>("glRenderbufferStorageEXT");
    glRenderbufferStorageMultisample = new Function<void, GLenum, GLsizei, GLenum, GLsizei, GLsizei>("glRenderbufferStorageMultisample");
    glRenderbufferStorageMultisampleCoverageNV = new Function<void, GLenum, GLsizei, GLsizei, GLenum, GLsizei, GLsizei>("glRenderbufferStorageMultisampleCoverageNV");
    glRenderbufferStorageMultisampleEXT = new Function<void, GLenum, GLsizei, GLenum, GLsizei, GLsizei>("glRenderbufferStorageMultisampleEXT");
    glReplacementCodePointerSUN = new Function<void, GLenum, GLsizei, const void **>("glReplacementCodePointerSUN");
    glReplacementCodeubSUN = new Function<void, GLubyte>("glReplacementCodeubSUN");
    glReplacementCodeubvSUN = new Function<void, const GLubyte *>("glReplacementCodeubvSUN");
    glReplacementCodeuiColor3fVertex3fSUN = new Function<void, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat>("glReplacementCodeuiColor3fVertex3fSUN");
    glReplacementCodeuiColor3fVertex3fvSUN = new Function<void, const GLuint *, const GLfloat *, const GLfloat *>("glReplacementCodeuiColor3fVertex3fvSUN");
    glReplacementCodeuiColor4fNormal3fVertex3fSUN = new Function<void, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat>("glReplacementCodeuiColor4fNormal3fVertex3fSUN");
    glReplacementCodeuiColor4fNormal3fVertex3fvSUN = new Function<void, const GLuint *, const GLfloat *, const GLfloat *, const GLfloat *>("glReplacementCodeuiColor4fNormal3fVertex3fvSUN");
    glReplacementCodeuiColor4ubVertex3fSUN = new Function<void, GLuint, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat>("glReplacementCodeuiColor4ubVertex3fSUN");
    glReplacementCodeuiColor4ubVertex3fvSUN = new Function<void, const GLuint *, const GLubyte *, const GLfloat *>("glReplacementCodeuiColor4ubVertex3fvSUN");
    glReplacementCodeuiNormal3fVertex3fSUN = new Function<void, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat>("glReplacementCodeuiNormal3fVertex3fSUN");
    glReplacementCodeuiNormal3fVertex3fvSUN = new Function<void, const GLuint *, const GLfloat *, const GLfloat *>("glReplacementCodeuiNormal3fVertex3fvSUN");
    glReplacementCodeuiSUN = new Function<void, GLuint>("glReplacementCodeuiSUN");
    glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = new Function<void, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat>("glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN");
    glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = new Function<void, const GLuint *, const GLfloat *, const GLfloat *, const GLfloat *, const GLfloat *>("glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN");
    glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = new Function<void, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat>("glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN");
    glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = new Function<void, const GLuint *, const GLfloat *, const GLfloat *, const GLfloat *>("glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN");
    glReplacementCodeuiTexCoord2fVertex3fSUN = new Function<void, GLuint, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat>("glReplacementCodeuiTexCoord2fVertex3fSUN");
    glReplacementCodeuiTexCoord2fVertex3fvSUN = new Function<void, const GLuint *, const GLfloat *, const GLfloat *>("glReplacementCodeuiTexCoord2fVertex3fvSUN");
    glReplacementCodeuiVertex3fSUN = new Function<void, GLuint, GLfloat, GLfloat, GLfloat>("glReplacementCodeuiVertex3fSUN");
    glReplacementCodeuiVertex3fvSUN = new Function<void, const GLuint *, const GLfloat *>("glReplacementCodeuiVertex3fvSUN");
    glReplacementCodeuivSUN = new Function<void, const GLuint *>("glReplacementCodeuivSUN");
    glReplacementCodeusSUN = new Function<void, GLushort>("glReplacementCodeusSUN");
    glReplacementCodeusvSUN = new Function<void, const GLushort *>("glReplacementCodeusvSUN");
    glRequestResidentProgramsNV = new Function<void, GLsizei, const GLuint *>("glRequestResidentProgramsNV");
    glResetHistogram = new Function<void, GLenum>("glResetHistogram");
    glResetHistogramEXT = new Function<void, GLenum>("glResetHistogramEXT");
    glResetMinmax = new Function<void, GLenum>("glResetMinmax");
    glResetMinmaxEXT = new Function<void, GLenum>("glResetMinmaxEXT");
    glResizeBuffersMESA = new Function<void>("glResizeBuffersMESA");
    glResumeTransformFeedback = new Function<void>("glResumeTransformFeedback");
    glResumeTransformFeedbackNV = new Function<void>("glResumeTransformFeedbackNV");
    glRotated = new Function<void, GLdouble, GLdouble, GLdouble, GLdouble>("glRotated");
    glRotatef = new Function<void, GLfloat, GLfloat, GLfloat, GLfloat>("glRotatef");
    glRotatexOES = new Function<void, GLfixed, GLfixed, GLfixed, GLfixed>("glRotatexOES");
    glSampleCoverage = new Function<void, GLfloat, GLboolean>("glSampleCoverage");
    glSampleCoverageARB = new Function<void, GLfloat, GLboolean>("glSampleCoverageARB");
    glSampleCoverageOES = new Function<void, GLfixed, GLboolean>("glSampleCoverageOES");
    glSampleMapATI = new Function<void, GLuint, GLuint, GLenum>("glSampleMapATI");
    glSampleMaskEXT = new Function<void, GLclampf, GLboolean>("glSampleMaskEXT");
    glSampleMaskIndexedNV = new Function<void, GLuint, GLbitfield>("glSampleMaskIndexedNV");
    glSampleMaskSGIS = new Function<void, GLclampf, GLboolean>("glSampleMaskSGIS");
    glSampleMaski = new Function<void, GLuint, GLbitfield>("glSampleMaski");
    glSamplePatternEXT = new Function<void, GLenum>("glSamplePatternEXT");
    glSamplePatternSGIS = new Function<void, GLenum>("glSamplePatternSGIS");
    glSamplerParameterIiv = new Function<void, GLuint, GLenum, const GLint *>("glSamplerParameterIiv");
    glSamplerParameterIuiv = new Function<void, GLuint, GLenum, const GLuint *>("glSamplerParameterIuiv");
    glSamplerParameterf = new Function<void, GLuint, GLenum, GLfloat>("glSamplerParameterf");
    glSamplerParameterfv = new Function<void, GLuint, GLenum, const GLfloat *>("glSamplerParameterfv");
    glSamplerParameteri = new Function<void, GLuint, GLenum, GLint>("glSamplerParameteri");
    glSamplerParameteriv = new Function<void, GLuint, GLenum, const GLint *>("glSamplerParameteriv");
    glScaled = new Function<void, GLdouble, GLdouble, GLdouble>("glScaled");
    glScalef = new Function<void, GLfloat, GLfloat, GLfloat>("glScalef");
    glScalexOES = new Function<void, GLfixed, GLfixed, GLfixed>("glScalexOES");
    glScissor = new Function<void, GLint, GLint, GLsizei, GLsizei>("glScissor");
    glScissorArrayv = new Function<void, GLuint, GLsizei, const GLint *>("glScissorArrayv");
    glScissorIndexed = new Function<void, GLuint, GLint, GLint, GLsizei, GLsizei>("glScissorIndexed");
    glScissorIndexedv = new Function<void, GLuint, const GLint *>("glScissorIndexedv");
    glSecondaryColor3b = new Function<void, GLbyte, GLbyte, GLbyte>("glSecondaryColor3b");
    glSecondaryColor3bEXT = new Function<void, GLbyte, GLbyte, GLbyte>("glSecondaryColor3bEXT");
    glSecondaryColor3bv = new Function<void, const GLbyte *>("glSecondaryColor3bv");
    glSecondaryColor3bvEXT = new Function<void, const GLbyte *>("glSecondaryColor3bvEXT");
    glSecondaryColor3d = new Function<void, GLdouble, GLdouble, GLdouble>("glSecondaryColor3d");
    glSecondaryColor3dEXT = new Function<void, GLdouble, GLdouble, GLdouble>("glSecondaryColor3dEXT");
    glSecondaryColor3dv = new Function<void, const GLdouble *>("glSecondaryColor3dv");
    glSecondaryColor3dvEXT = new Function<void, const GLdouble *>("glSecondaryColor3dvEXT");
    glSecondaryColor3f = new Function<void, GLfloat, GLfloat, GLfloat>("glSecondaryColor3f");
    glSecondaryColor3fEXT = new Function<void, GLfloat, GLfloat, GLfloat>("glSecondaryColor3fEXT");
    glSecondaryColor3fv = new Function<void, const GLfloat *>("glSecondaryColor3fv");
    glSecondaryColor3fvEXT = new Function<void, const GLfloat *>("glSecondaryColor3fvEXT");
    glSecondaryColor3hNV = new Function<void, GLhalfNV, GLhalfNV, GLhalfNV>("glSecondaryColor3hNV");
    glSecondaryColor3hvNV = new Function<void, const GLhalfNV *>("glSecondaryColor3hvNV");
    glSecondaryColor3i = new Function<void, GLint, GLint, GLint>("glSecondaryColor3i");
    glSecondaryColor3iEXT = new Function<void, GLint, GLint, GLint>("glSecondaryColor3iEXT");
    glSecondaryColor3iv = new Function<void, const GLint *>("glSecondaryColor3iv");
    glSecondaryColor3ivEXT = new Function<void, const GLint *>("glSecondaryColor3ivEXT");
    glSecondaryColor3s = new Function<void, GLshort, GLshort, GLshort>("glSecondaryColor3s");
    glSecondaryColor3sEXT = new Function<void, GLshort, GLshort, GLshort>("glSecondaryColor3sEXT");
    glSecondaryColor3sv = new Function<void, const GLshort *>("glSecondaryColor3sv");
    glSecondaryColor3svEXT = new Function<void, const GLshort *>("glSecondaryColor3svEXT");
    glSecondaryColor3ub = new Function<void, GLubyte, GLubyte, GLubyte>("glSecondaryColor3ub");
    glSecondaryColor3ubEXT = new Function<void, GLubyte, GLubyte, GLubyte>("glSecondaryColor3ubEXT");
    glSecondaryColor3ubv = new Function<void, const GLubyte *>("glSecondaryColor3ubv");
    glSecondaryColor3ubvEXT = new Function<void, const GLubyte *>("glSecondaryColor3ubvEXT");
    glSecondaryColor3ui = new Function<void, GLuint, GLuint, GLuint>("glSecondaryColor3ui");
    glSecondaryColor3uiEXT = new Function<void, GLuint, GLuint, GLuint>("glSecondaryColor3uiEXT");
    glSecondaryColor3uiv = new Function<void, const GLuint *>("glSecondaryColor3uiv");
    glSecondaryColor3uivEXT = new Function<void, const GLuint *>("glSecondaryColor3uivEXT");
    glSecondaryColor3us = new Function<void, GLushort, GLushort, GLushort>("glSecondaryColor3us");
    glSecondaryColor3usEXT = new Function<void, GLushort, GLushort, GLushort>("glSecondaryColor3usEXT");
    glSecondaryColor3usv = new Function<void, const GLushort *>("glSecondaryColor3usv");
    glSecondaryColor3usvEXT = new Function<void, const GLushort *>("glSecondaryColor3usvEXT");
    glSecondaryColorFormatNV = new Function<void, GLint, GLenum, GLsizei>("glSecondaryColorFormatNV");
    glSecondaryColorP3ui = new Function<void, GLenum, GLuint>("glSecondaryColorP3ui");
    glSecondaryColorP3uiv = new Function<void, GLenum, const GLuint *>("glSecondaryColorP3uiv");
    glSecondaryColorPointer = new Function<void, GLint, GLenum, GLsizei, const void *>("glSecondaryColorPointer");
    glSecondaryColorPointerEXT = new Function<void, GLint, GLenum, GLsizei, const void *>("glSecondaryColorPointerEXT");
    glSecondaryColorPointerListIBM = new Function<void, GLint, GLenum, GLint, const void **, GLint>("glSecondaryColorPointerListIBM");
    glSelectBuffer = new Function<void, GLsizei, GLuint *>("glSelectBuffer");
    glSelectPerfMonitorCountersAMD = new Function<void, GLuint, GLboolean, GLuint, GLint, GLuint *>("glSelectPerfMonitorCountersAMD");
    glSeparableFilter2D = new Function<void, GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, const void *, const void *>("glSeparableFilter2D");
    glSeparableFilter2DEXT = new Function<void, GLenum, GLenum, GLsizei, GLsizei, GLenum, GLenum, const void *, const void *>("glSeparableFilter2DEXT");
    glSetFenceAPPLE = new Function<void, GLuint>("glSetFenceAPPLE");
    glSetFenceNV = new Function<void, GLuint, GLenum>("glSetFenceNV");
    glSetFragmentShaderConstantATI = new Function<void, GLuint, const GLfloat *>("glSetFragmentShaderConstantATI");
    glSetInvariantEXT = new Function<void, GLuint, GLenum, const void *>("glSetInvariantEXT");
    glSetLocalConstantEXT = new Function<void, GLuint, GLenum, const void *>("glSetLocalConstantEXT");
    glSetMultisamplefvAMD = new Function<void, GLenum, GLuint, const GLfloat *>("glSetMultisamplefvAMD");
    glShadeModel = new Function<void, GLenum>("glShadeModel");
    glShaderBinary = new Function<void, GLsizei, const GLuint *, GLenum, const void *, GLsizei>("glShaderBinary");
    glShaderOp1EXT = new Function<void, GLenum, GLuint, GLuint>("glShaderOp1EXT");
    glShaderOp2EXT = new Function<void, GLenum, GLuint, GLuint, GLuint>("glShaderOp2EXT");
    glShaderOp3EXT = new Function<void, GLenum, GLuint, GLuint, GLuint, GLuint>("glShaderOp3EXT");
    glShaderSource = new Function<void, GLuint, GLsizei, const GLchar *const*, const GLint *>("glShaderSource");
    glShaderSourceARB = new Function<void, GLhandleARB, GLsizei, const GLcharARB **, const GLint *>("glShaderSourceARB");
    glShaderStorageBlockBinding = new Function<void, GLuint, GLuint, GLuint>("glShaderStorageBlockBinding");
    glSharpenTexFuncSGIS = new Function<void, GLenum, GLsizei, const GLfloat *>("glSharpenTexFuncSGIS");
    glSpriteParameterfSGIX = new Function<void, GLenum, GLfloat>("glSpriteParameterfSGIX");
    glSpriteParameterfvSGIX = new Function<void, GLenum, const GLfloat *>("glSpriteParameterfvSGIX");
    glSpriteParameteriSGIX = new Function<void, GLenum, GLint>("glSpriteParameteriSGIX");
    glSpriteParameterivSGIX = new Function<void, GLenum, const GLint *>("glSpriteParameterivSGIX");
    glStartInstrumentsSGIX = new Function<void>("glStartInstrumentsSGIX");
    glStencilClearTagEXT = new Function<void, GLsizei, GLuint>("glStencilClearTagEXT");
    glStencilFillPathInstancedNV = new Function<void, GLsizei, GLenum, const void *, GLuint, GLenum, GLuint, GLenum, const GLfloat *>("glStencilFillPathInstancedNV");
    glStencilFillPathNV = new Function<void, GLuint, GLenum, GLuint>("glStencilFillPathNV");
    glStencilFunc = new Function<void, GLenum, GLint, GLuint>("glStencilFunc");
    glStencilFuncSeparate = new Function<void, GLenum, GLenum, GLint, GLuint>("glStencilFuncSeparate");
    glStencilFuncSeparateATI = new Function<void, GLenum, GLenum, GLint, GLuint>("glStencilFuncSeparateATI");
    glStencilMask = new Function<void, GLuint>("glStencilMask");
    glStencilMaskSeparate = new Function<void, GLenum, GLuint>("glStencilMaskSeparate");
    glStencilOp = new Function<void, GLenum, GLenum, GLenum>("glStencilOp");
    glStencilOpSeparate = new Function<void, GLenum, GLenum, GLenum, GLenum>("glStencilOpSeparate");
    glStencilOpSeparateATI = new Function<void, GLenum, GLenum, GLenum, GLenum>("glStencilOpSeparateATI");
    glStencilOpValueAMD = new Function<void, GLenum, GLuint>("glStencilOpValueAMD");
    glStencilStrokePathInstancedNV = new Function<void, GLsizei, GLenum, const void *, GLuint, GLint, GLuint, GLenum, const GLfloat *>("glStencilStrokePathInstancedNV");
    glStencilStrokePathNV = new Function<void, GLuint, GLint, GLuint>("glStencilStrokePathNV");
    glStencilThenCoverFillPathInstancedNV = new Function<void, GLsizei, GLenum, const void *, GLuint, GLenum, GLuint, GLenum, GLenum, const GLfloat *>("glStencilThenCoverFillPathInstancedNV");
    glStencilThenCoverFillPathNV = new Function<void, GLuint, GLenum, GLuint, GLenum>("glStencilThenCoverFillPathNV");
    glStencilThenCoverStrokePathInstancedNV = new Function<void, GLsizei, GLenum, const void *, GLuint, GLint, GLuint, GLenum, GLenum, const GLfloat *>("glStencilThenCoverStrokePathInstancedNV");
    glStencilThenCoverStrokePathNV = new Function<void, GLuint, GLint, GLuint, GLenum>("glStencilThenCoverStrokePathNV");
    glStopInstrumentsSGIX = new Function<void, GLint>("glStopInstrumentsSGIX");
    glStringMarkerGREMEDY = new Function<void, GLsizei, const void *>("glStringMarkerGREMEDY");
    glSwizzleEXT = new Function<void, GLuint, GLuint, GLenum, GLenum, GLenum, GLenum>("glSwizzleEXT");
    glSyncTextureINTEL = new Function<void, GLuint>("glSyncTextureINTEL");
    glTagSampleBufferSGIX = new Function<void>("glTagSampleBufferSGIX");
    glTangent3bEXT = new Function<void, GLbyte, GLbyte, GLbyte>("glTangent3bEXT");
    glTangent3bvEXT = new Function<void, const GLbyte *>("glTangent3bvEXT");
    glTangent3dEXT = new Function<void, GLdouble, GLdouble, GLdouble>("glTangent3dEXT");
    glTangent3dvEXT = new Function<void, const GLdouble *>("glTangent3dvEXT");
    glTangent3fEXT = new Function<void, GLfloat, GLfloat, GLfloat>("glTangent3fEXT");
    glTangent3fvEXT = new Function<void, const GLfloat *>("glTangent3fvEXT");
    glTangent3iEXT = new Function<void, GLint, GLint, GLint>("glTangent3iEXT");
    glTangent3ivEXT = new Function<void, const GLint *>("glTangent3ivEXT");
    glTangent3sEXT = new Function<void, GLshort, GLshort, GLshort>("glTangent3sEXT");
    glTangent3svEXT = new Function<void, const GLshort *>("glTangent3svEXT");
    glTangentPointerEXT = new Function<void, GLenum, GLsizei, const void *>("glTangentPointerEXT");
    glTbufferMask3DFX = new Function<void, GLuint>("glTbufferMask3DFX");
    glTessellationFactorAMD = new Function<void, GLfloat>("glTessellationFactorAMD");
    glTessellationModeAMD = new Function<void, GLenum>("glTessellationModeAMD");
    glTestFenceAPPLE = new Function<GLboolean, GLuint>("glTestFenceAPPLE");
    glTestFenceNV = new Function<GLboolean, GLuint>("glTestFenceNV");
    glTestObjectAPPLE = new Function<GLboolean, GLenum, GLuint>("glTestObjectAPPLE");
    glTexBuffer = new Function<void, GLenum, GLenum, GLuint>("glTexBuffer");
    glTexBufferARB = new Function<void, GLenum, GLenum, GLuint>("glTexBufferARB");
    glTexBufferEXT = new Function<void, GLenum, GLenum, GLuint>("glTexBufferEXT");
    glTexBufferRange = new Function<void, GLenum, GLenum, GLuint, GLintptr, GLsizeiptr>("glTexBufferRange");
    glTexBumpParameterfvATI = new Function<void, GLenum, const GLfloat *>("glTexBumpParameterfvATI");
    glTexBumpParameterivATI = new Function<void, GLenum, const GLint *>("glTexBumpParameterivATI");
    glTexCoord1bOES = new Function<void, GLbyte>("glTexCoord1bOES");
    glTexCoord1bvOES = new Function<void, const GLbyte *>("glTexCoord1bvOES");
    glTexCoord1d = new Function<void, GLdouble>("glTexCoord1d");
    glTexCoord1dv = new Function<void, const GLdouble *>("glTexCoord1dv");
    glTexCoord1f = new Function<void, GLfloat>("glTexCoord1f");
    glTexCoord1fv = new Function<void, const GLfloat *>("glTexCoord1fv");
    glTexCoord1hNV = new Function<void, GLhalfNV>("glTexCoord1hNV");
    glTexCoord1hvNV = new Function<void, const GLhalfNV *>("glTexCoord1hvNV");
    glTexCoord1i = new Function<void, GLint>("glTexCoord1i");
    glTexCoord1iv = new Function<void, const GLint *>("glTexCoord1iv");
    glTexCoord1s = new Function<void, GLshort>("glTexCoord1s");
    glTexCoord1sv = new Function<void, const GLshort *>("glTexCoord1sv");
    glTexCoord1xOES = new Function<void, GLfixed>("glTexCoord1xOES");
    glTexCoord1xvOES = new Function<void, const GLfixed *>("glTexCoord1xvOES");
    glTexCoord2bOES = new Function<void, GLbyte, GLbyte>("glTexCoord2bOES");
    glTexCoord2bvOES = new Function<void, const GLbyte *>("glTexCoord2bvOES");
    glTexCoord2d = new Function<void, GLdouble, GLdouble>("glTexCoord2d");
    glTexCoord2dv = new Function<void, const GLdouble *>("glTexCoord2dv");
    glTexCoord2f = new Function<void, GLfloat, GLfloat>("glTexCoord2f");
    glTexCoord2fColor3fVertex3fSUN = new Function<void, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat>("glTexCoord2fColor3fVertex3fSUN");
    glTexCoord2fColor3fVertex3fvSUN = new Function<void, const GLfloat *, const GLfloat *, const GLfloat *>("glTexCoord2fColor3fVertex3fvSUN");
    glTexCoord2fColor4fNormal3fVertex3fSUN = new Function<void, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat>("glTexCoord2fColor4fNormal3fVertex3fSUN");
    glTexCoord2fColor4fNormal3fVertex3fvSUN = new Function<void, const GLfloat *, const GLfloat *, const GLfloat *, const GLfloat *>("glTexCoord2fColor4fNormal3fVertex3fvSUN");
    glTexCoord2fColor4ubVertex3fSUN = new Function<void, GLfloat, GLfloat, GLubyte, GLubyte, GLubyte, GLubyte, GLfloat, GLfloat, GLfloat>("glTexCoord2fColor4ubVertex3fSUN");
    glTexCoord2fColor4ubVertex3fvSUN = new Function<void, const GLfloat *, const GLubyte *, const GLfloat *>("glTexCoord2fColor4ubVertex3fvSUN");
    glTexCoord2fNormal3fVertex3fSUN = new Function<void, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat>("glTexCoord2fNormal3fVertex3fSUN");
    glTexCoord2fNormal3fVertex3fvSUN = new Function<void, const GLfloat *, const GLfloat *, const GLfloat *>("glTexCoord2fNormal3fVertex3fvSUN");
    glTexCoord2fVertex3fSUN = new Function<void, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat>("glTexCoord2fVertex3fSUN");
    glTexCoord2fVertex3fvSUN = new Function<void, const GLfloat *, const GLfloat *>("glTexCoord2fVertex3fvSUN");
    glTexCoord2fv = new Function<void, const GLfloat *>("glTexCoord2fv");
    glTexCoord2hNV = new Function<void, GLhalfNV, GLhalfNV>("glTexCoord2hNV");
    glTexCoord2hvNV = new Function<void, const GLhalfNV *>("glTexCoord2hvNV");
    glTexCoord2i = new Function<void, GLint, GLint>("glTexCoord2i");
    glTexCoord2iv = new Function<void, const GLint *>("glTexCoord2iv");
    glTexCoord2s = new Function<void, GLshort, GLshort>("glTexCoord2s");
    glTexCoord2sv = new Function<void, const GLshort *>("glTexCoord2sv");
    glTexCoord2xOES = new Function<void, GLfixed, GLfixed>("glTexCoord2xOES");
    glTexCoord2xvOES = new Function<void, const GLfixed *>("glTexCoord2xvOES");
    glTexCoord3bOES = new Function<void, GLbyte, GLbyte, GLbyte>("glTexCoord3bOES");
    glTexCoord3bvOES = new Function<void, const GLbyte *>("glTexCoord3bvOES");
    glTexCoord3d = new Function<void, GLdouble, GLdouble, GLdouble>("glTexCoord3d");
    glTexCoord3dv = new Function<void, const GLdouble *>("glTexCoord3dv");
    glTexCoord3f = new Function<void, GLfloat, GLfloat, GLfloat>("glTexCoord3f");
    glTexCoord3fv = new Function<void, const GLfloat *>("glTexCoord3fv");
    glTexCoord3hNV = new Function<void, GLhalfNV, GLhalfNV, GLhalfNV>("glTexCoord3hNV");
    glTexCoord3hvNV = new Function<void, const GLhalfNV *>("glTexCoord3hvNV");
    glTexCoord3i = new Function<void, GLint, GLint, GLint>("glTexCoord3i");
    glTexCoord3iv = new Function<void, const GLint *>("glTexCoord3iv");
    glTexCoord3s = new Function<void, GLshort, GLshort, GLshort>("glTexCoord3s");
    glTexCoord3sv = new Function<void, const GLshort *>("glTexCoord3sv");
    glTexCoord3xOES = new Function<void, GLfixed, GLfixed, GLfixed>("glTexCoord3xOES");
    glTexCoord3xvOES = new Function<void, const GLfixed *>("glTexCoord3xvOES");
    glTexCoord4bOES = new Function<void, GLbyte, GLbyte, GLbyte, GLbyte>("glTexCoord4bOES");
    glTexCoord4bvOES = new Function<void, const GLbyte *>("glTexCoord4bvOES");
    glTexCoord4d = new Function<void, GLdouble, GLdouble, GLdouble, GLdouble>("glTexCoord4d");
    glTexCoord4dv = new Function<void, const GLdouble *>("glTexCoord4dv");
    glTexCoord4f = new Function<void, GLfloat, GLfloat, GLfloat, GLfloat>("glTexCoord4f");
    glTexCoord4fColor4fNormal3fVertex4fSUN = new Function<void, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat>("glTexCoord4fColor4fNormal3fVertex4fSUN");
    glTexCoord4fColor4fNormal3fVertex4fvSUN = new Function<void, const GLfloat *, const GLfloat *, const GLfloat *, const GLfloat *>("glTexCoord4fColor4fNormal3fVertex4fvSUN");
    glTexCoord4fVertex4fSUN = new Function<void, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat, GLfloat>("glTexCoord4fVertex4fSUN");
    glTexCoord4fVertex4fvSUN = new Function<void, const GLfloat *, const GLfloat *>("glTexCoord4fVertex4fvSUN");
    glTexCoord4fv = new Function<void, const GLfloat *>("glTexCoord4fv");
    glTexCoord4hNV = new Function<void, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV>("glTexCoord4hNV");
    glTexCoord4hvNV = new Function<void, const GLhalfNV *>("glTexCoord4hvNV");
    glTexCoord4i = new Function<void, GLint, GLint, GLint, GLint>("glTexCoord4i");
    glTexCoord4iv = new Function<void, const GLint *>("glTexCoord4iv");
    glTexCoord4s = new Function<void, GLshort, GLshort, GLshort, GLshort>("glTexCoord4s");
    glTexCoord4sv = new Function<void, const GLshort *>("glTexCoord4sv");
    glTexCoord4xOES = new Function<void, GLfixed, GLfixed, GLfixed, GLfixed>("glTexCoord4xOES");
    glTexCoord4xvOES = new Function<void, const GLfixed *>("glTexCoord4xvOES");
    glTexCoordFormatNV = new Function<void, GLint, GLenum, GLsizei>("glTexCoordFormatNV");
    glTexCoordP1ui = new Function<void, GLenum, GLuint>("glTexCoordP1ui");
    glTexCoordP1uiv = new Function<void, GLenum, const GLuint *>("glTexCoordP1uiv");
    glTexCoordP2ui = new Function<void, GLenum, GLuint>("glTexCoordP2ui");
    glTexCoordP2uiv = new Function<void, GLenum, const GLuint *>("glTexCoordP2uiv");
    glTexCoordP3ui = new Function<void, GLenum, GLuint>("glTexCoordP3ui");
    glTexCoordP3uiv = new Function<void, GLenum, const GLuint *>("glTexCoordP3uiv");
    glTexCoordP4ui = new Function<void, GLenum, GLuint>("glTexCoordP4ui");
    glTexCoordP4uiv = new Function<void, GLenum, const GLuint *>("glTexCoordP4uiv");
    glTexCoordPointer = new Function<void, GLint, GLenum, GLsizei, const void *>("glTexCoordPointer");
    glTexCoordPointerEXT = new Function<void, GLint, GLenum, GLsizei, GLsizei, const void *>("glTexCoordPointerEXT");
    glTexCoordPointerListIBM = new Function<void, GLint, GLenum, GLint, const void **, GLint>("glTexCoordPointerListIBM");
    glTexCoordPointervINTEL = new Function<void, GLint, GLenum, const void **>("glTexCoordPointervINTEL");
    glTexEnvf = new Function<void, GLenum, GLenum, GLfloat>("glTexEnvf");
    glTexEnvfv = new Function<void, GLenum, GLenum, const GLfloat *>("glTexEnvfv");
    glTexEnvi = new Function<void, GLenum, GLenum, GLint>("glTexEnvi");
    glTexEnviv = new Function<void, GLenum, GLenum, const GLint *>("glTexEnviv");
    glTexEnvxOES = new Function<void, GLenum, GLenum, GLfixed>("glTexEnvxOES");
    glTexEnvxvOES = new Function<void, GLenum, GLenum, const GLfixed *>("glTexEnvxvOES");
    glTexFilterFuncSGIS = new Function<void, GLenum, GLenum, GLsizei, const GLfloat *>("glTexFilterFuncSGIS");
    glTexGend = new Function<void, GLenum, GLenum, GLdouble>("glTexGend");
    glTexGendv = new Function<void, GLenum, GLenum, const GLdouble *>("glTexGendv");
    glTexGenf = new Function<void, GLenum, GLenum, GLfloat>("glTexGenf");
    glTexGenfv = new Function<void, GLenum, GLenum, const GLfloat *>("glTexGenfv");
    glTexGeni = new Function<void, GLenum, GLenum, GLint>("glTexGeni");
    glTexGeniv = new Function<void, GLenum, GLenum, const GLint *>("glTexGeniv");
    glTexGenxOES = new Function<void, GLenum, GLenum, GLfixed>("glTexGenxOES");
    glTexGenxvOES = new Function<void, GLenum, GLenum, const GLfixed *>("glTexGenxvOES");
    glTexImage1D = new Function<void, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, const void *>("glTexImage1D");
    glTexImage2D = new Function<void, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, const void *>("glTexImage2D");
    glTexImage2DMultisample = new Function<void, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean>("glTexImage2DMultisample");
    glTexImage2DMultisampleCoverageNV = new Function<void, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean>("glTexImage2DMultisampleCoverageNV");
    glTexImage3D = new Function<void, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, const void *>("glTexImage3D");
    glTexImage3DEXT = new Function<void, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, const void *>("glTexImage3DEXT");
    glTexImage3DMultisample = new Function<void, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean>("glTexImage3DMultisample");
    glTexImage3DMultisampleCoverageNV = new Function<void, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean>("glTexImage3DMultisampleCoverageNV");
    glTexImage4DSGIS = new Function<void, GLenum, GLint, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, const void *>("glTexImage4DSGIS");
    glTexPageCommitmentARB = new Function<void, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean>("glTexPageCommitmentARB");
    glTexParameterIiv = new Function<void, GLenum, GLenum, const GLint *>("glTexParameterIiv");
    glTexParameterIivEXT = new Function<void, GLenum, GLenum, const GLint *>("glTexParameterIivEXT");
    glTexParameterIuiv = new Function<void, GLenum, GLenum, const GLuint *>("glTexParameterIuiv");
    glTexParameterIuivEXT = new Function<void, GLenum, GLenum, const GLuint *>("glTexParameterIuivEXT");
    glTexParameterf = new Function<void, GLenum, GLenum, GLfloat>("glTexParameterf");
    glTexParameterfv = new Function<void, GLenum, GLenum, const GLfloat *>("glTexParameterfv");
    glTexParameteri = new Function<void, GLenum, GLenum, GLint>("glTexParameteri");
    glTexParameteriv = new Function<void, GLenum, GLenum, const GLint *>("glTexParameteriv");
    glTexParameterxOES = new Function<void, GLenum, GLenum, GLfixed>("glTexParameterxOES");
    glTexParameterxvOES = new Function<void, GLenum, GLenum, const GLfixed *>("glTexParameterxvOES");
    glTexRenderbufferNV = new Function<void, GLenum, GLuint>("glTexRenderbufferNV");
    glTexStorage1D = new Function<void, GLenum, GLsizei, GLenum, GLsizei>("glTexStorage1D");
    glTexStorage2D = new Function<void, GLenum, GLsizei, GLenum, GLsizei, GLsizei>("glTexStorage2D");
    glTexStorage2DMultisample = new Function<void, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean>("glTexStorage2DMultisample");
    glTexStorage3D = new Function<void, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei>("glTexStorage3D");
    glTexStorage3DMultisample = new Function<void, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean>("glTexStorage3DMultisample");
    glTexStorageSparseAMD = new Function<void, GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, TextureStorageMaskAMD>("glTexStorageSparseAMD");
    glTexSubImage1D = new Function<void, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, const void *>("glTexSubImage1D");
    glTexSubImage1DEXT = new Function<void, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, const void *>("glTexSubImage1DEXT");
    glTexSubImage2D = new Function<void, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const void *>("glTexSubImage2D");
    glTexSubImage2DEXT = new Function<void, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const void *>("glTexSubImage2DEXT");
    glTexSubImage3D = new Function<void, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, const void *>("glTexSubImage3D");
    glTexSubImage3DEXT = new Function<void, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, const void *>("glTexSubImage3DEXT");
    glTexSubImage4DSGIS = new Function<void, GLenum, GLint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLsizei, GLenum, GLenum, const void *>("glTexSubImage4DSGIS");
    glTextureBarrierNV = new Function<void>("glTextureBarrierNV");
    glTextureBufferEXT = new Function<void, GLuint, GLenum, GLenum, GLuint>("glTextureBufferEXT");
    glTextureBufferRangeEXT = new Function<void, GLuint, GLenum, GLenum, GLuint, GLintptr, GLsizeiptr>("glTextureBufferRangeEXT");
    glTextureColorMaskSGIS = new Function<void, GLboolean, GLboolean, GLboolean, GLboolean>("glTextureColorMaskSGIS");
    glTextureImage1DEXT = new Function<void, GLuint, GLenum, GLint, GLint, GLsizei, GLint, GLenum, GLenum, const void *>("glTextureImage1DEXT");
    glTextureImage2DEXT = new Function<void, GLuint, GLenum, GLint, GLint, GLsizei, GLsizei, GLint, GLenum, GLenum, const void *>("glTextureImage2DEXT");
    glTextureImage2DMultisampleCoverageNV = new Function<void, GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLboolean>("glTextureImage2DMultisampleCoverageNV");
    glTextureImage2DMultisampleNV = new Function<void, GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLboolean>("glTextureImage2DMultisampleNV");
    glTextureImage3DEXT = new Function<void, GLuint, GLenum, GLint, GLint, GLsizei, GLsizei, GLsizei, GLint, GLenum, GLenum, const void *>("glTextureImage3DEXT");
    glTextureImage3DMultisampleCoverageNV = new Function<void, GLuint, GLenum, GLsizei, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean>("glTextureImage3DMultisampleCoverageNV");
    glTextureImage3DMultisampleNV = new Function<void, GLuint, GLenum, GLsizei, GLint, GLsizei, GLsizei, GLsizei, GLboolean>("glTextureImage3DMultisampleNV");
    glTextureLightEXT = new Function<void, GLenum>("glTextureLightEXT");
    glTextureMaterialEXT = new Function<void, GLenum, GLenum>("glTextureMaterialEXT");
    glTextureNormalEXT = new Function<void, GLenum>("glTextureNormalEXT");
    glTexturePageCommitmentEXT = new Function<void, GLuint, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLboolean>("glTexturePageCommitmentEXT");
    glTextureParameterIivEXT = new Function<void, GLuint, GLenum, GLenum, const GLint *>("glTextureParameterIivEXT");
    glTextureParameterIuivEXT = new Function<void, GLuint, GLenum, GLenum, const GLuint *>("glTextureParameterIuivEXT");
    glTextureParameterfEXT = new Function<void, GLuint, GLenum, GLenum, GLfloat>("glTextureParameterfEXT");
    glTextureParameterfvEXT = new Function<void, GLuint, GLenum, GLenum, const GLfloat *>("glTextureParameterfvEXT");
    glTextureParameteriEXT = new Function<void, GLuint, GLenum, GLenum, GLint>("glTextureParameteriEXT");
    glTextureParameterivEXT = new Function<void, GLuint, GLenum, GLenum, const GLint *>("glTextureParameterivEXT");
    glTextureRangeAPPLE = new Function<void, GLenum, GLsizei, const void *>("glTextureRangeAPPLE");
    glTextureRenderbufferEXT = new Function<void, GLuint, GLenum, GLuint>("glTextureRenderbufferEXT");
    glTextureStorage1DEXT = new Function<void, GLuint, GLenum, GLsizei, GLenum, GLsizei>("glTextureStorage1DEXT");
    glTextureStorage2DEXT = new Function<void, GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei>("glTextureStorage2DEXT");
    glTextureStorage2DMultisampleEXT = new Function<void, GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLboolean>("glTextureStorage2DMultisampleEXT");
    glTextureStorage3DEXT = new Function<void, GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei>("glTextureStorage3DEXT");
    glTextureStorage3DMultisampleEXT = new Function<void, GLuint, GLenum, GLsizei, GLenum, GLsizei, GLsizei, GLsizei, GLboolean>("glTextureStorage3DMultisampleEXT");
    glTextureStorageSparseAMD = new Function<void, GLuint, GLenum, GLenum, GLsizei, GLsizei, GLsizei, GLsizei, TextureStorageMaskAMD>("glTextureStorageSparseAMD");
    glTextureSubImage1DEXT = new Function<void, GLuint, GLenum, GLint, GLint, GLsizei, GLenum, GLenum, const void *>("glTextureSubImage1DEXT");
    glTextureSubImage2DEXT = new Function<void, GLuint, GLenum, GLint, GLint, GLint, GLsizei, GLsizei, GLenum, GLenum, const void *>("glTextureSubImage2DEXT");
    glTextureSubImage3DEXT = new Function<void, GLuint, GLenum, GLint, GLint, GLint, GLint, GLsizei, GLsizei, GLsizei, GLenum, GLenum, const void *>("glTextureSubImage3DEXT");
    glTextureView = new Function<void, GLuint, GLenum, GLuint, GLenum, GLuint, GLuint, GLuint, GLuint>("glTextureView");
    glTrackMatrixNV = new Function<void, GLenum, GLuint, GLenum, GLenum>("glTrackMatrixNV");
    glTransformFeedbackAttribsNV = new Function<void, GLsizei, const GLint *, GLenum>("glTransformFeedbackAttribsNV");
    glTransformFeedbackStreamAttribsNV = new Function<void, GLsizei, const GLint *, GLsizei, const GLint *, GLenum>("glTransformFeedbackStreamAttribsNV");
    glTransformFeedbackVaryings = new Function<void, GLuint, GLsizei, const GLchar *const*, GLenum>("glTransformFeedbackVaryings");
    glTransformFeedbackVaryingsEXT = new Function<void, GLuint, GLsizei, const GLchar *const*, GLenum>("glTransformFeedbackVaryingsEXT");
    glTransformFeedbackVaryingsNV = new Function<void, GLuint, GLsizei, const GLint *, GLenum>("glTransformFeedbackVaryingsNV");
    glTransformPathNV = new Function<void, GLuint, GLuint, GLenum, const GLfloat *>("glTransformPathNV");
    glTranslated = new Function<void, GLdouble, GLdouble, GLdouble>("glTranslated");
    glTranslatef = new Function<void, GLfloat, GLfloat, GLfloat>("glTranslatef");
    glTranslatexOES = new Function<void, GLfixed, GLfixed, GLfixed>("glTranslatexOES");
    glUniform1d = new Function<void, GLint, GLdouble>("glUniform1d");
    glUniform1dv = new Function<void, GLint, GLsizei, const GLdouble *>("glUniform1dv");
    glUniform1f = new Function<void, GLint, GLfloat>("glUniform1f");
    glUniform1fARB = new Function<void, GLint, GLfloat>("glUniform1fARB");
    glUniform1fv = new Function<void, GLint, GLsizei, const GLfloat *>("glUniform1fv");
    glUniform1fvARB = new Function<void, GLint, GLsizei, const GLfloat *>("glUniform1fvARB");
    glUniform1i = new Function<void, GLint, GLint>("glUniform1i");
    glUniform1i64NV = new Function<void, GLint, GLint64EXT>("glUniform1i64NV");
    glUniform1i64vNV = new Function<void, GLint, GLsizei, const GLint64EXT *>("glUniform1i64vNV");
    glUniform1iARB = new Function<void, GLint, GLint>("glUniform1iARB");
    glUniform1iv = new Function<void, GLint, GLsizei, const GLint *>("glUniform1iv");
    glUniform1ivARB = new Function<void, GLint, GLsizei, const GLint *>("glUniform1ivARB");
    glUniform1ui = new Function<void, GLint, GLuint>("glUniform1ui");
    glUniform1ui64NV = new Function<void, GLint, GLuint64EXT>("glUniform1ui64NV");
    glUniform1ui64vNV = new Function<void, GLint, GLsizei, const GLuint64EXT *>("glUniform1ui64vNV");
    glUniform1uiEXT = new Function<void, GLint, GLuint>("glUniform1uiEXT");
    glUniform1uiv = new Function<void, GLint, GLsizei, const GLuint *>("glUniform1uiv");
    glUniform1uivEXT = new Function<void, GLint, GLsizei, const GLuint *>("glUniform1uivEXT");
    glUniform2d = new Function<void, GLint, GLdouble, GLdouble>("glUniform2d");
    glUniform2dv = new Function<void, GLint, GLsizei, const GLdouble *>("glUniform2dv");
    glUniform2f = new Function<void, GLint, GLfloat, GLfloat>("glUniform2f");
    glUniform2fARB = new Function<void, GLint, GLfloat, GLfloat>("glUniform2fARB");
    glUniform2fv = new Function<void, GLint, GLsizei, const GLfloat *>("glUniform2fv");
    glUniform2fvARB = new Function<void, GLint, GLsizei, const GLfloat *>("glUniform2fvARB");
    glUniform2i = new Function<void, GLint, GLint, GLint>("glUniform2i");
    glUniform2i64NV = new Function<void, GLint, GLint64EXT, GLint64EXT>("glUniform2i64NV");
    glUniform2i64vNV = new Function<void, GLint, GLsizei, const GLint64EXT *>("glUniform2i64vNV");
    glUniform2iARB = new Function<void, GLint, GLint, GLint>("glUniform2iARB");
    glUniform2iv = new Function<void, GLint, GLsizei, const GLint *>("glUniform2iv");
    glUniform2ivARB = new Function<void, GLint, GLsizei, const GLint *>("glUniform2ivARB");
    glUniform2ui = new Function<void, GLint, GLuint, GLuint>("glUniform2ui");
    glUniform2ui64NV = new Function<void, GLint, GLuint64EXT, GLuint64EXT>("glUniform2ui64NV");
    glUniform2ui64vNV = new Function<void, GLint, GLsizei, const GLuint64EXT *>("glUniform2ui64vNV");
    glUniform2uiEXT = new Function<void, GLint, GLuint, GLuint>("glUniform2uiEXT");
    glUniform2uiv = new Function<void, GLint, GLsizei, const GLuint *>("glUniform2uiv");
    glUniform2uivEXT = new Function<void, GLint, GLsizei, const GLuint *>("glUniform2uivEXT");
    glUniform3d = new Function<void, GLint, GLdouble, GLdouble, GLdouble>("glUniform3d");
    glUniform3dv = new Function<void, GLint, GLsizei, const GLdouble *>("glUniform3dv");
    glUniform3f = new Function<void, GLint, GLfloat, GLfloat, GLfloat>("glUniform3f");
    glUniform3fARB = new Function<void, GLint, GLfloat, GLfloat, GLfloat>("glUniform3fARB");
    glUniform3fv = new Function<void, GLint, GLsizei, const GLfloat *>("glUniform3fv");
    glUniform3fvARB = new Function<void, GLint, GLsizei, const GLfloat *>("glUniform3fvARB");
    glUniform3i = new Function<void, GLint, GLint, GLint, GLint>("glUniform3i");
    glUniform3i64NV = new Function<void, GLint, GLint64EXT, GLint64EXT, GLint64EXT>("glUniform3i64NV");
    glUniform3i64vNV = new Function<void, GLint, GLsizei, const GLint64EXT *>("glUniform3i64vNV");
    glUniform3iARB = new Function<void, GLint, GLint, GLint, GLint>("glUniform3iARB");
    glUniform3iv = new Function<void, GLint, GLsizei, const GLint *>("glUniform3iv");
    glUniform3ivARB = new Function<void, GLint, GLsizei, const GLint *>("glUniform3ivARB");
    glUniform3ui = new Function<void, GLint, GLuint, GLuint, GLuint>("glUniform3ui");
    glUniform3ui64NV = new Function<void, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT>("glUniform3ui64NV");
    glUniform3ui64vNV = new Function<void, GLint, GLsizei, const GLuint64EXT *>("glUniform3ui64vNV");
    glUniform3uiEXT = new Function<void, GLint, GLuint, GLuint, GLuint>("glUniform3uiEXT");
    glUniform3uiv = new Function<void, GLint, GLsizei, const GLuint *>("glUniform3uiv");
    glUniform3uivEXT = new Function<void, GLint, GLsizei, const GLuint *>("glUniform3uivEXT");
    glUniform4d = new Function<void, GLint, GLdouble, GLdouble, GLdouble, GLdouble>("glUniform4d");
    glUniform4dv = new Function<void, GLint, GLsizei, const GLdouble *>("glUniform4dv");
    glUniform4f = new Function<void, GLint, GLfloat, GLfloat, GLfloat, GLfloat>("glUniform4f");
    glUniform4fARB = new Function<void, GLint, GLfloat, GLfloat, GLfloat, GLfloat>("glUniform4fARB");
    glUniform4fv = new Function<void, GLint, GLsizei, const GLfloat *>("glUniform4fv");
    glUniform4fvARB = new Function<void, GLint, GLsizei, const GLfloat *>("glUniform4fvARB");
    glUniform4i = new Function<void, GLint, GLint, GLint, GLint, GLint>("glUniform4i");
    glUniform4i64NV = new Function<void, GLint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT>("glUniform4i64NV");
    glUniform4i64vNV = new Function<void, GLint, GLsizei, const GLint64EXT *>("glUniform4i64vNV");
    glUniform4iARB = new Function<void, GLint, GLint, GLint, GLint, GLint>("glUniform4iARB");
    glUniform4iv = new Function<void, GLint, GLsizei, const GLint *>("glUniform4iv");
    glUniform4ivARB = new Function<void, GLint, GLsizei, const GLint *>("glUniform4ivARB");
    glUniform4ui = new Function<void, GLint, GLuint, GLuint, GLuint, GLuint>("glUniform4ui");
    glUniform4ui64NV = new Function<void, GLint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT>("glUniform4ui64NV");
    glUniform4ui64vNV = new Function<void, GLint, GLsizei, const GLuint64EXT *>("glUniform4ui64vNV");
    glUniform4uiEXT = new Function<void, GLint, GLuint, GLuint, GLuint, GLuint>("glUniform4uiEXT");
    glUniform4uiv = new Function<void, GLint, GLsizei, const GLuint *>("glUniform4uiv");
    glUniform4uivEXT = new Function<void, GLint, GLsizei, const GLuint *>("glUniform4uivEXT");
    glUniformBlockBinding = new Function<void, GLuint, GLuint, GLuint>("glUniformBlockBinding");
    glUniformBufferEXT = new Function<void, GLuint, GLint, GLuint>("glUniformBufferEXT");
    glUniformHandleui64ARB = new Function<void, GLint, GLuint64>("glUniformHandleui64ARB");
    glUniformHandleui64NV = new Function<void, GLint, GLuint64>("glUniformHandleui64NV");
    glUniformHandleui64vARB = new Function<void, GLint, GLsizei, const GLuint64 *>("glUniformHandleui64vARB");
    glUniformHandleui64vNV = new Function<void, GLint, GLsizei, const GLuint64 *>("glUniformHandleui64vNV");
    glUniformMatrix2dv = new Function<void, GLint, GLsizei, GLboolean, const GLdouble *>("glUniformMatrix2dv");
    glUniformMatrix2fv = new Function<void, GLint, GLsizei, GLboolean, const GLfloat *>("glUniformMatrix2fv");
    glUniformMatrix2fvARB = new Function<void, GLint, GLsizei, GLboolean, const GLfloat *>("glUniformMatrix2fvARB");
    glUniformMatrix2x3dv = new Function<void, GLint, GLsizei, GLboolean, const GLdouble *>("glUniformMatrix2x3dv");
    glUniformMatrix2x3fv = new Function<void, GLint, GLsizei, GLboolean, const GLfloat *>("glUniformMatrix2x3fv");
    glUniformMatrix2x4dv = new Function<void, GLint, GLsizei, GLboolean, const GLdouble *>("glUniformMatrix2x4dv");
    glUniformMatrix2x4fv = new Function<void, GLint, GLsizei, GLboolean, const GLfloat *>("glUniformMatrix2x4fv");
    glUniformMatrix3dv = new Function<void, GLint, GLsizei, GLboolean, const GLdouble *>("glUniformMatrix3dv");
    glUniformMatrix3fv = new Function<void, GLint, GLsizei, GLboolean, const GLfloat *>("glUniformMatrix3fv");
    glUniformMatrix3fvARB = new Function<void, GLint, GLsizei, GLboolean, const GLfloat *>("glUniformMatrix3fvARB");
    glUniformMatrix3x2dv = new Function<void, GLint, GLsizei, GLboolean, const GLdouble *>("glUniformMatrix3x2dv");
    glUniformMatrix3x2fv = new Function<void, GLint, GLsizei, GLboolean, const GLfloat *>("glUniformMatrix3x2fv");
    glUniformMatrix3x4dv = new Function<void, GLint, GLsizei, GLboolean, const GLdouble *>("glUniformMatrix3x4dv");
    glUniformMatrix3x4fv = new Function<void, GLint, GLsizei, GLboolean, const GLfloat *>("glUniformMatrix3x4fv");
    glUniformMatrix4dv = new Function<void, GLint, GLsizei, GLboolean, const GLdouble *>("glUniformMatrix4dv");
    glUniformMatrix4fv = new Function<void, GLint, GLsizei, GLboolean, const GLfloat *>("glUniformMatrix4fv");
    glUniformMatrix4fvARB = new Function<void, GLint, GLsizei, GLboolean, const GLfloat *>("glUniformMatrix4fvARB");
    glUniformMatrix4x2dv = new Function<void, GLint, GLsizei, GLboolean, const GLdouble *>("glUniformMatrix4x2dv");
    glUniformMatrix4x2fv = new Function<void, GLint, GLsizei, GLboolean, const GLfloat *>("glUniformMatrix4x2fv");
    glUniformMatrix4x3dv = new Function<void, GLint, GLsizei, GLboolean, const GLdouble *>("glUniformMatrix4x3dv");
    glUniformMatrix4x3fv = new Function<void, GLint, GLsizei, GLboolean, const GLfloat *>("glUniformMatrix4x3fv");
    glUniformSubroutinesuiv = new Function<void, GLenum, GLsizei, const GLuint *>("glUniformSubroutinesuiv");
    glUniformui64NV = new Function<void, GLint, GLuint64EXT>("glUniformui64NV");
    glUniformui64vNV = new Function<void, GLint, GLsizei, const GLuint64EXT *>("glUniformui64vNV");
    glUnlockArraysEXT = new Function<void>("glUnlockArraysEXT");
    glUnmapBuffer = new Function<GLboolean, GLenum>("glUnmapBuffer");
    glUnmapBufferARB = new Function<GLboolean, GLenum>("glUnmapBufferARB");
    glUnmapNamedBufferEXT = new Function<GLboolean, GLuint>("glUnmapNamedBufferEXT");
    glUnmapObjectBufferATI = new Function<void, GLuint>("glUnmapObjectBufferATI");
    glUnmapTexture2DINTEL = new Function<void, GLuint, GLint>("glUnmapTexture2DINTEL");
    glUpdateObjectBufferATI = new Function<void, GLuint, GLuint, GLsizei, const void *, GLenum>("glUpdateObjectBufferATI");
    glUseProgram = new Function<void, GLuint>("glUseProgram");
    glUseProgramObjectARB = new Function<void, GLhandleARB>("glUseProgramObjectARB");
    glUseProgramStages = new Function<void, GLuint, UseProgramStageMask, GLuint>("glUseProgramStages");
    glUseShaderProgramEXT = new Function<void, GLenum, GLuint>("glUseShaderProgramEXT");
    glVDPAUFiniNV = new Function<void>("glVDPAUFiniNV");
    glVDPAUGetSurfaceivNV = new Function<void, GLvdpauSurfaceNV, GLenum, GLsizei, GLsizei *, GLint *>("glVDPAUGetSurfaceivNV");
    glVDPAUInitNV = new Function<void, const void *, const void *>("glVDPAUInitNV");
    glVDPAUIsSurfaceNV = new Function<GLboolean, GLvdpauSurfaceNV>("glVDPAUIsSurfaceNV");
    glVDPAUMapSurfacesNV = new Function<void, GLsizei, const GLvdpauSurfaceNV *>("glVDPAUMapSurfacesNV");
    glVDPAURegisterOutputSurfaceNV = new Function<GLvdpauSurfaceNV, const void *, GLenum, GLsizei, const GLuint *>("glVDPAURegisterOutputSurfaceNV");
    glVDPAURegisterVideoSurfaceNV = new Function<GLvdpauSurfaceNV, const void *, GLenum, GLsizei, const GLuint *>("glVDPAURegisterVideoSurfaceNV");
    glVDPAUSurfaceAccessNV = new Function<void, GLvdpauSurfaceNV, GLenum>("glVDPAUSurfaceAccessNV");
    glVDPAUUnmapSurfacesNV = new Function<void, GLsizei, const GLvdpauSurfaceNV *>("glVDPAUUnmapSurfacesNV");
    glVDPAUUnregisterSurfaceNV = new Function<void, GLvdpauSurfaceNV>("glVDPAUUnregisterSurfaceNV");
    glValidateProgram = new Function<void, GLuint>("glValidateProgram");
    glValidateProgramARB = new Function<void, GLhandleARB>("glValidateProgramARB");
    glValidateProgramPipeline = new Function<void, GLuint>("glValidateProgramPipeline");
    glVariantArrayObjectATI = new Function<void, GLuint, GLenum, GLsizei, GLuint, GLuint>("glVariantArrayObjectATI");
    glVariantPointerEXT = new Function<void, GLuint, GLenum, GLuint, const void *>("glVariantPointerEXT");
    glVariantbvEXT = new Function<void, GLuint, const GLbyte *>("glVariantbvEXT");
    glVariantdvEXT = new Function<void, GLuint, const GLdouble *>("glVariantdvEXT");
    glVariantfvEXT = new Function<void, GLuint, const GLfloat *>("glVariantfvEXT");
    glVariantivEXT = new Function<void, GLuint, const GLint *>("glVariantivEXT");
    glVariantsvEXT = new Function<void, GLuint, const GLshort *>("glVariantsvEXT");
    glVariantubvEXT = new Function<void, GLuint, const GLubyte *>("glVariantubvEXT");
    glVariantuivEXT = new Function<void, GLuint, const GLuint *>("glVariantuivEXT");
    glVariantusvEXT = new Function<void, GLuint, const GLushort *>("glVariantusvEXT");
    glVertex2bOES = new Function<void, GLbyte, GLbyte>("glVertex2bOES");
    glVertex2bvOES = new Function<void, const GLbyte *>("glVertex2bvOES");
    glVertex2d = new Function<void, GLdouble, GLdouble>("glVertex2d");
    glVertex2dv = new Function<void, const GLdouble *>("glVertex2dv");
    glVertex2f = new Function<void, GLfloat, GLfloat>("glVertex2f");
    glVertex2fv = new Function<void, const GLfloat *>("glVertex2fv");
    glVertex2hNV = new Function<void, GLhalfNV, GLhalfNV>("glVertex2hNV");
    glVertex2hvNV = new Function<void, const GLhalfNV *>("glVertex2hvNV");
    glVertex2i = new Function<void, GLint, GLint>("glVertex2i");
    glVertex2iv = new Function<void, const GLint *>("glVertex2iv");
    glVertex2s = new Function<void, GLshort, GLshort>("glVertex2s");
    glVertex2sv = new Function<void, const GLshort *>("glVertex2sv");
    glVertex2xOES = new Function<void, GLfixed>("glVertex2xOES");
    glVertex2xvOES = new Function<void, const GLfixed *>("glVertex2xvOES");
    glVertex3bOES = new Function<void, GLbyte, GLbyte, GLbyte>("glVertex3bOES");
    glVertex3bvOES = new Function<void, const GLbyte *>("glVertex3bvOES");
    glVertex3d = new Function<void, GLdouble, GLdouble, GLdouble>("glVertex3d");
    glVertex3dv = new Function<void, const GLdouble *>("glVertex3dv");
    glVertex3f = new Function<void, GLfloat, GLfloat, GLfloat>("glVertex3f");
    glVertex3fv = new Function<void, const GLfloat *>("glVertex3fv");
    glVertex3hNV = new Function<void, GLhalfNV, GLhalfNV, GLhalfNV>("glVertex3hNV");
    glVertex3hvNV = new Function<void, const GLhalfNV *>("glVertex3hvNV");
    glVertex3i = new Function<void, GLint, GLint, GLint>("glVertex3i");
    glVertex3iv = new Function<void, const GLint *>("glVertex3iv");
    glVertex3s = new Function<void, GLshort, GLshort, GLshort>("glVertex3s");
    glVertex3sv = new Function<void, const GLshort *>("glVertex3sv");
    glVertex3xOES = new Function<void, GLfixed, GLfixed>("glVertex3xOES");
    glVertex3xvOES = new Function<void, const GLfixed *>("glVertex3xvOES");
    glVertex4bOES = new Function<void, GLbyte, GLbyte, GLbyte, GLbyte>("glVertex4bOES");
    glVertex4bvOES = new Function<void, const GLbyte *>("glVertex4bvOES");
    glVertex4d = new Function<void, GLdouble, GLdouble, GLdouble, GLdouble>("glVertex4d");
    glVertex4dv = new Function<void, const GLdouble *>("glVertex4dv");
    glVertex4f = new Function<void, GLfloat, GLfloat, GLfloat, GLfloat>("glVertex4f");
    glVertex4fv = new Function<void, const GLfloat *>("glVertex4fv");
    glVertex4hNV = new Function<void, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV>("glVertex4hNV");
    glVertex4hvNV = new Function<void, const GLhalfNV *>("glVertex4hvNV");
    glVertex4i = new Function<void, GLint, GLint, GLint, GLint>("glVertex4i");
    glVertex4iv = new Function<void, const GLint *>("glVertex4iv");
    glVertex4s = new Function<void, GLshort, GLshort, GLshort, GLshort>("glVertex4s");
    glVertex4sv = new Function<void, const GLshort *>("glVertex4sv");
    glVertex4xOES = new Function<void, GLfixed, GLfixed, GLfixed>("glVertex4xOES");
    glVertex4xvOES = new Function<void, const GLfixed *>("glVertex4xvOES");
    glVertexArrayBindVertexBufferEXT = new Function<void, GLuint, GLuint, GLuint, GLintptr, GLsizei>("glVertexArrayBindVertexBufferEXT");
    glVertexArrayColorOffsetEXT = new Function<void, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr>("glVertexArrayColorOffsetEXT");
    glVertexArrayEdgeFlagOffsetEXT = new Function<void, GLuint, GLuint, GLsizei, GLintptr>("glVertexArrayEdgeFlagOffsetEXT");
    glVertexArrayFogCoordOffsetEXT = new Function<void, GLuint, GLuint, GLenum, GLsizei, GLintptr>("glVertexArrayFogCoordOffsetEXT");
    glVertexArrayIndexOffsetEXT = new Function<void, GLuint, GLuint, GLenum, GLsizei, GLintptr>("glVertexArrayIndexOffsetEXT");
    glVertexArrayMultiTexCoordOffsetEXT = new Function<void, GLuint, GLuint, GLenum, GLint, GLenum, GLsizei, GLintptr>("glVertexArrayMultiTexCoordOffsetEXT");
    glVertexArrayNormalOffsetEXT = new Function<void, GLuint, GLuint, GLenum, GLsizei, GLintptr>("glVertexArrayNormalOffsetEXT");
    glVertexArrayParameteriAPPLE = new Function<void, GLenum, GLint>("glVertexArrayParameteriAPPLE");
    glVertexArrayRangeAPPLE = new Function<void, GLsizei, void *>("glVertexArrayRangeAPPLE");
    glVertexArrayRangeNV = new Function<void, GLsizei, const void *>("glVertexArrayRangeNV");
    glVertexArraySecondaryColorOffsetEXT = new Function<void, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr>("glVertexArraySecondaryColorOffsetEXT");
    glVertexArrayTexCoordOffsetEXT = new Function<void, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr>("glVertexArrayTexCoordOffsetEXT");
    glVertexArrayVertexAttribBindingEXT = new Function<void, GLuint, GLuint, GLuint>("glVertexArrayVertexAttribBindingEXT");
    glVertexArrayVertexAttribDivisorEXT = new Function<void, GLuint, GLuint, GLuint>("glVertexArrayVertexAttribDivisorEXT");
    glVertexArrayVertexAttribFormatEXT = new Function<void, GLuint, GLuint, GLint, GLenum, GLboolean, GLuint>("glVertexArrayVertexAttribFormatEXT");
    glVertexArrayVertexAttribIFormatEXT = new Function<void, GLuint, GLuint, GLint, GLenum, GLuint>("glVertexArrayVertexAttribIFormatEXT");
    glVertexArrayVertexAttribIOffsetEXT = new Function<void, GLuint, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr>("glVertexArrayVertexAttribIOffsetEXT");
    glVertexArrayVertexAttribLFormatEXT = new Function<void, GLuint, GLuint, GLint, GLenum, GLuint>("glVertexArrayVertexAttribLFormatEXT");
    glVertexArrayVertexAttribLOffsetEXT = new Function<void, GLuint, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr>("glVertexArrayVertexAttribLOffsetEXT");
    glVertexArrayVertexAttribOffsetEXT = new Function<void, GLuint, GLuint, GLuint, GLint, GLenum, GLboolean, GLsizei, GLintptr>("glVertexArrayVertexAttribOffsetEXT");
    glVertexArrayVertexBindingDivisorEXT = new Function<void, GLuint, GLuint, GLuint>("glVertexArrayVertexBindingDivisorEXT");
    glVertexArrayVertexOffsetEXT = new Function<void, GLuint, GLuint, GLint, GLenum, GLsizei, GLintptr>("glVertexArrayVertexOffsetEXT");
    glVertexAttrib1d = new Function<void, GLuint, GLdouble>("glVertexAttrib1d");
    glVertexAttrib1dARB = new Function<void, GLuint, GLdouble>("glVertexAttrib1dARB");
    glVertexAttrib1dNV = new Function<void, GLuint, GLdouble>("glVertexAttrib1dNV");
    glVertexAttrib1dv = new Function<void, GLuint, const GLdouble *>("glVertexAttrib1dv");
    glVertexAttrib1dvARB = new Function<void, GLuint, const GLdouble *>("glVertexAttrib1dvARB");
    glVertexAttrib1dvNV = new Function<void, GLuint, const GLdouble *>("glVertexAttrib1dvNV");
    glVertexAttrib1f = new Function<void, GLuint, GLfloat>("glVertexAttrib1f");
    glVertexAttrib1fARB = new Function<void, GLuint, GLfloat>("glVertexAttrib1fARB");
    glVertexAttrib1fNV = new Function<void, GLuint, GLfloat>("glVertexAttrib1fNV");
    glVertexAttrib1fv = new Function<void, GLuint, const GLfloat *>("glVertexAttrib1fv");
    glVertexAttrib1fvARB = new Function<void, GLuint, const GLfloat *>("glVertexAttrib1fvARB");
    glVertexAttrib1fvNV = new Function<void, GLuint, const GLfloat *>("glVertexAttrib1fvNV");
    glVertexAttrib1hNV = new Function<void, GLuint, GLhalfNV>("glVertexAttrib1hNV");
    glVertexAttrib1hvNV = new Function<void, GLuint, const GLhalfNV *>("glVertexAttrib1hvNV");
    glVertexAttrib1s = new Function<void, GLuint, GLshort>("glVertexAttrib1s");
    glVertexAttrib1sARB = new Function<void, GLuint, GLshort>("glVertexAttrib1sARB");
    glVertexAttrib1sNV = new Function<void, GLuint, GLshort>("glVertexAttrib1sNV");
    glVertexAttrib1sv = new Function<void, GLuint, const GLshort *>("glVertexAttrib1sv");
    glVertexAttrib1svARB = new Function<void, GLuint, const GLshort *>("glVertexAttrib1svARB");
    glVertexAttrib1svNV = new Function<void, GLuint, const GLshort *>("glVertexAttrib1svNV");
    glVertexAttrib2d = new Function<void, GLuint, GLdouble, GLdouble>("glVertexAttrib2d");
    glVertexAttrib2dARB = new Function<void, GLuint, GLdouble, GLdouble>("glVertexAttrib2dARB");
    glVertexAttrib2dNV = new Function<void, GLuint, GLdouble, GLdouble>("glVertexAttrib2dNV");
    glVertexAttrib2dv = new Function<void, GLuint, const GLdouble *>("glVertexAttrib2dv");
    glVertexAttrib2dvARB = new Function<void, GLuint, const GLdouble *>("glVertexAttrib2dvARB");
    glVertexAttrib2dvNV = new Function<void, GLuint, const GLdouble *>("glVertexAttrib2dvNV");
    glVertexAttrib2f = new Function<void, GLuint, GLfloat, GLfloat>("glVertexAttrib2f");
    glVertexAttrib2fARB = new Function<void, GLuint, GLfloat, GLfloat>("glVertexAttrib2fARB");
    glVertexAttrib2fNV = new Function<void, GLuint, GLfloat, GLfloat>("glVertexAttrib2fNV");
    glVertexAttrib2fv = new Function<void, GLuint, const GLfloat *>("glVertexAttrib2fv");
    glVertexAttrib2fvARB = new Function<void, GLuint, const GLfloat *>("glVertexAttrib2fvARB");
    glVertexAttrib2fvNV = new Function<void, GLuint, const GLfloat *>("glVertexAttrib2fvNV");
    glVertexAttrib2hNV = new Function<void, GLuint, GLhalfNV, GLhalfNV>("glVertexAttrib2hNV");
    glVertexAttrib2hvNV = new Function<void, GLuint, const GLhalfNV *>("glVertexAttrib2hvNV");
    glVertexAttrib2s = new Function<void, GLuint, GLshort, GLshort>("glVertexAttrib2s");
    glVertexAttrib2sARB = new Function<void, GLuint, GLshort, GLshort>("glVertexAttrib2sARB");
    glVertexAttrib2sNV = new Function<void, GLuint, GLshort, GLshort>("glVertexAttrib2sNV");
    glVertexAttrib2sv = new Function<void, GLuint, const GLshort *>("glVertexAttrib2sv");
    glVertexAttrib2svARB = new Function<void, GLuint, const GLshort *>("glVertexAttrib2svARB");
    glVertexAttrib2svNV = new Function<void, GLuint, const GLshort *>("glVertexAttrib2svNV");
    glVertexAttrib3d = new Function<void, GLuint, GLdouble, GLdouble, GLdouble>("glVertexAttrib3d");
    glVertexAttrib3dARB = new Function<void, GLuint, GLdouble, GLdouble, GLdouble>("glVertexAttrib3dARB");
    glVertexAttrib3dNV = new Function<void, GLuint, GLdouble, GLdouble, GLdouble>("glVertexAttrib3dNV");
    glVertexAttrib3dv = new Function<void, GLuint, const GLdouble *>("glVertexAttrib3dv");
    glVertexAttrib3dvARB = new Function<void, GLuint, const GLdouble *>("glVertexAttrib3dvARB");
    glVertexAttrib3dvNV = new Function<void, GLuint, const GLdouble *>("glVertexAttrib3dvNV");
    glVertexAttrib3f = new Function<void, GLuint, GLfloat, GLfloat, GLfloat>("glVertexAttrib3f");
    glVertexAttrib3fARB = new Function<void, GLuint, GLfloat, GLfloat, GLfloat>("glVertexAttrib3fARB");
    glVertexAttrib3fNV = new Function<void, GLuint, GLfloat, GLfloat, GLfloat>("glVertexAttrib3fNV");
    glVertexAttrib3fv = new Function<void, GLuint, const GLfloat *>("glVertexAttrib3fv");
    glVertexAttrib3fvARB = new Function<void, GLuint, const GLfloat *>("glVertexAttrib3fvARB");
    glVertexAttrib3fvNV = new Function<void, GLuint, const GLfloat *>("glVertexAttrib3fvNV");
    glVertexAttrib3hNV = new Function<void, GLuint, GLhalfNV, GLhalfNV, GLhalfNV>("glVertexAttrib3hNV");
    glVertexAttrib3hvNV = new Function<void, GLuint, const GLhalfNV *>("glVertexAttrib3hvNV");
    glVertexAttrib3s = new Function<void, GLuint, GLshort, GLshort, GLshort>("glVertexAttrib3s");
    glVertexAttrib3sARB = new Function<void, GLuint, GLshort, GLshort, GLshort>("glVertexAttrib3sARB");
    glVertexAttrib3sNV = new Function<void, GLuint, GLshort, GLshort, GLshort>("glVertexAttrib3sNV");
    glVertexAttrib3sv = new Function<void, GLuint, const GLshort *>("glVertexAttrib3sv");
    glVertexAttrib3svARB = new Function<void, GLuint, const GLshort *>("glVertexAttrib3svARB");
    glVertexAttrib3svNV = new Function<void, GLuint, const GLshort *>("glVertexAttrib3svNV");
    glVertexAttrib4Nbv = new Function<void, GLuint, const GLbyte *>("glVertexAttrib4Nbv");
    glVertexAttrib4NbvARB = new Function<void, GLuint, const GLbyte *>("glVertexAttrib4NbvARB");
    glVertexAttrib4Niv = new Function<void, GLuint, const GLint *>("glVertexAttrib4Niv");
    glVertexAttrib4NivARB = new Function<void, GLuint, const GLint *>("glVertexAttrib4NivARB");
    glVertexAttrib4Nsv = new Function<void, GLuint, const GLshort *>("glVertexAttrib4Nsv");
    glVertexAttrib4NsvARB = new Function<void, GLuint, const GLshort *>("glVertexAttrib4NsvARB");
    glVertexAttrib4Nub = new Function<void, GLuint, GLubyte, GLubyte, GLubyte, GLubyte>("glVertexAttrib4Nub");
    glVertexAttrib4NubARB = new Function<void, GLuint, GLubyte, GLubyte, GLubyte, GLubyte>("glVertexAttrib4NubARB");
    glVertexAttrib4Nubv = new Function<void, GLuint, const GLubyte *>("glVertexAttrib4Nubv");
    glVertexAttrib4NubvARB = new Function<void, GLuint, const GLubyte *>("glVertexAttrib4NubvARB");
    glVertexAttrib4Nuiv = new Function<void, GLuint, const GLuint *>("glVertexAttrib4Nuiv");
    glVertexAttrib4NuivARB = new Function<void, GLuint, const GLuint *>("glVertexAttrib4NuivARB");
    glVertexAttrib4Nusv = new Function<void, GLuint, const GLushort *>("glVertexAttrib4Nusv");
    glVertexAttrib4NusvARB = new Function<void, GLuint, const GLushort *>("glVertexAttrib4NusvARB");
    glVertexAttrib4bv = new Function<void, GLuint, const GLbyte *>("glVertexAttrib4bv");
    glVertexAttrib4bvARB = new Function<void, GLuint, const GLbyte *>("glVertexAttrib4bvARB");
    glVertexAttrib4d = new Function<void, GLuint, GLdouble, GLdouble, GLdouble, GLdouble>("glVertexAttrib4d");
    glVertexAttrib4dARB = new Function<void, GLuint, GLdouble, GLdouble, GLdouble, GLdouble>("glVertexAttrib4dARB");
    glVertexAttrib4dNV = new Function<void, GLuint, GLdouble, GLdouble, GLdouble, GLdouble>("glVertexAttrib4dNV");
    glVertexAttrib4dv = new Function<void, GLuint, const GLdouble *>("glVertexAttrib4dv");
    glVertexAttrib4dvARB = new Function<void, GLuint, const GLdouble *>("glVertexAttrib4dvARB");
    glVertexAttrib4dvNV = new Function<void, GLuint, const GLdouble *>("glVertexAttrib4dvNV");
    glVertexAttrib4f = new Function<void, GLuint, GLfloat, GLfloat, GLfloat, GLfloat>("glVertexAttrib4f");
    glVertexAttrib4fARB = new Function<void, GLuint, GLfloat, GLfloat, GLfloat, GLfloat>("glVertexAttrib4fARB");
    glVertexAttrib4fNV = new Function<void, GLuint, GLfloat, GLfloat, GLfloat, GLfloat>("glVertexAttrib4fNV");
    glVertexAttrib4fv = new Function<void, GLuint, const GLfloat *>("glVertexAttrib4fv");
    glVertexAttrib4fvARB = new Function<void, GLuint, const GLfloat *>("glVertexAttrib4fvARB");
    glVertexAttrib4fvNV = new Function<void, GLuint, const GLfloat *>("glVertexAttrib4fvNV");
    glVertexAttrib4hNV = new Function<void, GLuint, GLhalfNV, GLhalfNV, GLhalfNV, GLhalfNV>("glVertexAttrib4hNV");
    glVertexAttrib4hvNV = new Function<void, GLuint, const GLhalfNV *>("glVertexAttrib4hvNV");
    glVertexAttrib4iv = new Function<void, GLuint, const GLint *>("glVertexAttrib4iv");
    glVertexAttrib4ivARB = new Function<void, GLuint, const GLint *>("glVertexAttrib4ivARB");
    glVertexAttrib4s = new Function<void, GLuint, GLshort, GLshort, GLshort, GLshort>("glVertexAttrib4s");
    glVertexAttrib4sARB = new Function<void, GLuint, GLshort, GLshort, GLshort, GLshort>("glVertexAttrib4sARB");
    glVertexAttrib4sNV = new Function<void, GLuint, GLshort, GLshort, GLshort, GLshort>("glVertexAttrib4sNV");
    glVertexAttrib4sv = new Function<void, GLuint, const GLshort *>("glVertexAttrib4sv");
    glVertexAttrib4svARB = new Function<void, GLuint, const GLshort *>("glVertexAttrib4svARB");
    glVertexAttrib4svNV = new Function<void, GLuint, const GLshort *>("glVertexAttrib4svNV");
    glVertexAttrib4ubNV = new Function<void, GLuint, GLubyte, GLubyte, GLubyte, GLubyte>("glVertexAttrib4ubNV");
    glVertexAttrib4ubv = new Function<void, GLuint, const GLubyte *>("glVertexAttrib4ubv");
    glVertexAttrib4ubvARB = new Function<void, GLuint, const GLubyte *>("glVertexAttrib4ubvARB");
    glVertexAttrib4ubvNV = new Function<void, GLuint, const GLubyte *>("glVertexAttrib4ubvNV");
    glVertexAttrib4uiv = new Function<void, GLuint, const GLuint *>("glVertexAttrib4uiv");
    glVertexAttrib4uivARB = new Function<void, GLuint, const GLuint *>("glVertexAttrib4uivARB");
    glVertexAttrib4usv = new Function<void, GLuint, const GLushort *>("glVertexAttrib4usv");
    glVertexAttrib4usvARB = new Function<void, GLuint, const GLushort *>("glVertexAttrib4usvARB");
    glVertexAttribArrayObjectATI = new Function<void, GLuint, GLint, GLenum, GLboolean, GLsizei, GLuint, GLuint>("glVertexAttribArrayObjectATI");
    glVertexAttribBinding = new Function<void, GLuint, GLuint>("glVertexAttribBinding");
    glVertexAttribDivisor = new Function<void, GLuint, GLuint>("glVertexAttribDivisor");
    glVertexAttribDivisorARB = new Function<void, GLuint, GLuint>("glVertexAttribDivisorARB");
    glVertexAttribFormat = new Function<void, GLuint, GLint, GLenum, GLboolean, GLuint>("glVertexAttribFormat");
    glVertexAttribFormatNV = new Function<void, GLuint, GLint, GLenum, GLboolean, GLsizei>("glVertexAttribFormatNV");
    glVertexAttribI1i = new Function<void, GLuint, GLint>("glVertexAttribI1i");
    glVertexAttribI1iEXT = new Function<void, GLuint, GLint>("glVertexAttribI1iEXT");
    glVertexAttribI1iv = new Function<void, GLuint, const GLint *>("glVertexAttribI1iv");
    glVertexAttribI1ivEXT = new Function<void, GLuint, const GLint *>("glVertexAttribI1ivEXT");
    glVertexAttribI1ui = new Function<void, GLuint, GLuint>("glVertexAttribI1ui");
    glVertexAttribI1uiEXT = new Function<void, GLuint, GLuint>("glVertexAttribI1uiEXT");
    glVertexAttribI1uiv = new Function<void, GLuint, const GLuint *>("glVertexAttribI1uiv");
    glVertexAttribI1uivEXT = new Function<void, GLuint, const GLuint *>("glVertexAttribI1uivEXT");
    glVertexAttribI2i = new Function<void, GLuint, GLint, GLint>("glVertexAttribI2i");
    glVertexAttribI2iEXT = new Function<void, GLuint, GLint, GLint>("glVertexAttribI2iEXT");
    glVertexAttribI2iv = new Function<void, GLuint, const GLint *>("glVertexAttribI2iv");
    glVertexAttribI2ivEXT = new Function<void, GLuint, const GLint *>("glVertexAttribI2ivEXT");
    glVertexAttribI2ui = new Function<void, GLuint, GLuint, GLuint>("glVertexAttribI2ui");
    glVertexAttribI2uiEXT = new Function<void, GLuint, GLuint, GLuint>("glVertexAttribI2uiEXT");
    glVertexAttribI2uiv = new Function<void, GLuint, const GLuint *>("glVertexAttribI2uiv");
    glVertexAttribI2uivEXT = new Function<void, GLuint, const GLuint *>("glVertexAttribI2uivEXT");
    glVertexAttribI3i = new Function<void, GLuint, GLint, GLint, GLint>("glVertexAttribI3i");
    glVertexAttribI3iEXT = new Function<void, GLuint, GLint, GLint, GLint>("glVertexAttribI3iEXT");
    glVertexAttribI3iv = new Function<void, GLuint, const GLint *>("glVertexAttribI3iv");
    glVertexAttribI3ivEXT = new Function<void, GLuint, const GLint *>("glVertexAttribI3ivEXT");
    glVertexAttribI3ui = new Function<void, GLuint, GLuint, GLuint, GLuint>("glVertexAttribI3ui");
    glVertexAttribI3uiEXT = new Function<void, GLuint, GLuint, GLuint, GLuint>("glVertexAttribI3uiEXT");
    glVertexAttribI3uiv = new Function<void, GLuint, const GLuint *>("glVertexAttribI3uiv");
    glVertexAttribI3uivEXT = new Function<void, GLuint, const GLuint *>("glVertexAttribI3uivEXT");
    glVertexAttribI4bv = new Function<void, GLuint, const GLbyte *>("glVertexAttribI4bv");
    glVertexAttribI4bvEXT = new Function<void, GLuint, const GLbyte *>("glVertexAttribI4bvEXT");
    glVertexAttribI4i = new Function<void, GLuint, GLint, GLint, GLint, GLint>("glVertexAttribI4i");
    glVertexAttribI4iEXT = new Function<void, GLuint, GLint, GLint, GLint, GLint>("glVertexAttribI4iEXT");
    glVertexAttribI4iv = new Function<void, GLuint, const GLint *>("glVertexAttribI4iv");
    glVertexAttribI4ivEXT = new Function<void, GLuint, const GLint *>("glVertexAttribI4ivEXT");
    glVertexAttribI4sv = new Function<void, GLuint, const GLshort *>("glVertexAttribI4sv");
    glVertexAttribI4svEXT = new Function<void, GLuint, const GLshort *>("glVertexAttribI4svEXT");
    glVertexAttribI4ubv = new Function<void, GLuint, const GLubyte *>("glVertexAttribI4ubv");
    glVertexAttribI4ubvEXT = new Function<void, GLuint, const GLubyte *>("glVertexAttribI4ubvEXT");
    glVertexAttribI4ui = new Function<void, GLuint, GLuint, GLuint, GLuint, GLuint>("glVertexAttribI4ui");
    glVertexAttribI4uiEXT = new Function<void, GLuint, GLuint, GLuint, GLuint, GLuint>("glVertexAttribI4uiEXT");
    glVertexAttribI4uiv = new Function<void, GLuint, const GLuint *>("glVertexAttribI4uiv");
    glVertexAttribI4uivEXT = new Function<void, GLuint, const GLuint *>("glVertexAttribI4uivEXT");
    glVertexAttribI4usv = new Function<void, GLuint, const GLushort *>("glVertexAttribI4usv");
    glVertexAttribI4usvEXT = new Function<void, GLuint, const GLushort *>("glVertexAttribI4usvEXT");
    glVertexAttribIFormat = new Function<void, GLuint, GLint, GLenum, GLuint>("glVertexAttribIFormat");
    glVertexAttribIFormatNV = new Function<void, GLuint, GLint, GLenum, GLsizei>("glVertexAttribIFormatNV");
    glVertexAttribIPointer = new Function<void, GLuint, GLint, GLenum, GLsizei, const void *>("glVertexAttribIPointer");
    glVertexAttribIPointerEXT = new Function<void, GLuint, GLint, GLenum, GLsizei, const void *>("glVertexAttribIPointerEXT");
    glVertexAttribL1d = new Function<void, GLuint, GLdouble>("glVertexAttribL1d");
    glVertexAttribL1dEXT = new Function<void, GLuint, GLdouble>("glVertexAttribL1dEXT");
    glVertexAttribL1dv = new Function<void, GLuint, const GLdouble *>("glVertexAttribL1dv");
    glVertexAttribL1dvEXT = new Function<void, GLuint, const GLdouble *>("glVertexAttribL1dvEXT");
    glVertexAttribL1i64NV = new Function<void, GLuint, GLint64EXT>("glVertexAttribL1i64NV");
    glVertexAttribL1i64vNV = new Function<void, GLuint, const GLint64EXT *>("glVertexAttribL1i64vNV");
    glVertexAttribL1ui64ARB = new Function<void, GLuint, GLuint64EXT>("glVertexAttribL1ui64ARB");
    glVertexAttribL1ui64NV = new Function<void, GLuint, GLuint64EXT>("glVertexAttribL1ui64NV");
    glVertexAttribL1ui64vARB = new Function<void, GLuint, const GLuint64EXT *>("glVertexAttribL1ui64vARB");
    glVertexAttribL1ui64vNV = new Function<void, GLuint, const GLuint64EXT *>("glVertexAttribL1ui64vNV");
    glVertexAttribL2d = new Function<void, GLuint, GLdouble, GLdouble>("glVertexAttribL2d");
    glVertexAttribL2dEXT = new Function<void, GLuint, GLdouble, GLdouble>("glVertexAttribL2dEXT");
    glVertexAttribL2dv = new Function<void, GLuint, const GLdouble *>("glVertexAttribL2dv");
    glVertexAttribL2dvEXT = new Function<void, GLuint, const GLdouble *>("glVertexAttribL2dvEXT");
    glVertexAttribL2i64NV = new Function<void, GLuint, GLint64EXT, GLint64EXT>("glVertexAttribL2i64NV");
    glVertexAttribL2i64vNV = new Function<void, GLuint, const GLint64EXT *>("glVertexAttribL2i64vNV");
    glVertexAttribL2ui64NV = new Function<void, GLuint, GLuint64EXT, GLuint64EXT>("glVertexAttribL2ui64NV");
    glVertexAttribL2ui64vNV = new Function<void, GLuint, const GLuint64EXT *>("glVertexAttribL2ui64vNV");
    glVertexAttribL3d = new Function<void, GLuint, GLdouble, GLdouble, GLdouble>("glVertexAttribL3d");
    glVertexAttribL3dEXT = new Function<void, GLuint, GLdouble, GLdouble, GLdouble>("glVertexAttribL3dEXT");
    glVertexAttribL3dv = new Function<void, GLuint, const GLdouble *>("glVertexAttribL3dv");
    glVertexAttribL3dvEXT = new Function<void, GLuint, const GLdouble *>("glVertexAttribL3dvEXT");
    glVertexAttribL3i64NV = new Function<void, GLuint, GLint64EXT, GLint64EXT, GLint64EXT>("glVertexAttribL3i64NV");
    glVertexAttribL3i64vNV = new Function<void, GLuint, const GLint64EXT *>("glVertexAttribL3i64vNV");
    glVertexAttribL3ui64NV = new Function<void, GLuint, GLuint64EXT, GLuint64EXT, GLuint64EXT>("glVertexAttribL3ui64NV");
    glVertexAttribL3ui64vNV = new Function<void, GLuint, const GLuint64EXT *>("glVertexAttribL3ui64vNV");
    glVertexAttribL4d = new Function<void, GLuint, GLdouble, GLdouble, GLdouble, GLdouble>("glVertexAttribL4d");
    glVertexAttribL4dEXT = new Function<void, GLuint, GLdouble, GLdouble, GLdouble, GLdouble>("glVertexAttribL4dEXT");
    glVertexAttribL4dv = new Function<void, GLuint, const GLdouble *>("glVertexAttribL4dv");
    glVertexAttribL4dvEXT = new Function<void, GLuint, const GLdouble *>("glVertexAttribL4dvEXT");
    glVertexAttribL4i64NV = new Function<void, GLuint, GLint64EXT, GLint64EXT, GLint64EXT, GLint64EXT>("glVertexAttribL4i64NV");
    glVertexAttribL4i64vNV = new Function<void, GLuint, const GLint64EXT *>("glVertexAttribL4i64vNV");
    glVertexAttribL4ui64NV = new Function<void, GLuint, GLuint64EXT, GLuint64EXT, GLuint64EXT, GLuint64EXT>("glVertexAttribL4ui64NV");
    glVertexAttribL4ui64vNV = new Function<void, GLuint, const GLuint64EXT *>("glVertexAttribL4ui64vNV");
    glVertexAttribLFormat = new Function<void, GLuint, GLint, GLenum, GLuint>("glVertexAttribLFormat");
    glVertexAttribLFormatNV = new Function<void, GLuint, GLint, GLenum, GLsizei>("glVertexAttribLFormatNV");
    glVertexAttribLPointer = new Function<void, GLuint, GLint, GLenum, GLsizei, const void *>("glVertexAttribLPointer");
    glVertexAttribLPointerEXT = new Function<void, GLuint, GLint, GLenum, GLsizei, const void *>("glVertexAttribLPointerEXT");
    glVertexAttribP1ui = new Function<void, GLuint, GLenum, GLboolean, GLuint>("glVertexAttribP1ui");
    glVertexAttribP1uiv = new Function<void, GLuint, GLenum, GLboolean, const GLuint *>("glVertexAttribP1uiv");
    glVertexAttribP2ui = new Function<void, GLuint, GLenum, GLboolean, GLuint>("glVertexAttribP2ui");
    glVertexAttribP2uiv = new Function<void, GLuint, GLenum, GLboolean, const GLuint *>("glVertexAttribP2uiv");
    glVertexAttribP3ui = new Function<void, GLuint, GLenum, GLboolean, GLuint>("glVertexAttribP3ui");
    glVertexAttribP3uiv = new Function<void, GLuint, GLenum, GLboolean, const GLuint *>("glVertexAttribP3uiv");
    glVertexAttribP4ui = new Function<void, GLuint, GLenum, GLboolean, GLuint>("glVertexAttribP4ui");
    glVertexAttribP4uiv = new Function<void, GLuint, GLenum, GLboolean, const GLuint *>("glVertexAttribP4uiv");
    glVertexAttribParameteriAMD = new Function<void, GLuint, GLenum, GLint>("glVertexAttribParameteriAMD");
    glVertexAttribPointer = new Function<void, GLuint, GLint, GLenum, GLboolean, GLsizei, const void *>("glVertexAttribPointer");
    glVertexAttribPointerARB = new Function<void, GLuint, GLint, GLenum, GLboolean, GLsizei, const void *>("glVertexAttribPointerARB");
    glVertexAttribPointerNV = new Function<void, GLuint, GLint, GLenum, GLsizei, const void *>("glVertexAttribPointerNV");
    glVertexAttribs1dvNV = new Function<void, GLuint, GLsizei, const GLdouble *>("glVertexAttribs1dvNV");
    glVertexAttribs1fvNV = new Function<void, GLuint, GLsizei, const GLfloat *>("glVertexAttribs1fvNV");
    glVertexAttribs1hvNV = new Function<void, GLuint, GLsizei, const GLhalfNV *>("glVertexAttribs1hvNV");
    glVertexAttribs1svNV = new Function<void, GLuint, GLsizei, const GLshort *>("glVertexAttribs1svNV");
    glVertexAttribs2dvNV = new Function<void, GLuint, GLsizei, const GLdouble *>("glVertexAttribs2dvNV");
    glVertexAttribs2fvNV = new Function<void, GLuint, GLsizei, const GLfloat *>("glVertexAttribs2fvNV");
    glVertexAttribs2hvNV = new Function<void, GLuint, GLsizei, const GLhalfNV *>("glVertexAttribs2hvNV");
    glVertexAttribs2svNV = new Function<void, GLuint, GLsizei, const GLshort *>("glVertexAttribs2svNV");
    glVertexAttribs3dvNV = new Function<void, GLuint, GLsizei, const GLdouble *>("glVertexAttribs3dvNV");
    glVertexAttribs3fvNV = new Function<void, GLuint, GLsizei, const GLfloat *>("glVertexAttribs3fvNV");
    glVertexAttribs3hvNV = new Function<void, GLuint, GLsizei, const GLhalfNV *>("glVertexAttribs3hvNV");
    glVertexAttribs3svNV = new Function<void, GLuint, GLsizei, const GLshort *>("glVertexAttribs3svNV");
    glVertexAttribs4dvNV = new Function<void, GLuint, GLsizei, const GLdouble *>("glVertexAttribs4dvNV");
    glVertexAttribs4fvNV = new Function<void, GLuint, GLsizei, const GLfloat *>("glVertexAttribs4fvNV");
    glVertexAttribs4hvNV = new Function<void, GLuint, GLsizei, const GLhalfNV *>("glVertexAttribs4hvNV");
    glVertexAttribs4svNV = new Function<void, GLuint, GLsizei, const GLshort *>("glVertexAttribs4svNV");
    glVertexAttribs4ubvNV = new Function<void, GLuint, GLsizei, const GLubyte *>("glVertexAttribs4ubvNV");
    glVertexBindingDivisor = new Function<void, GLuint, GLuint>("glVertexBindingDivisor");
    glVertexBlendARB = new Function<void, GLint>("glVertexBlendARB");
    glVertexBlendEnvfATI = new Function<void, GLenum, GLfloat>("glVertexBlendEnvfATI");
    glVertexBlendEnviATI = new Function<void, GLenum, GLint>("glVertexBlendEnviATI");
    glVertexFormatNV = new Function<void, GLint, GLenum, GLsizei>("glVertexFormatNV");
    glVertexP2ui = new Function<void, GLenum, GLuint>("glVertexP2ui");
    glVertexP2uiv = new Function<void, GLenum, const GLuint *>("glVertexP2uiv");
    glVertexP3ui = new Function<void, GLenum, GLuint>("glVertexP3ui");
    glVertexP3uiv = new Function<void, GLenum, const GLuint *>("glVertexP3uiv");
    glVertexP4ui = new Function<void, GLenum, GLuint>("glVertexP4ui");
    glVertexP4uiv = new Function<void, GLenum, const GLuint *>("glVertexP4uiv");
    glVertexPointer = new Function<void, GLint, GLenum, GLsizei, const void *>("glVertexPointer");
    glVertexPointerEXT = new Function<void, GLint, GLenum, GLsizei, GLsizei, const void *>("glVertexPointerEXT");
    glVertexPointerListIBM = new Function<void, GLint, GLenum, GLint, const void **, GLint>("glVertexPointerListIBM");
    glVertexPointervINTEL = new Function<void, GLint, GLenum, const void **>("glVertexPointervINTEL");
    glVertexStream1dATI = new Function<void, GLenum, GLdouble>("glVertexStream1dATI");
    glVertexStream1dvATI = new Function<void, GLenum, const GLdouble *>("glVertexStream1dvATI");
    glVertexStream1fATI = new Function<void, GLenum, GLfloat>("glVertexStream1fATI");
    glVertexStream1fvATI = new Function<void, GLenum, const GLfloat *>("glVertexStream1fvATI");
    glVertexStream1iATI = new Function<void, GLenum, GLint>("glVertexStream1iATI");
    glVertexStream1ivATI = new Function<void, GLenum, const GLint *>("glVertexStream1ivATI");
    glVertexStream1sATI = new Function<void, GLenum, GLshort>("glVertexStream1sATI");
    glVertexStream1svATI = new Function<void, GLenum, const GLshort *>("glVertexStream1svATI");
    glVertexStream2dATI = new Function<void, GLenum, GLdouble, GLdouble>("glVertexStream2dATI");
    glVertexStream2dvATI = new Function<void, GLenum, const GLdouble *>("glVertexStream2dvATI");
    glVertexStream2fATI = new Function<void, GLenum, GLfloat, GLfloat>("glVertexStream2fATI");
    glVertexStream2fvATI = new Function<void, GLenum, const GLfloat *>("glVertexStream2fvATI");
    glVertexStream2iATI = new Function<void, GLenum, GLint, GLint>("glVertexStream2iATI");
    glVertexStream2ivATI = new Function<void, GLenum, const GLint *>("glVertexStream2ivATI");
    glVertexStream2sATI = new Function<void, GLenum, GLshort, GLshort>("glVertexStream2sATI");
    glVertexStream2svATI = new Function<void, GLenum, const GLshort *>("glVertexStream2svATI");
    glVertexStream3dATI = new Function<void, GLenum, GLdouble, GLdouble, GLdouble>("glVertexStream3dATI");
    glVertexStream3dvATI = new Function<void, GLenum, const GLdouble *>("glVertexStream3dvATI");
    glVertexStream3fATI = new Function<void, GLenum, GLfloat, GLfloat, GLfloat>("glVertexStream3fATI");
    glVertexStream3fvATI = new Function<void, GLenum, const GLfloat *>("glVertexStream3fvATI");
    glVertexStream3iATI = new Function<void, GLenum, GLint, GLint, GLint>("glVertexStream3iATI");
    glVertexStream3ivATI = new Function<void, GLenum, const GLint *>("glVertexStream3ivATI");
    glVertexStream3sATI = new Function<void, GLenum, GLshort, GLshort, GLshort>("glVertexStream3sATI");
    glVertexStream3svATI = new Function<void, GLenum, const GLshort *>("glVertexStream3svATI");
    glVertexStream4dATI = new Function<void, GLenum, GLdouble, GLdouble, GLdouble, GLdouble>("glVertexStream4dATI");
    glVertexStream4dvATI = new Function<void, GLenum, const GLdouble *>("glVertexStream4dvATI");
    glVertexStream4fATI = new Function<void, GLenum, GLfloat, GLfloat, GLfloat, GLfloat>("glVertexStream4fATI");
    glVertexStream4fvATI = new Function<void, GLenum, const GLfloat *>("glVertexStream4fvATI");
    glVertexStream4iATI = new Function<void, GLenum, GLint, GLint, GLint, GLint>("glVertexStream4iATI");
    glVertexStream4ivATI = new Function<void, GLenum, const GLint *>("glVertexStream4ivATI");
    glVertexStream4sATI = new Function<void, GLenum, GLshort, GLshort, GLshort, GLshort>("glVertexStream4sATI");
    glVertexStream4svATI = new Function<void, GLenum, const GLshort *>("glVertexStream4svATI");
    glVertexWeightPointerEXT = new Function<void, GLint, GLenum, GLsizei, const void *>("glVertexWeightPointerEXT");
    glVertexWeightfEXT = new Function<void, GLfloat>("glVertexWeightfEXT");
    glVertexWeightfvEXT = new Function<void, const GLfloat *>("glVertexWeightfvEXT");
    glVertexWeighthNV = new Function<void, GLhalfNV>("glVertexWeighthNV");
    glVertexWeighthvNV = new Function<void, const GLhalfNV *>("glVertexWeighthvNV");
    glVideoCaptureNV = new Function<GLenum, GLuint, GLuint *, GLuint64EXT *>("glVideoCaptureNV");
    glVideoCaptureStreamParameterdvNV = new Function<void, GLuint, GLuint, GLenum, const GLdouble *>("glVideoCaptureStreamParameterdvNV");
    glVideoCaptureStreamParameterfvNV = new Function<void, GLuint, GLuint, GLenum, const GLfloat *>("glVideoCaptureStreamParameterfvNV");
    glVideoCaptureStreamParameterivNV = new Function<void, GLuint, GLuint, GLenum, const GLint *>("glVideoCaptureStreamParameterivNV");
    glViewport = new Function<void, GLint, GLint, GLsizei, GLsizei>("glViewport");
    glViewportArrayv = new Function<void, GLuint, GLsizei, const GLfloat *>("glViewportArrayv");
    glViewportIndexedf = new Function<void, GLuint, GLfloat, GLfloat, GLfloat, GLfloat>("glViewportIndexedf");
    glViewportIndexedfv = new Function<void, GLuint, const GLfloat *>("glViewportIndexedfv");
    glWaitSync = new Function<void, GLsync, UnusedMask, GLuint64>("glWaitSync");
    glWeightPathsNV = new Function<void, GLuint, GLsizei, const GLuint *, const GLfloat *>("glWeightPathsNV");
    glWeightPointerARB = new Function<void, GLint, GLenum, GLsizei, const void *>("glWeightPointerARB");
    glWeightbvARB = new Function<void, GLint, const GLbyte *>("glWeightbvARB");
    glWeightdvARB = new Function<void, GLint, const GLdouble *>("glWeightdvARB");
    glWeightfvARB = new Function<void, GLint, const GLfloat *>("glWeightfvARB");
    glWeightivARB = new Function<void, GLint, const GLint *>("glWeightivARB");
    glWeightsvARB = new Function<void, GLint, const GLshort *>("glWeightsvARB");
    glWeightubvARB = new Function<void, GLint, const GLubyte *>("glWeightubvARB");
    glWeightuivARB = new Function<void, GLint, const GLuint *>("glWeightuivARB");
    glWeightusvARB = new Function<void, GLint, const GLushort *>("glWeightusvARB");
    glWindowPos2d = new Function<void, GLdouble, GLdouble>("glWindowPos2d");
    glWindowPos2dARB = new Function<void, GLdouble, GLdouble>("glWindowPos2dARB");
    glWindowPos2dMESA = new Function<void, GLdouble, GLdouble>("glWindowPos2dMESA");
    glWindowPos2dv = new Function<void, const GLdouble *>("glWindowPos2dv");
    glWindowPos2dvARB = new Function<void, const GLdouble *>("glWindowPos2dvARB");
    glWindowPos2dvMESA = new Function<void, const GLdouble *>("glWindowPos2dvMESA");
    glWindowPos2f = new Function<void, GLfloat, GLfloat>("glWindowPos2f");
    glWindowPos2fARB = new Function<void, GLfloat, GLfloat>("glWindowPos2fARB");
    glWindowPos2fMESA = new Function<void, GLfloat, GLfloat>("glWindowPos2fMESA");
    glWindowPos2fv = new Function<void, const GLfloat *>("glWindowPos2fv");
    glWindowPos2fvARB = new Function<void, const GLfloat *>("glWindowPos2fvARB");
    glWindowPos2fvMESA = new Function<void, const GLfloat *>("glWindowPos2fvMESA");
    glWindowPos2i = new Function<void, GLint, GLint>("glWindowPos2i");
    glWindowPos2iARB = new Function<void, GLint, GLint>("glWindowPos2iARB");
    glWindowPos2iMESA = new Function<void, GLint, GLint>("glWindowPos2iMESA");
    glWindowPos2iv = new Function<void, const GLint *>("glWindowPos2iv");
    glWindowPos2ivARB = new Function<void, const GLint *>("glWindowPos2ivARB");
    glWindowPos2ivMESA = new Function<void, const GLint *>("glWindowPos2ivMESA");
    glWindowPos2s = new Function<void, GLshort, GLshort>("glWindowPos2s");
    glWindowPos2sARB = new Function<void, GLshort, GLshort>("glWindowPos2sARB");
    glWindowPos2sMESA = new Function<void, GLshort, GLshort>("glWindowPos2sMESA");
    glWindowPos2sv = new Function<void, const GLshort *>("glWindowPos2sv");
    glWindowPos2svARB = new Function<void, const GLshort *>("glWindowPos2svARB");
    glWindowPos2svMESA = new Function<void, const GLshort *>("glWindowPos2svMESA");
    glWindowPos3d = new Function<void, GLdouble, GLdouble, GLdouble>("glWindowPos3d");
    glWindowPos3dARB = new Function<void, GLdouble, GLdouble, GLdouble>("glWindowPos3dARB");
    glWindowPos3dMESA = new Function<void, GLdouble, GLdouble, GLdouble>("glWindowPos3dMESA");
    glWindowPos3dv = new Function<void, const GLdouble *>("glWindowPos3dv");
    glWindowPos3dvARB = new Function<void, const GLdouble *>("glWindowPos3dvARB");
    glWindowPos3dvMESA = new Function<void, const GLdouble *>("glWindowPos3dvMESA");
    glWindowPos3f = new Function<void, GLfloat, GLfloat, GLfloat>("glWindowPos3f");
    glWindowPos3fARB = new Function<void, GLfloat, GLfloat, GLfloat>("glWindowPos3fARB");
    glWindowPos3fMESA = new Function<void, GLfloat, GLfloat, GLfloat>("glWindowPos3fMESA");
    glWindowPos3fv = new Function<void, const GLfloat *>("glWindowPos3fv");
    glWindowPos3fvARB = new Function<void, const GLfloat *>("glWindowPos3fvARB");
    glWindowPos3fvMESA = new Function<void, const GLfloat *>("glWindowPos3fvMESA");
    glWindowPos3i = new Function<void, GLint, GLint, GLint>("glWindowPos3i");
    glWindowPos3iARB = new Function<void, GLint, GLint, GLint>("glWindowPos3iARB");
    glWindowPos3iMESA = new Function<void, GLint, GLint, GLint>("glWindowPos3iMESA");
    glWindowPos3iv = new Function<void, const GLint *>("glWindowPos3iv");
    glWindowPos3ivARB = new Function<void, const GLint *>("glWindowPos3ivARB");
    glWindowPos3ivMESA = new Function<void, const GLint *>("glWindowPos3ivMESA");
    glWindowPos3s = new Function<void, GLshort, GLshort, GLshort>("glWindowPos3s");
    glWindowPos3sARB = new Function<void, GLshort, GLshort, GLshort>("glWindowPos3sARB");
    glWindowPos3sMESA = new Function<void, GLshort, GLshort, GLshort>("glWindowPos3sMESA");
    glWindowPos3sv = new Function<void, const GLshort *>("glWindowPos3sv");
    glWindowPos3svARB = new Function<void, const GLshort *>("glWindowPos3svARB");
    glWindowPos3svMESA = new Function<void, const GLshort *>("glWindowPos3svMESA");
    glWindowPos4dMESA = new Function<void, GLdouble, GLdouble, GLdouble, GLdouble>("glWindowPos4dMESA");
    glWindowPos4dvMESA = new Function<void, const GLdouble *>("glWindowPos4dvMESA");
    glWindowPos4fMESA = new Function<void, GLfloat, GLfloat, GLfloat, GLfloat>("glWindowPos4fMESA");
    glWindowPos4fvMESA = new Function<void, const GLfloat *>("glWindowPos4fvMESA");
    glWindowPos4iMESA = new Function<void, GLint, GLint, GLint, GLint>("glWindowPos4iMESA");
    glWindowPos4ivMESA = new Function<void, const GLint *>("glWindowPos4ivMESA");
    glWindowPos4sMESA = new Function<void, GLshort, GLshort, GLshort, GLshort>("glWindowPos4sMESA");
    glWindowPos4svMESA = new Function<void, const GLshort *>("glWindowPos4svMESA");
    glWriteMaskEXT = new Function<void, GLuint, GLuint, GLenum, GLenum, GLenum, GLenum>("glWriteMaskEXT");
}

} // namespace glbinding
