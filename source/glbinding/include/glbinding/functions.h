#pragma once

#include <glbinding/glbinding_api.h>
#include <glbinding/constants.h>
#include <glbinding/types.h>

namespace gl {

GLBINDING_API void Accum(GLenum op, GLfloat value);
GLBINDING_API void AccumxOES(GLenum op, GLfixed value);
GLBINDING_API void ActiveProgramEXT(GLuint program);
GLBINDING_API void ActiveShaderProgram(GLuint pipeline, GLuint program);
GLBINDING_API void ActiveShaderProgramEXT(GLuint pipeline, GLuint program);
GLBINDING_API void ActiveStencilFaceEXT(GLenum face);
GLBINDING_API void ActiveTexture(GLenum texture);
GLBINDING_API void ActiveTextureARB(GLenum texture);
GLBINDING_API void ActiveVaryingNV(GLuint program, const GLchar * name);
GLBINDING_API void AlphaFragmentOp1ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
GLBINDING_API void AlphaFragmentOp2ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
GLBINDING_API void AlphaFragmentOp3ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
GLBINDING_API void AlphaFunc(GLenum func, GLfloat ref);
GLBINDING_API void AlphaFuncQCOM(GLenum func, GLclampf ref);
GLBINDING_API void AlphaFuncx(GLenum func, GLfixed ref);
GLBINDING_API void AlphaFuncxOES(GLenum func, GLfixed ref);
GLBINDING_API void ApplyTextureEXT(GLenum mode);
GLBINDING_API GLboolean AreProgramsResidentNV(GLsizei n, const GLuint * programs, GLboolean * residences);
GLBINDING_API GLboolean AreTexturesResident(GLsizei n, const GLuint * textures, GLboolean * residences);
GLBINDING_API GLboolean AreTexturesResidentEXT(GLsizei n, const GLuint * textures, GLboolean * residences);
GLBINDING_API void ArrayElement(GLint i);
GLBINDING_API void ArrayElementEXT(GLint i);
GLBINDING_API void ArrayObjectATI(GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
GLBINDING_API void AsyncMarkerSGIX(GLuint marker);
GLBINDING_API void AttachObjectARB(GLhandleARB containerObj, GLhandleARB obj);
GLBINDING_API void AttachShader(GLuint program, GLuint shader);
GLBINDING_API void Begin(GLenum mode);
GLBINDING_API void BeginConditionalRender(GLuint id, GLenum mode);
GLBINDING_API void BeginConditionalRenderNV(GLuint id, GLenum mode);
GLBINDING_API void BeginConditionalRenderNVX(GLuint id);
GLBINDING_API void BeginFragmentShaderATI();
GLBINDING_API void BeginOcclusionQueryNV(GLuint id);
GLBINDING_API void BeginPerfMonitorAMD(GLuint monitor);
GLBINDING_API void BeginPerfQueryINTEL(GLuint queryHandle);
GLBINDING_API void BeginQuery(GLenum target, GLuint id);
GLBINDING_API void BeginQueryARB(GLenum target, GLuint id);
GLBINDING_API void BeginQueryEXT(GLenum target, GLuint id);
GLBINDING_API void BeginQueryIndexed(GLenum target, GLuint index, GLuint id);
GLBINDING_API void BeginTransformFeedback(GLenum primitiveMode);
GLBINDING_API void BeginTransformFeedbackEXT(GLenum primitiveMode);
GLBINDING_API void BeginTransformFeedbackNV(GLenum primitiveMode);
GLBINDING_API void BeginVertexShaderEXT();
GLBINDING_API void BeginVideoCaptureNV(GLuint video_capture_slot);
GLBINDING_API void BindAttribLocation(GLuint program, GLuint index, const GLchar * name);
GLBINDING_API void BindAttribLocationARB(GLhandleARB programObj, GLuint index, const GLcharARB * name);
GLBINDING_API void BindBuffer(GLenum target, GLuint buffer);
GLBINDING_API void BindBufferARB(GLenum target, GLuint buffer);
GLBINDING_API void BindBufferBase(GLenum target, GLuint index, GLuint buffer);
GLBINDING_API void BindBufferBaseEXT(GLenum target, GLuint index, GLuint buffer);
GLBINDING_API void BindBufferBaseNV(GLenum target, GLuint index, GLuint buffer);
GLBINDING_API void BindBufferOffsetEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
GLBINDING_API void BindBufferOffsetNV(GLenum target, GLuint index, GLuint buffer, GLintptr offset);
GLBINDING_API void BindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLBINDING_API void BindBufferRangeEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLBINDING_API void BindBufferRangeNV(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLBINDING_API void BindBuffersBase(GLenum target, GLuint first, GLsizei count, const GLuint * buffers);
GLBINDING_API void BindBuffersRange(GLenum target, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizeiptr * sizes);
GLBINDING_API void BindFragDataLocation(GLuint program, GLuint color, const GLchar * name);
GLBINDING_API void BindFragDataLocationEXT(GLuint program, GLuint color, const GLchar * name);
GLBINDING_API void BindFragDataLocationIndexed(GLuint program, GLuint colorNumber, GLuint index, const GLchar * name);
GLBINDING_API void BindFragmentShaderATI(GLuint id);
GLBINDING_API void BindFramebuffer(GLenum target, GLuint framebuffer);
GLBINDING_API void BindFramebufferEXT(GLenum target, GLuint framebuffer);
GLBINDING_API void BindFramebufferOES(GLenum target, GLuint framebuffer);
GLBINDING_API void BindImageTexture(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
GLBINDING_API void BindImageTextureEXT(GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);
GLBINDING_API void BindImageTextures(GLuint first, GLsizei count, const GLuint * textures);
GLBINDING_API GLuint BindLightParameterEXT(GLenum light, GLenum value);
GLBINDING_API GLuint BindMaterialParameterEXT(GLenum face, GLenum value);
GLBINDING_API void BindMultiTextureEXT(GLenum texunit, GLenum target, GLuint texture);
GLBINDING_API GLuint BindParameterEXT(GLenum value);
GLBINDING_API void BindProgramARB(GLenum target, GLuint program);
GLBINDING_API void BindProgramNV(GLenum target, GLuint id);
GLBINDING_API void BindProgramPipeline(GLuint pipeline);
GLBINDING_API void BindProgramPipelineEXT(GLuint pipeline);
GLBINDING_API void BindRenderbuffer(GLenum target, GLuint renderbuffer);
GLBINDING_API void BindRenderbufferEXT(GLenum target, GLuint renderbuffer);
GLBINDING_API void BindRenderbufferOES(GLenum target, GLuint renderbuffer);
GLBINDING_API void BindSampler(GLuint unit, GLuint sampler);
GLBINDING_API void BindSamplers(GLuint first, GLsizei count, const GLuint * samplers);
GLBINDING_API GLuint BindTexGenParameterEXT(GLenum unit, GLenum coord, GLenum value);
GLBINDING_API void BindTexture(GLenum target, GLuint texture);
GLBINDING_API void BindTextureEXT(GLenum target, GLuint texture);
GLBINDING_API GLuint BindTextureUnitParameterEXT(GLenum unit, GLenum value);
GLBINDING_API void BindTextures(GLuint first, GLsizei count, const GLuint * textures);
GLBINDING_API void BindTransformFeedback(GLenum target, GLuint id);
GLBINDING_API void BindTransformFeedbackNV(GLenum target, GLuint id);
GLBINDING_API void BindVertexArray(GLuint array);
GLBINDING_API void BindVertexArrayAPPLE(GLuint array);
GLBINDING_API void BindVertexArrayOES(GLuint array);
GLBINDING_API void BindVertexBuffer(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
GLBINDING_API void BindVertexBuffers(GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);
GLBINDING_API void BindVertexShaderEXT(GLuint id);
GLBINDING_API void BindVideoCaptureStreamBufferNV(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);
GLBINDING_API void BindVideoCaptureStreamTextureNV(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);
GLBINDING_API void Binormal3bEXT(GLbyte bx, GLbyte by, GLbyte bz);
GLBINDING_API void Binormal3bvEXT(const GLbyte * v);
GLBINDING_API void Binormal3dEXT(GLdouble bx, GLdouble by, GLdouble bz);
GLBINDING_API void Binormal3dvEXT(const GLdouble * v);
GLBINDING_API void Binormal3fEXT(GLfloat bx, GLfloat by, GLfloat bz);
GLBINDING_API void Binormal3fvEXT(const GLfloat * v);
GLBINDING_API void Binormal3iEXT(GLint bx, GLint by, GLint bz);
GLBINDING_API void Binormal3ivEXT(const GLint * v);
GLBINDING_API void Binormal3sEXT(GLshort bx, GLshort by, GLshort bz);
GLBINDING_API void Binormal3svEXT(const GLshort * v);
GLBINDING_API void BinormalPointerEXT(GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void Bitmap(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap);
GLBINDING_API void BitmapxOES(GLsizei width, GLsizei height, GLfixed xorig, GLfixed yorig, GLfixed xmove, GLfixed ymove, const GLubyte * bitmap);
GLBINDING_API void BlendBarrierNV();
GLBINDING_API void BlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLBINDING_API void BlendColorEXT(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLBINDING_API void BlendColorxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLBINDING_API void BlendEquation(GLenum mode);
GLBINDING_API void BlendEquationEXT(GLenum mode);
GLBINDING_API void BlendEquationIndexedAMD(GLuint buf, GLenum mode);
GLBINDING_API void BlendEquationOES(GLenum mode);
GLBINDING_API void BlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha);
GLBINDING_API void BlendEquationSeparateEXT(GLenum modeRGB, GLenum modeAlpha);
GLBINDING_API void BlendEquationSeparateIndexedAMD(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLBINDING_API void BlendEquationSeparateOES(GLenum modeRGB, GLenum modeAlpha);
GLBINDING_API void BlendEquationSeparatei(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLBINDING_API void BlendEquationSeparateiARB(GLuint buf, GLenum modeRGB, GLenum modeAlpha);
GLBINDING_API void BlendEquationi(GLuint buf, GLenum mode);
GLBINDING_API void BlendEquationiARB(GLuint buf, GLenum mode);
GLBINDING_API void BlendFunc(GLenum sfactor, GLenum dfactor);
GLBINDING_API void BlendFuncIndexedAMD(GLuint buf, GLenum src, GLenum dst);
GLBINDING_API void BlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
GLBINDING_API void BlendFuncSeparateEXT(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
GLBINDING_API void BlendFuncSeparateINGR(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);
GLBINDING_API void BlendFuncSeparateIndexedAMD(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLBINDING_API void BlendFuncSeparateOES(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLBINDING_API void BlendFuncSeparatei(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLBINDING_API void BlendFuncSeparateiARB(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
GLBINDING_API void BlendFunci(GLuint buf, GLenum src, GLenum dst);
GLBINDING_API void BlendFunciARB(GLuint buf, GLenum src, GLenum dst);
GLBINDING_API void BlendParameteriNV(GLenum pname, GLint value);
GLBINDING_API void BlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLBINDING_API void BlitFramebufferANGLE(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLBINDING_API void BlitFramebufferEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLBINDING_API void BlitFramebufferNV(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
GLBINDING_API void BufferAddressRangeNV(GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);
GLBINDING_API void BufferData(GLenum target, GLsizeiptr size, const void * data, GLenum usage);
GLBINDING_API void BufferDataARB(GLenum target, GLsizeiptrARB size, const void * data, GLenum usage);
GLBINDING_API void BufferParameteriAPPLE(GLenum target, GLenum pname, GLint param);
GLBINDING_API void BufferStorage(GLenum target, GLsizeiptr size, const void * data, GLbitfield flags);
GLBINDING_API void BufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const void * data);
GLBINDING_API void BufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const void * data);
GLBINDING_API void CallList(GLuint list);
GLBINDING_API void CallLists(GLsizei n, GLenum type, const void * lists);
GLBINDING_API GLenum CheckFramebufferStatus(GLenum target);
GLBINDING_API GLenum CheckFramebufferStatusEXT(GLenum target);
GLBINDING_API GLenum CheckFramebufferStatusOES(GLenum target);
GLBINDING_API GLenum CheckNamedFramebufferStatusEXT(GLuint framebuffer, GLenum target);
GLBINDING_API void ClampColor(GLenum target, GLenum clamp);
GLBINDING_API void ClampColorARB(GLenum target, GLenum clamp);
GLBINDING_API void Clear(GLbitfield mask);
GLBINDING_API void ClearAccum(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLBINDING_API void ClearAccumxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLBINDING_API void ClearBufferData(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void * data);
GLBINDING_API void ClearBufferSubData(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
GLBINDING_API void ClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
GLBINDING_API void ClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat * value);
GLBINDING_API void ClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint * value);
GLBINDING_API void ClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint * value);
GLBINDING_API void ClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLBINDING_API void ClearColorIiEXT(GLint red, GLint green, GLint blue, GLint alpha);
GLBINDING_API void ClearColorIuiEXT(GLuint red, GLuint green, GLuint blue, GLuint alpha);
GLBINDING_API void ClearColorx(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLBINDING_API void ClearColorxOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLBINDING_API void ClearDepth(GLdouble depth);
GLBINDING_API void ClearDepthdNV(GLdouble depth);
GLBINDING_API void ClearDepthf(GLfloat d);
GLBINDING_API void ClearDepthfOES(GLclampf depth);
GLBINDING_API void ClearDepthx(GLfixed depth);
GLBINDING_API void ClearDepthxOES(GLfixed depth);
GLBINDING_API void ClearIndex(GLfloat c);
GLBINDING_API void ClearNamedBufferDataEXT(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
GLBINDING_API void ClearNamedBufferSubDataEXT(GLuint buffer, GLenum internalformat, GLsizeiptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
GLBINDING_API void ClearStencil(GLint s);
GLBINDING_API void ClearTexImage(GLuint texture, GLint level, GLenum format, GLenum type, const void * data);
GLBINDING_API void ClearTexSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * data);
GLBINDING_API void ClientActiveTexture(GLenum texture);
GLBINDING_API void ClientActiveTextureARB(GLenum texture);
GLBINDING_API void ClientActiveVertexStreamATI(GLenum stream);
GLBINDING_API void ClientAttribDefaultEXT(GLbitfield mask);
GLBINDING_API GLenum ClientWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout);
GLBINDING_API GLenum ClientWaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout);
GLBINDING_API void ClipPlane(GLenum plane, const GLdouble * equation);
GLBINDING_API void ClipPlanef(GLenum p, const GLfloat * eqn);
GLBINDING_API void ClipPlanefIMG(GLenum p, const GLfloat * eqn);
GLBINDING_API void ClipPlanefOES(GLenum plane, const GLfloat * equation);
GLBINDING_API void ClipPlanex(GLenum plane, const GLfixed * equation);
GLBINDING_API void ClipPlanexIMG(GLenum p, const GLfixed * eqn);
GLBINDING_API void ClipPlanexOES(GLenum plane, const GLfixed * equation);
GLBINDING_API void Color3b(GLbyte red, GLbyte green, GLbyte blue);
GLBINDING_API void Color3bv(const GLbyte * v);
GLBINDING_API void Color3d(GLdouble red, GLdouble green, GLdouble blue);
GLBINDING_API void Color3dv(const GLdouble * v);
GLBINDING_API void Color3f(GLfloat red, GLfloat green, GLfloat blue);
GLBINDING_API void Color3fVertex3fSUN(GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void Color3fVertex3fvSUN(const GLfloat * c, const GLfloat * v);
GLBINDING_API void Color3fv(const GLfloat * v);
GLBINDING_API void Color3hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
GLBINDING_API void Color3hvNV(const GLhalfNV * v);
GLBINDING_API void Color3i(GLint red, GLint green, GLint blue);
GLBINDING_API void Color3iv(const GLint * v);
GLBINDING_API void Color3s(GLshort red, GLshort green, GLshort blue);
GLBINDING_API void Color3sv(const GLshort * v);
GLBINDING_API void Color3ub(GLubyte red, GLubyte green, GLubyte blue);
GLBINDING_API void Color3ubv(const GLubyte * v);
GLBINDING_API void Color3ui(GLuint red, GLuint green, GLuint blue);
GLBINDING_API void Color3uiv(const GLuint * v);
GLBINDING_API void Color3us(GLushort red, GLushort green, GLushort blue);
GLBINDING_API void Color3usv(const GLushort * v);
GLBINDING_API void Color3xOES(GLfixed red, GLfixed green, GLfixed blue);
GLBINDING_API void Color3xvOES(const GLfixed * components);
GLBINDING_API void Color4b(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha);
GLBINDING_API void Color4bv(const GLbyte * v);
GLBINDING_API void Color4d(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha);
GLBINDING_API void Color4dv(const GLdouble * v);
GLBINDING_API void Color4f(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
GLBINDING_API void Color4fNormal3fVertex3fSUN(GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void Color4fNormal3fVertex3fvSUN(const GLfloat * c, const GLfloat * n, const GLfloat * v);
GLBINDING_API void Color4fv(const GLfloat * v);
GLBINDING_API void Color4hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);
GLBINDING_API void Color4hvNV(const GLhalfNV * v);
GLBINDING_API void Color4i(GLint red, GLint green, GLint blue, GLint alpha);
GLBINDING_API void Color4iv(const GLint * v);
GLBINDING_API void Color4s(GLshort red, GLshort green, GLshort blue, GLshort alpha);
GLBINDING_API void Color4sv(const GLshort * v);
GLBINDING_API void Color4ub(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
GLBINDING_API void Color4ubVertex2fSUN(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);
GLBINDING_API void Color4ubVertex2fvSUN(const GLubyte * c, const GLfloat * v);
GLBINDING_API void Color4ubVertex3fSUN(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void Color4ubVertex3fvSUN(const GLubyte * c, const GLfloat * v);
GLBINDING_API void Color4ubv(const GLubyte * v);
GLBINDING_API void Color4ui(GLuint red, GLuint green, GLuint blue, GLuint alpha);
GLBINDING_API void Color4uiv(const GLuint * v);
GLBINDING_API void Color4us(GLushort red, GLushort green, GLushort blue, GLushort alpha);
GLBINDING_API void Color4usv(const GLushort * v);
GLBINDING_API void Color4x(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLBINDING_API void Color4xOES(GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
GLBINDING_API void Color4xvOES(const GLfixed * components);
GLBINDING_API void ColorFormatNV(GLint size, GLenum type, GLsizei stride);
GLBINDING_API void ColorFragmentOp1ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);
GLBINDING_API void ColorFragmentOp2ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);
GLBINDING_API void ColorFragmentOp3ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);
GLBINDING_API void ColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
GLBINDING_API void ColorMaskIndexedEXT(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLBINDING_API void ColorMaski(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);
GLBINDING_API void ColorMaterial(GLenum face, GLenum mode);
GLBINDING_API void ColorP3ui(GLenum type, GLuint color);
GLBINDING_API void ColorP3uiv(GLenum type, const GLuint * color);
GLBINDING_API void ColorP4ui(GLenum type, GLuint color);
GLBINDING_API void ColorP4uiv(GLenum type, const GLuint * color);
GLBINDING_API void ColorPointer(GLint size, GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void ColorPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
GLBINDING_API void ColorPointerListIBM(GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
GLBINDING_API void ColorPointervINTEL(GLint size, GLenum type, const void ** pointer);
GLBINDING_API void ColorSubTable(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void * data);
GLBINDING_API void ColorSubTableEXT(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const void * data);
GLBINDING_API void ColorTable(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * table);
GLBINDING_API void ColorTableEXT(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const void * table);
GLBINDING_API void ColorTableParameterfv(GLenum target, GLenum pname, const GLfloat * params);
GLBINDING_API void ColorTableParameterfvSGI(GLenum target, GLenum pname, const GLfloat * params);
GLBINDING_API void ColorTableParameteriv(GLenum target, GLenum pname, const GLint * params);
GLBINDING_API void ColorTableParameterivSGI(GLenum target, GLenum pname, const GLint * params);
GLBINDING_API void ColorTableSGI(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * table);
GLBINDING_API void CombinerInputNV(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
GLBINDING_API void CombinerOutputNV(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);
GLBINDING_API void CombinerParameterfNV(GLenum pname, GLfloat param);
GLBINDING_API void CombinerParameterfvNV(GLenum pname, const GLfloat * params);
GLBINDING_API void CombinerParameteriNV(GLenum pname, GLint param);
GLBINDING_API void CombinerParameterivNV(GLenum pname, const GLint * params);
GLBINDING_API void CombinerStageParameterfvNV(GLenum stage, GLenum pname, const GLfloat * params);
GLBINDING_API void CompileShader(GLuint shader);
GLBINDING_API void CompileShaderARB(GLhandleARB shaderObj);
GLBINDING_API void CompileShaderIncludeARB(GLuint shader, GLsizei count, const GLchar *const* path, const GLint * length);
GLBINDING_API void CompressedMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits);
GLBINDING_API void CompressedMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits);
GLBINDING_API void CompressedMultiTexImage3DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits);
GLBINDING_API void CompressedMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits);
GLBINDING_API void CompressedMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits);
GLBINDING_API void CompressedMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits);
GLBINDING_API void CompressedTexImage1D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
GLBINDING_API void CompressedTexImage1DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data);
GLBINDING_API void CompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
GLBINDING_API void CompressedTexImage2DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data);
GLBINDING_API void CompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
GLBINDING_API void CompressedTexImage3DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
GLBINDING_API void CompressedTexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data);
GLBINDING_API void CompressedTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
GLBINDING_API void CompressedTexSubImage1DARB(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
GLBINDING_API void CompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
GLBINDING_API void CompressedTexSubImage2DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
GLBINDING_API void CompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
GLBINDING_API void CompressedTexSubImage3DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
GLBINDING_API void CompressedTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
GLBINDING_API void CompressedTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * bits);
GLBINDING_API void CompressedTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * bits);
GLBINDING_API void CompressedTextureImage3DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * bits);
GLBINDING_API void CompressedTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * bits);
GLBINDING_API void CompressedTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * bits);
GLBINDING_API void CompressedTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * bits);
GLBINDING_API void ConvolutionFilter1D(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * image);
GLBINDING_API void ConvolutionFilter1DEXT(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const void * image);
GLBINDING_API void ConvolutionFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * image);
GLBINDING_API void ConvolutionFilter2DEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * image);
GLBINDING_API void ConvolutionParameterf(GLenum target, GLenum pname, GLfloat params);
GLBINDING_API void ConvolutionParameterfEXT(GLenum target, GLenum pname, GLfloat params);
GLBINDING_API void ConvolutionParameterfv(GLenum target, GLenum pname, const GLfloat * params);
GLBINDING_API void ConvolutionParameterfvEXT(GLenum target, GLenum pname, const GLfloat * params);
GLBINDING_API void ConvolutionParameteri(GLenum target, GLenum pname, GLint params);
GLBINDING_API void ConvolutionParameteriEXT(GLenum target, GLenum pname, GLint params);
GLBINDING_API void ConvolutionParameteriv(GLenum target, GLenum pname, const GLint * params);
GLBINDING_API void ConvolutionParameterivEXT(GLenum target, GLenum pname, const GLint * params);
GLBINDING_API void ConvolutionParameterxOES(GLenum target, GLenum pname, GLfixed param);
GLBINDING_API void ConvolutionParameterxvOES(GLenum target, GLenum pname, const GLfixed * params);
GLBINDING_API void CopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLBINDING_API void CopyBufferSubDataNV(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLBINDING_API void CopyColorSubTable(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
GLBINDING_API void CopyColorSubTableEXT(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);
GLBINDING_API void CopyColorTable(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
GLBINDING_API void CopyColorTableSGI(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
GLBINDING_API void CopyConvolutionFilter1D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
GLBINDING_API void CopyConvolutionFilter1DEXT(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);
GLBINDING_API void CopyConvolutionFilter2D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
GLBINDING_API void CopyConvolutionFilter2DEXT(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);
GLBINDING_API void CopyImageSubData(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);
GLBINDING_API void CopyImageSubDataNV(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
GLBINDING_API void CopyMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLBINDING_API void CopyMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLBINDING_API void CopyMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLBINDING_API void CopyMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLBINDING_API void CopyMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLBINDING_API void CopyPathNV(GLuint resultPath, GLuint srcPath);
GLBINDING_API void CopyPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type);
GLBINDING_API void CopyTexImage1D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLBINDING_API void CopyTexImage1DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLBINDING_API void CopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLBINDING_API void CopyTexImage2DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLBINDING_API void CopyTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLBINDING_API void CopyTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLBINDING_API void CopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLBINDING_API void CopyTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLBINDING_API void CopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLBINDING_API void CopyTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLBINDING_API void CopyTexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLBINDING_API void CopyTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);
GLBINDING_API void CopyTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
GLBINDING_API void CopyTextureLevelsAPPLE(GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount);
GLBINDING_API void CopyTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
GLBINDING_API void CopyTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLBINDING_API void CopyTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
GLBINDING_API void CoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLBINDING_API void CoverFillPathNV(GLuint path, GLenum coverMode);
GLBINDING_API void CoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat * transformValues);
GLBINDING_API void CoverStrokePathNV(GLuint path, GLenum coverMode);
GLBINDING_API void CoverageMaskNV(GLboolean mask);
GLBINDING_API void CoverageOperationNV(GLenum operation);
GLBINDING_API void CreatePerfQueryINTEL(GLuint queryId, GLuint * queryHandle);
GLBINDING_API GLuint CreateProgram();
GLBINDING_API GLhandleARB CreateProgramObjectARB();
GLBINDING_API GLuint CreateShader(GLenum type);
GLBINDING_API GLhandleARB CreateShaderObjectARB(GLenum shaderType);
GLBINDING_API GLuint CreateShaderProgramEXT(GLenum type, const GLchar * string);
GLBINDING_API GLuint CreateShaderProgramv(GLenum type, GLsizei count, const GLchar *const* strings);
GLBINDING_API GLuint CreateShaderProgramvEXT(GLenum type, GLsizei count, const GLchar ** strings);
GLBINDING_API GLsync CreateSyncFromCLeventARB(struct _cl_context * context, struct _cl_event * event, GLbitfield flags);
GLBINDING_API void CullFace(GLenum mode);
GLBINDING_API void CullParameterdvEXT(GLenum pname, GLdouble * params);
GLBINDING_API void CullParameterfvEXT(GLenum pname, GLfloat * params);
GLBINDING_API void CurrentPaletteMatrixARB(GLint index);
GLBINDING_API void CurrentPaletteMatrixOES(GLuint matrixpaletteindex);
GLBINDING_API void DebugMessageCallback(GLDEBUGPROC callback, const void * userParam);
GLBINDING_API void DebugMessageCallbackAMD(GLDEBUGPROCAMD callback, void * userParam);
GLBINDING_API void DebugMessageCallbackARB(GLDEBUGPROCARB callback, const void * userParam);
GLBINDING_API void DebugMessageCallbackKHR(GLDEBUGPROCKHR callback, const void * userParam);
GLBINDING_API void DebugMessageControl(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
GLBINDING_API void DebugMessageControlARB(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
GLBINDING_API void DebugMessageControlKHR(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
GLBINDING_API void DebugMessageEnableAMD(GLenum category, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled);
GLBINDING_API void DebugMessageInsert(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
GLBINDING_API void DebugMessageInsertAMD(GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar * buf);
GLBINDING_API void DebugMessageInsertARB(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
GLBINDING_API void DebugMessageInsertKHR(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf);
GLBINDING_API void DeformSGIX(GLbitfield mask);
GLBINDING_API void DeformationMap3dSGIX(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble * points);
GLBINDING_API void DeformationMap3fSGIX(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat * points);
GLBINDING_API void DeleteAsyncMarkersSGIX(GLuint marker, GLsizei range);
GLBINDING_API void DeleteBuffers(GLsizei n, const GLuint * buffers);
GLBINDING_API void DeleteBuffersARB(GLsizei n, const GLuint * buffers);
GLBINDING_API void DeleteFencesAPPLE(GLsizei n, const GLuint * fences);
GLBINDING_API void DeleteFencesNV(GLsizei n, const GLuint * fences);
GLBINDING_API void DeleteFragmentShaderATI(GLuint id);
GLBINDING_API void DeleteFramebuffers(GLsizei n, const GLuint * framebuffers);
GLBINDING_API void DeleteFramebuffersEXT(GLsizei n, const GLuint * framebuffers);
GLBINDING_API void DeleteFramebuffersOES(GLsizei n, const GLuint * framebuffers);
GLBINDING_API void DeleteLists(GLuint list, GLsizei range);
GLBINDING_API void DeleteNamedStringARB(GLint namelen, const GLchar * name);
GLBINDING_API void DeleteNamesAMD(GLenum identifier, GLuint num, const GLuint * names);
GLBINDING_API void DeleteObjectARB(GLhandleARB obj);
GLBINDING_API void DeleteOcclusionQueriesNV(GLsizei n, const GLuint * ids);
GLBINDING_API void DeletePathsNV(GLuint path, GLsizei range);
GLBINDING_API void DeletePerfMonitorsAMD(GLsizei n, GLuint * monitors);
GLBINDING_API void DeletePerfQueryINTEL(GLuint queryHandle);
GLBINDING_API void DeleteProgram(GLuint program);
GLBINDING_API void DeleteProgramPipelines(GLsizei n, const GLuint * pipelines);
GLBINDING_API void DeleteProgramPipelinesEXT(GLsizei n, const GLuint * pipelines);
GLBINDING_API void DeleteProgramsARB(GLsizei n, const GLuint * programs);
GLBINDING_API void DeleteProgramsNV(GLsizei n, const GLuint * programs);
GLBINDING_API void DeleteQueries(GLsizei n, const GLuint * ids);
GLBINDING_API void DeleteQueriesARB(GLsizei n, const GLuint * ids);
GLBINDING_API void DeleteQueriesEXT(GLsizei n, const GLuint * ids);
GLBINDING_API void DeleteRenderbuffers(GLsizei n, const GLuint * renderbuffers);
GLBINDING_API void DeleteRenderbuffersEXT(GLsizei n, const GLuint * renderbuffers);
GLBINDING_API void DeleteRenderbuffersOES(GLsizei n, const GLuint * renderbuffers);
GLBINDING_API void DeleteSamplers(GLsizei count, const GLuint * samplers);
GLBINDING_API void DeleteShader(GLuint shader);
GLBINDING_API void DeleteSync(GLsync sync);
GLBINDING_API void DeleteSyncAPPLE(GLsync sync);
GLBINDING_API void DeleteTextures(GLsizei n, const GLuint * textures);
GLBINDING_API void DeleteTexturesEXT(GLsizei n, const GLuint * textures);
GLBINDING_API void DeleteTransformFeedbacks(GLsizei n, const GLuint * ids);
GLBINDING_API void DeleteTransformFeedbacksNV(GLsizei n, const GLuint * ids);
GLBINDING_API void DeleteVertexArrays(GLsizei n, const GLuint * arrays);
GLBINDING_API void DeleteVertexArraysAPPLE(GLsizei n, const GLuint * arrays);
GLBINDING_API void DeleteVertexArraysOES(GLsizei n, const GLuint * arrays);
GLBINDING_API void DeleteVertexShaderEXT(GLuint id);
GLBINDING_API void DepthBoundsEXT(GLclampd zmin, GLclampd zmax);
GLBINDING_API void DepthBoundsdNV(GLdouble zmin, GLdouble zmax);
GLBINDING_API void DepthFunc(GLenum func);
GLBINDING_API void DepthMask(GLboolean flag);
GLBINDING_API void DepthRange(GLdouble near, GLdouble far);
GLBINDING_API void DepthRangeArrayv(GLuint first, GLsizei count, const GLdouble * v);
GLBINDING_API void DepthRangeIndexed(GLuint index, GLdouble n, GLdouble f);
GLBINDING_API void DepthRangedNV(GLdouble zNear, GLdouble zFar);
GLBINDING_API void DepthRangef(GLfloat n, GLfloat f);
GLBINDING_API void DepthRangefOES(GLclampf n, GLclampf f);
GLBINDING_API void DepthRangex(GLfixed n, GLfixed f);
GLBINDING_API void DepthRangexOES(GLfixed n, GLfixed f);
GLBINDING_API void DetachObjectARB(GLhandleARB containerObj, GLhandleARB attachedObj);
GLBINDING_API void DetachShader(GLuint program, GLuint shader);
GLBINDING_API void DetailTexFuncSGIS(GLenum target, GLsizei n, const GLfloat * points);
GLBINDING_API void Disable(GLenum cap);
GLBINDING_API void DisableClientState(GLenum array);
GLBINDING_API void DisableClientStateIndexedEXT(GLenum array, GLuint index);
GLBINDING_API void DisableClientStateiEXT(GLenum array, GLuint index);
GLBINDING_API void DisableDriverControlQCOM(GLuint driverControl);
GLBINDING_API void DisableIndexedEXT(GLenum target, GLuint index);
GLBINDING_API void DisableVariantClientStateEXT(GLuint id);
GLBINDING_API void DisableVertexArrayAttribEXT(GLuint vaobj, GLuint index);
GLBINDING_API void DisableVertexArrayEXT(GLuint vaobj, GLenum array);
GLBINDING_API void DisableVertexAttribAPPLE(GLuint index, GLenum pname);
GLBINDING_API void DisableVertexAttribArray(GLuint index);
GLBINDING_API void DisableVertexAttribArrayARB(GLuint index);
GLBINDING_API void Disablei(GLenum target, GLuint index);
GLBINDING_API void DiscardFramebufferEXT(GLenum target, GLsizei numAttachments, const GLenum * attachments);
GLBINDING_API void DispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
GLBINDING_API void DispatchComputeGroupSizeARB(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLuint group_size_x, GLuint group_size_y, GLuint group_size_z);
GLBINDING_API void DispatchComputeIndirect(GLintptr indirect);
GLBINDING_API void DrawArrays(GLenum mode, GLint first, GLsizei count);
GLBINDING_API void DrawArraysEXT(GLenum mode, GLint first, GLsizei count);
GLBINDING_API void DrawArraysIndirect(GLenum mode, const void * indirect);
GLBINDING_API void DrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instancecount);
GLBINDING_API void DrawArraysInstancedANGLE(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
GLBINDING_API void DrawArraysInstancedARB(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
GLBINDING_API void DrawArraysInstancedBaseInstance(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);
GLBINDING_API void DrawArraysInstancedEXT(GLenum mode, GLint start, GLsizei count, GLsizei primcount);
GLBINDING_API void DrawArraysInstancedNV(GLenum mode, GLint first, GLsizei count, GLsizei primcount);
GLBINDING_API void DrawBuffer(GLenum mode);
GLBINDING_API void DrawBuffers(GLsizei n, const GLenum * bufs);
GLBINDING_API void DrawBuffersARB(GLsizei n, const GLenum * bufs);
GLBINDING_API void DrawBuffersATI(GLsizei n, const GLenum * bufs);
GLBINDING_API void DrawBuffersEXT(GLsizei n, const GLenum * bufs);
GLBINDING_API void DrawBuffersIndexedEXT(GLint n, const GLenum * location, const GLint * indices);
GLBINDING_API void DrawBuffersNV(GLsizei n, const GLenum * bufs);
GLBINDING_API void DrawElementArrayAPPLE(GLenum mode, GLint first, GLsizei count);
GLBINDING_API void DrawElementArrayATI(GLenum mode, GLsizei count);
GLBINDING_API void DrawElements(GLenum mode, GLsizei count, GLenum type, const void * indices);
GLBINDING_API void DrawElementsBaseVertex(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLBINDING_API void DrawElementsIndirect(GLenum mode, GLenum type, const void * indirect);
GLBINDING_API void DrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount);
GLBINDING_API void DrawElementsInstancedANGLE(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
GLBINDING_API void DrawElementsInstancedARB(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
GLBINDING_API void DrawElementsInstancedBaseInstance(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance);
GLBINDING_API void DrawElementsInstancedBaseVertex(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex);
GLBINDING_API void DrawElementsInstancedBaseVertexBaseInstance(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);
GLBINDING_API void DrawElementsInstancedEXT(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
GLBINDING_API void DrawElementsInstancedNV(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei primcount);
GLBINDING_API void DrawMeshArraysSUN(GLenum mode, GLint first, GLsizei count, GLsizei width);
GLBINDING_API void DrawPixels(GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void DrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);
GLBINDING_API void DrawRangeElementArrayATI(GLenum mode, GLuint start, GLuint end, GLsizei count);
GLBINDING_API void DrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
GLBINDING_API void DrawRangeElementsBaseVertex(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex);
GLBINDING_API void DrawRangeElementsEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices);
GLBINDING_API void DrawTexfOES(GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height);
GLBINDING_API void DrawTexfvOES(const GLfloat * coords);
GLBINDING_API void DrawTexiOES(GLint x, GLint y, GLint z, GLint width, GLint height);
GLBINDING_API void DrawTexivOES(const GLint * coords);
GLBINDING_API void DrawTexsOES(GLshort x, GLshort y, GLshort z, GLshort width, GLshort height);
GLBINDING_API void DrawTexsvOES(const GLshort * coords);
GLBINDING_API void DrawTextureNV(GLuint texture, GLuint sampler, GLfloat x0, GLfloat y0, GLfloat x1, GLfloat y1, GLfloat z, GLfloat s0, GLfloat t0, GLfloat s1, GLfloat t1);
GLBINDING_API void DrawTexxOES(GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height);
GLBINDING_API void DrawTexxvOES(const GLfixed * coords);
GLBINDING_API void DrawTransformFeedback(GLenum mode, GLuint id);
GLBINDING_API void DrawTransformFeedbackInstanced(GLenum mode, GLuint id, GLsizei instancecount);
GLBINDING_API void DrawTransformFeedbackNV(GLenum mode, GLuint id);
GLBINDING_API void DrawTransformFeedbackStream(GLenum mode, GLuint id, GLuint stream);
GLBINDING_API void DrawTransformFeedbackStreamInstanced(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);
GLBINDING_API void EGLImageTargetRenderbufferStorageOES(GLenum target, GLeglImageOES image);
GLBINDING_API void EGLImageTargetTexture2DOES(GLenum target, GLeglImageOES image);
GLBINDING_API void EdgeFlag(GLboolean flag);
GLBINDING_API void EdgeFlagFormatNV(GLsizei stride);
GLBINDING_API void EdgeFlagPointer(GLsizei stride, const void * pointer);
GLBINDING_API void EdgeFlagPointerEXT(GLsizei stride, GLsizei count, const GLboolean * pointer);
GLBINDING_API void EdgeFlagPointerListIBM(GLint stride, const GLboolean ** pointer, GLint ptrstride);
GLBINDING_API void EdgeFlagv(const GLboolean * flag);
GLBINDING_API void ElementPointerAPPLE(GLenum type, const void * pointer);
GLBINDING_API void ElementPointerATI(GLenum type, const void * pointer);
GLBINDING_API void Enable(GLenum cap);
GLBINDING_API void EnableClientState(GLenum array);
GLBINDING_API void EnableClientStateIndexedEXT(GLenum array, GLuint index);
GLBINDING_API void EnableClientStateiEXT(GLenum array, GLuint index);
GLBINDING_API void EnableDriverControlQCOM(GLuint driverControl);
GLBINDING_API void EnableIndexedEXT(GLenum target, GLuint index);
GLBINDING_API void EnableVariantClientStateEXT(GLuint id);
GLBINDING_API void EnableVertexArrayAttribEXT(GLuint vaobj, GLuint index);
GLBINDING_API void EnableVertexArrayEXT(GLuint vaobj, GLenum array);
GLBINDING_API void EnableVertexAttribAPPLE(GLuint index, GLenum pname);
GLBINDING_API void EnableVertexAttribArray(GLuint index);
GLBINDING_API void EnableVertexAttribArrayARB(GLuint index);
GLBINDING_API void Enablei(GLenum target, GLuint index);
GLBINDING_API void End();
GLBINDING_API void EndConditionalRender();
GLBINDING_API void EndConditionalRenderNV();
GLBINDING_API void EndConditionalRenderNVX();
GLBINDING_API void EndFragmentShaderATI();
GLBINDING_API void EndList();
GLBINDING_API void EndOcclusionQueryNV();
GLBINDING_API void EndPerfMonitorAMD(GLuint monitor);
GLBINDING_API void EndPerfQueryINTEL(GLuint queryHandle);
GLBINDING_API void EndQuery(GLenum target);
GLBINDING_API void EndQueryARB(GLenum target);
GLBINDING_API void EndQueryEXT(GLenum target);
GLBINDING_API void EndQueryIndexed(GLenum target, GLuint index);
GLBINDING_API void EndTilingQCOM(GLbitfield preserveMask);
GLBINDING_API void EndTransformFeedback();
GLBINDING_API void EndTransformFeedbackEXT();
GLBINDING_API void EndTransformFeedbackNV();
GLBINDING_API void EndVertexShaderEXT();
GLBINDING_API void EndVideoCaptureNV(GLuint video_capture_slot);
GLBINDING_API void EvalCoord1d(GLdouble u);
GLBINDING_API void EvalCoord1dv(const GLdouble * u);
GLBINDING_API void EvalCoord1f(GLfloat u);
GLBINDING_API void EvalCoord1fv(const GLfloat * u);
GLBINDING_API void EvalCoord1xOES(GLfixed u);
GLBINDING_API void EvalCoord1xvOES(const GLfixed * coords);
GLBINDING_API void EvalCoord2d(GLdouble u, GLdouble v);
GLBINDING_API void EvalCoord2dv(const GLdouble * u);
GLBINDING_API void EvalCoord2f(GLfloat u, GLfloat v);
GLBINDING_API void EvalCoord2fv(const GLfloat * u);
GLBINDING_API void EvalCoord2xOES(GLfixed u, GLfixed v);
GLBINDING_API void EvalCoord2xvOES(const GLfixed * coords);
GLBINDING_API void EvalMapsNV(GLenum target, GLenum mode);
GLBINDING_API void EvalMesh1(GLenum mode, GLint i1, GLint i2);
GLBINDING_API void EvalMesh2(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2);
GLBINDING_API void EvalPoint1(GLint i);
GLBINDING_API void EvalPoint2(GLint i, GLint j);
GLBINDING_API void ExecuteProgramNV(GLenum target, GLuint id, const GLfloat * params);
GLBINDING_API void ExtGetBufferPointervQCOM(GLenum target, void ** params);
GLBINDING_API void ExtGetBuffersQCOM(GLuint * buffers, GLint maxBuffers, GLint * numBuffers);
GLBINDING_API void ExtGetFramebuffersQCOM(GLuint * framebuffers, GLint maxFramebuffers, GLint * numFramebuffers);
GLBINDING_API void ExtGetProgramBinarySourceQCOM(GLuint program, GLenum shadertype, GLchar * source, GLint * length);
GLBINDING_API void ExtGetProgramsQCOM(GLuint * programs, GLint maxPrograms, GLint * numPrograms);
GLBINDING_API void ExtGetRenderbuffersQCOM(GLuint * renderbuffers, GLint maxRenderbuffers, GLint * numRenderbuffers);
GLBINDING_API void ExtGetShadersQCOM(GLuint * shaders, GLint maxShaders, GLint * numShaders);
GLBINDING_API void ExtGetTexLevelParameterivQCOM(GLuint texture, GLenum face, GLint level, GLenum pname, GLint * params);
GLBINDING_API void ExtGetTexSubImageQCOM(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, void * texels);
GLBINDING_API void ExtGetTexturesQCOM(GLuint * textures, GLint maxTextures, GLint * numTextures);
GLBINDING_API GLboolean ExtIsProgramBinaryQCOM(GLuint program);
GLBINDING_API void ExtTexObjectStateOverrideiQCOM(GLenum target, GLenum pname, GLint param);
GLBINDING_API void ExtractComponentEXT(GLuint res, GLuint src, GLuint num);
GLBINDING_API void FeedbackBuffer(GLsizei size, GLenum type, GLfloat * buffer);
GLBINDING_API void FeedbackBufferxOES(GLsizei n, GLenum type, const GLfixed * buffer);
GLBINDING_API GLsync FenceSync(GLenum condition, GLbitfield flags);
GLBINDING_API GLsync FenceSyncAPPLE(GLenum condition, GLbitfield flags);
GLBINDING_API void FinalCombinerInputNV(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);
GLBINDING_API void Finish();
GLBINDING_API GLint FinishAsyncSGIX(GLuint * markerp);
GLBINDING_API void FinishFenceAPPLE(GLuint fence);
GLBINDING_API void FinishFenceNV(GLuint fence);
GLBINDING_API void FinishObjectAPPLE(GLenum object, GLint name);
GLBINDING_API void FinishTextureSUNX();
GLBINDING_API void Flush();
GLBINDING_API void FlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length);
GLBINDING_API void FlushMappedBufferRangeAPPLE(GLenum target, GLintptr offset, GLsizeiptr size);
GLBINDING_API void FlushMappedBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length);
GLBINDING_API void FlushMappedNamedBufferRangeEXT(GLuint buffer, GLintptr offset, GLsizeiptr length);
GLBINDING_API void FlushPixelDataRangeNV(GLenum target);
GLBINDING_API void FlushRasterSGIX();
GLBINDING_API void FlushStaticDataIBM(GLenum target);
GLBINDING_API void FlushVertexArrayRangeAPPLE(GLsizei length, void * pointer);
GLBINDING_API void FlushVertexArrayRangeNV();
GLBINDING_API void FogCoordFormatNV(GLenum type, GLsizei stride);
GLBINDING_API void FogCoordPointer(GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void FogCoordPointerEXT(GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void FogCoordPointerListIBM(GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
GLBINDING_API void FogCoordd(GLdouble coord);
GLBINDING_API void FogCoorddEXT(GLdouble coord);
GLBINDING_API void FogCoorddv(const GLdouble * coord);
GLBINDING_API void FogCoorddvEXT(const GLdouble * coord);
GLBINDING_API void FogCoordf(GLfloat coord);
GLBINDING_API void FogCoordfEXT(GLfloat coord);
GLBINDING_API void FogCoordfv(const GLfloat * coord);
GLBINDING_API void FogCoordfvEXT(const GLfloat * coord);
GLBINDING_API void FogCoordhNV(GLhalfNV fog);
GLBINDING_API void FogCoordhvNV(const GLhalfNV * fog);
GLBINDING_API void FogFuncSGIS(GLsizei n, const GLfloat * points);
GLBINDING_API void Fogf(GLenum pname, GLfloat param);
GLBINDING_API void Fogfv(GLenum pname, const GLfloat * params);
GLBINDING_API void Fogi(GLenum pname, GLint param);
GLBINDING_API void Fogiv(GLenum pname, const GLint * params);
GLBINDING_API void Fogx(GLenum pname, GLfixed param);
GLBINDING_API void FogxOES(GLenum pname, GLfixed param);
GLBINDING_API void Fogxv(GLenum pname, const GLfixed * param);
GLBINDING_API void FogxvOES(GLenum pname, const GLfixed * param);
GLBINDING_API void FragmentColorMaterialSGIX(GLenum face, GLenum mode);
GLBINDING_API void FragmentLightModelfSGIX(GLenum pname, GLfloat param);
GLBINDING_API void FragmentLightModelfvSGIX(GLenum pname, const GLfloat * params);
GLBINDING_API void FragmentLightModeliSGIX(GLenum pname, GLint param);
GLBINDING_API void FragmentLightModelivSGIX(GLenum pname, const GLint * params);
GLBINDING_API void FragmentLightfSGIX(GLenum light, GLenum pname, GLfloat param);
GLBINDING_API void FragmentLightfvSGIX(GLenum light, GLenum pname, const GLfloat * params);
GLBINDING_API void FragmentLightiSGIX(GLenum light, GLenum pname, GLint param);
GLBINDING_API void FragmentLightivSGIX(GLenum light, GLenum pname, const GLint * params);
GLBINDING_API void FragmentMaterialfSGIX(GLenum face, GLenum pname, GLfloat param);
GLBINDING_API void FragmentMaterialfvSGIX(GLenum face, GLenum pname, const GLfloat * params);
GLBINDING_API void FragmentMaterialiSGIX(GLenum face, GLenum pname, GLint param);
GLBINDING_API void FragmentMaterialivSGIX(GLenum face, GLenum pname, const GLint * params);
GLBINDING_API void FrameTerminatorGREMEDY();
GLBINDING_API void FrameZoomSGIX(GLint factor);
GLBINDING_API void FramebufferDrawBufferEXT(GLuint framebuffer, GLenum mode);
GLBINDING_API void FramebufferDrawBuffersEXT(GLuint framebuffer, GLsizei n, const GLenum * bufs);
GLBINDING_API void FramebufferParameteri(GLenum target, GLenum pname, GLint param);
GLBINDING_API void FramebufferReadBufferEXT(GLuint framebuffer, GLenum mode);
GLBINDING_API void FramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLBINDING_API void FramebufferRenderbufferEXT(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLBINDING_API void FramebufferRenderbufferOES(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLBINDING_API void FramebufferTexture(GLenum target, GLenum attachment, GLuint texture, GLint level);
GLBINDING_API void FramebufferTexture1D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLBINDING_API void FramebufferTexture1DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLBINDING_API void FramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLBINDING_API void FramebufferTexture2DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLBINDING_API void FramebufferTexture2DMultisampleEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
GLBINDING_API void FramebufferTexture2DMultisampleIMG(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
GLBINDING_API void FramebufferTexture2DOES(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLBINDING_API void FramebufferTexture3D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
GLBINDING_API void FramebufferTexture3DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
GLBINDING_API void FramebufferTexture3DOES(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
GLBINDING_API void FramebufferTextureARB(GLenum target, GLenum attachment, GLuint texture, GLint level);
GLBINDING_API void FramebufferTextureEXT(GLenum target, GLenum attachment, GLuint texture, GLint level);
GLBINDING_API void FramebufferTextureFaceARB(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
GLBINDING_API void FramebufferTextureFaceEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);
GLBINDING_API void FramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLBINDING_API void FramebufferTextureLayerARB(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLBINDING_API void FramebufferTextureLayerEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLBINDING_API void FreeObjectBufferATI(GLuint buffer);
GLBINDING_API void FrontFace(GLenum mode);
GLBINDING_API void Frustum(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLBINDING_API void Frustumf(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
GLBINDING_API void FrustumfOES(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
GLBINDING_API void Frustumx(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
GLBINDING_API void FrustumxOES(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
GLBINDING_API GLuint GenAsyncMarkersSGIX(GLsizei range);
GLBINDING_API void GenBuffers(GLsizei n, GLuint * buffers);
GLBINDING_API void GenBuffersARB(GLsizei n, GLuint * buffers);
GLBINDING_API void GenFencesAPPLE(GLsizei n, GLuint * fences);
GLBINDING_API void GenFencesNV(GLsizei n, GLuint * fences);
GLBINDING_API GLuint GenFragmentShadersATI(GLuint range);
GLBINDING_API void GenFramebuffers(GLsizei n, GLuint * framebuffers);
GLBINDING_API void GenFramebuffersEXT(GLsizei n, GLuint * framebuffers);
GLBINDING_API void GenFramebuffersOES(GLsizei n, GLuint * framebuffers);
GLBINDING_API GLuint GenLists(GLsizei range);
GLBINDING_API void GenNamesAMD(GLenum identifier, GLuint num, GLuint * names);
GLBINDING_API void GenOcclusionQueriesNV(GLsizei n, GLuint * ids);
GLBINDING_API GLuint GenPathsNV(GLsizei range);
GLBINDING_API void GenPerfMonitorsAMD(GLsizei n, GLuint * monitors);
GLBINDING_API void GenProgramPipelines(GLsizei n, GLuint * pipelines);
GLBINDING_API void GenProgramPipelinesEXT(GLsizei n, GLuint * pipelines);
GLBINDING_API void GenProgramsARB(GLsizei n, GLuint * programs);
GLBINDING_API void GenProgramsNV(GLsizei n, GLuint * programs);
GLBINDING_API void GenQueries(GLsizei n, GLuint * ids);
GLBINDING_API void GenQueriesARB(GLsizei n, GLuint * ids);
GLBINDING_API void GenQueriesEXT(GLsizei n, GLuint * ids);
GLBINDING_API void GenRenderbuffers(GLsizei n, GLuint * renderbuffers);
GLBINDING_API void GenRenderbuffersEXT(GLsizei n, GLuint * renderbuffers);
GLBINDING_API void GenRenderbuffersOES(GLsizei n, GLuint * renderbuffers);
GLBINDING_API void GenSamplers(GLsizei count, GLuint * samplers);
GLBINDING_API GLuint GenSymbolsEXT(GLenum datatype, GLenum storagetype, GLenum range, GLuint components);
GLBINDING_API void GenTextures(GLsizei n, GLuint * textures);
GLBINDING_API void GenTexturesEXT(GLsizei n, GLuint * textures);
GLBINDING_API void GenTransformFeedbacks(GLsizei n, GLuint * ids);
GLBINDING_API void GenTransformFeedbacksNV(GLsizei n, GLuint * ids);
GLBINDING_API void GenVertexArrays(GLsizei n, GLuint * arrays);
GLBINDING_API void GenVertexArraysAPPLE(GLsizei n, GLuint * arrays);
GLBINDING_API void GenVertexArraysOES(GLsizei n, GLuint * arrays);
GLBINDING_API GLuint GenVertexShadersEXT(GLuint range);
GLBINDING_API void GenerateMipmap(GLenum target);
GLBINDING_API void GenerateMipmapEXT(GLenum target);
GLBINDING_API void GenerateMipmapOES(GLenum target);
GLBINDING_API void GenerateMultiTexMipmapEXT(GLenum texunit, GLenum target);
GLBINDING_API void GenerateTextureMipmapEXT(GLuint texture, GLenum target);
GLBINDING_API void GetActiveAtomicCounterBufferiv(GLuint program, GLuint bufferIndex, GLenum pname, GLint * params);
GLBINDING_API void GetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
GLBINDING_API void GetActiveAttribARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
GLBINDING_API void GetActiveSubroutineName(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei * length, GLchar * name);
GLBINDING_API void GetActiveSubroutineUniformName(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei * length, GLchar * name);
GLBINDING_API void GetActiveSubroutineUniformiv(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint * values);
GLBINDING_API void GetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name);
GLBINDING_API void GetActiveUniformARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei * length, GLint * size, GLenum * type, GLcharARB * name);
GLBINDING_API void GetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName);
GLBINDING_API void GetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params);
GLBINDING_API void GetActiveUniformName(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformName);
GLBINDING_API void GetActiveUniformsiv(GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params);
GLBINDING_API void GetActiveVaryingNV(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
GLBINDING_API void GetArrayObjectfvATI(GLenum array, GLenum pname, GLfloat * params);
GLBINDING_API void GetArrayObjectivATI(GLenum array, GLenum pname, GLint * params);
GLBINDING_API void GetAttachedObjectsARB(GLhandleARB containerObj, GLsizei maxCount, GLsizei * count, GLhandleARB * obj);
GLBINDING_API void GetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders);
GLBINDING_API GLint GetAttribLocation(GLuint program, const GLchar * name);
GLBINDING_API GLint GetAttribLocationARB(GLhandleARB programObj, const GLcharARB * name);
GLBINDING_API void GetBooleanIndexedvEXT(GLenum target, GLuint index, GLboolean * data);
GLBINDING_API void GetBooleani_v(GLenum target, GLuint index, GLboolean * data);
GLBINDING_API void GetBooleanv(GLenum pname, GLboolean * data);
GLBINDING_API void GetBufferParameteri64v(GLenum target, GLenum pname, GLint64 * params);
GLBINDING_API void GetBufferParameteriv(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetBufferParameterivARB(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetBufferParameterui64vNV(GLenum target, GLenum pname, GLuint64EXT * params);
GLBINDING_API void GetBufferPointerv(GLenum target, GLenum pname, void ** params);
GLBINDING_API void GetBufferPointervARB(GLenum target, GLenum pname, void ** params);
GLBINDING_API void GetBufferPointervOES(GLenum target, GLenum pname, void ** params);
GLBINDING_API void GetBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, void * data);
GLBINDING_API void GetBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, void * data);
GLBINDING_API void GetClipPlane(GLenum plane, GLdouble * equation);
GLBINDING_API void GetClipPlanef(GLenum plane, GLfloat * equation);
GLBINDING_API void GetClipPlanefOES(GLenum plane, GLfloat * equation);
GLBINDING_API void GetClipPlanex(GLenum plane, GLfixed * equation);
GLBINDING_API void GetClipPlanexOES(GLenum plane, GLfixed * equation);
GLBINDING_API void GetColorTable(GLenum target, GLenum format, GLenum type, void * table);
GLBINDING_API void GetColorTableEXT(GLenum target, GLenum format, GLenum type, void * data);
GLBINDING_API void GetColorTableParameterfv(GLenum target, GLenum pname, GLfloat * params);
GLBINDING_API void GetColorTableParameterfvEXT(GLenum target, GLenum pname, GLfloat * params);
GLBINDING_API void GetColorTableParameterfvSGI(GLenum target, GLenum pname, GLfloat * params);
GLBINDING_API void GetColorTableParameteriv(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetColorTableParameterivEXT(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetColorTableParameterivSGI(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetColorTableSGI(GLenum target, GLenum format, GLenum type, void * table);
GLBINDING_API void GetCombinerInputParameterfvNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat * params);
GLBINDING_API void GetCombinerInputParameterivNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint * params);
GLBINDING_API void GetCombinerOutputParameterfvNV(GLenum stage, GLenum portion, GLenum pname, GLfloat * params);
GLBINDING_API void GetCombinerOutputParameterivNV(GLenum stage, GLenum portion, GLenum pname, GLint * params);
GLBINDING_API void GetCombinerStageParameterfvNV(GLenum stage, GLenum pname, GLfloat * params);
GLBINDING_API void GetCompressedMultiTexImageEXT(GLenum texunit, GLenum target, GLint lod, void * img);
GLBINDING_API void GetCompressedTexImage(GLenum target, GLint level, void * img);
GLBINDING_API void GetCompressedTexImageARB(GLenum target, GLint level, void * img);
GLBINDING_API void GetCompressedTextureImageEXT(GLuint texture, GLenum target, GLint lod, void * img);
GLBINDING_API void GetConvolutionFilter(GLenum target, GLenum format, GLenum type, void * image);
GLBINDING_API void GetConvolutionFilterEXT(GLenum target, GLenum format, GLenum type, void * image);
GLBINDING_API void GetConvolutionParameterfv(GLenum target, GLenum pname, GLfloat * params);
GLBINDING_API void GetConvolutionParameterfvEXT(GLenum target, GLenum pname, GLfloat * params);
GLBINDING_API void GetConvolutionParameteriv(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetConvolutionParameterivEXT(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetConvolutionParameterxvOES(GLenum target, GLenum pname, GLfixed * params);
GLBINDING_API GLuint GetDebugMessageLog(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
GLBINDING_API GLuint GetDebugMessageLogAMD(GLuint count, GLsizei bufsize, GLenum * categories, GLuint * severities, GLuint * ids, GLsizei * lengths, GLchar * message);
GLBINDING_API GLuint GetDebugMessageLogARB(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
GLBINDING_API GLuint GetDebugMessageLogKHR(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog);
GLBINDING_API void GetDetailTexFuncSGIS(GLenum target, GLfloat * points);
GLBINDING_API void GetDoubleIndexedvEXT(GLenum target, GLuint index, GLdouble * data);
GLBINDING_API void GetDoublei_v(GLenum target, GLuint index, GLdouble * data);
GLBINDING_API void GetDoublei_vEXT(GLenum pname, GLuint index, GLdouble * params);
GLBINDING_API void GetDoublev(GLenum pname, GLdouble * data);
GLBINDING_API void GetDriverControlStringQCOM(GLuint driverControl, GLsizei bufSize, GLsizei * length, GLchar * driverControlString);
GLBINDING_API void GetDriverControlsQCOM(GLint * num, GLsizei size, GLuint * driverControls);
GLBINDING_API GLenum GetError();
GLBINDING_API void GetFenceivNV(GLuint fence, GLenum pname, GLint * params);
GLBINDING_API void GetFinalCombinerInputParameterfvNV(GLenum variable, GLenum pname, GLfloat * params);
GLBINDING_API void GetFinalCombinerInputParameterivNV(GLenum variable, GLenum pname, GLint * params);
GLBINDING_API void GetFirstPerfQueryIdINTEL(GLuint * queryId);
GLBINDING_API void GetFixedv(GLenum pname, GLfixed * params);
GLBINDING_API void GetFixedvOES(GLenum pname, GLfixed * params);
GLBINDING_API void GetFloatIndexedvEXT(GLenum target, GLuint index, GLfloat * data);
GLBINDING_API void GetFloati_v(GLenum target, GLuint index, GLfloat * data);
GLBINDING_API void GetFloati_vEXT(GLenum pname, GLuint index, GLfloat * params);
GLBINDING_API void GetFloatv(GLenum pname, GLfloat * data);
GLBINDING_API void GetFogFuncSGIS(GLfloat * points);
GLBINDING_API GLint GetFragDataIndex(GLuint program, const GLchar * name);
GLBINDING_API GLint GetFragDataLocation(GLuint program, const GLchar * name);
GLBINDING_API GLint GetFragDataLocationEXT(GLuint program, const GLchar * name);
GLBINDING_API void GetFragmentLightfvSGIX(GLenum light, GLenum pname, GLfloat * params);
GLBINDING_API void GetFragmentLightivSGIX(GLenum light, GLenum pname, GLint * params);
GLBINDING_API void GetFragmentMaterialfvSGIX(GLenum face, GLenum pname, GLfloat * params);
GLBINDING_API void GetFragmentMaterialivSGIX(GLenum face, GLenum pname, GLint * params);
GLBINDING_API void GetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint * params);
GLBINDING_API void GetFramebufferAttachmentParameterivEXT(GLenum target, GLenum attachment, GLenum pname, GLint * params);
GLBINDING_API void GetFramebufferAttachmentParameterivOES(GLenum target, GLenum attachment, GLenum pname, GLint * params);
GLBINDING_API void GetFramebufferParameteriv(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetFramebufferParameterivEXT(GLuint framebuffer, GLenum pname, GLint * params);
GLBINDING_API GLenum GetGraphicsResetStatusARB();
GLBINDING_API GLenum GetGraphicsResetStatusEXT();
GLBINDING_API GLhandleARB GetHandleARB(GLenum pname);
GLBINDING_API void GetHistogram(GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
GLBINDING_API void GetHistogramEXT(GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
GLBINDING_API void GetHistogramParameterfv(GLenum target, GLenum pname, GLfloat * params);
GLBINDING_API void GetHistogramParameterfvEXT(GLenum target, GLenum pname, GLfloat * params);
GLBINDING_API void GetHistogramParameteriv(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetHistogramParameterivEXT(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetHistogramParameterxvOES(GLenum target, GLenum pname, GLfixed * params);
GLBINDING_API GLuint64 GetImageHandleARB(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
GLBINDING_API GLuint64 GetImageHandleNV(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format);
GLBINDING_API void GetImageTransformParameterfvHP(GLenum target, GLenum pname, GLfloat * params);
GLBINDING_API void GetImageTransformParameterivHP(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetInfoLogARB(GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * infoLog);
GLBINDING_API GLint GetInstrumentsSGIX();
GLBINDING_API void GetInteger64i_v(GLenum target, GLuint index, GLint64 * data);
GLBINDING_API void GetInteger64v(GLenum pname, GLint64 * data);
GLBINDING_API void GetInteger64vAPPLE(GLenum pname, GLint64 * params);
GLBINDING_API void GetIntegerIndexedvEXT(GLenum target, GLuint index, GLint * data);
GLBINDING_API void GetIntegeri_v(GLenum target, GLuint index, GLint * data);
GLBINDING_API void GetIntegeri_vEXT(GLenum target, GLuint index, GLint * data);
GLBINDING_API void GetIntegerui64i_vNV(GLenum value, GLuint index, GLuint64EXT * result);
GLBINDING_API void GetIntegerui64vNV(GLenum value, GLuint64EXT * result);
GLBINDING_API void GetIntegerv(GLenum pname, GLint * data);
GLBINDING_API void GetInternalformati64v(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 * params);
GLBINDING_API void GetInternalformativ(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint * params);
GLBINDING_API void GetInvariantBooleanvEXT(GLuint id, GLenum value, GLboolean * data);
GLBINDING_API void GetInvariantFloatvEXT(GLuint id, GLenum value, GLfloat * data);
GLBINDING_API void GetInvariantIntegervEXT(GLuint id, GLenum value, GLint * data);
GLBINDING_API void GetLightfv(GLenum light, GLenum pname, GLfloat * params);
GLBINDING_API void GetLightiv(GLenum light, GLenum pname, GLint * params);
GLBINDING_API void GetLightxOES(GLenum light, GLenum pname, GLfixed * params);
GLBINDING_API void GetLightxv(GLenum light, GLenum pname, GLfixed * params);
GLBINDING_API void GetLightxvOES(GLenum light, GLenum pname, GLfixed * params);
GLBINDING_API void GetListParameterfvSGIX(GLuint list, GLenum pname, GLfloat * params);
GLBINDING_API void GetListParameterivSGIX(GLuint list, GLenum pname, GLint * params);
GLBINDING_API void GetLocalConstantBooleanvEXT(GLuint id, GLenum value, GLboolean * data);
GLBINDING_API void GetLocalConstantFloatvEXT(GLuint id, GLenum value, GLfloat * data);
GLBINDING_API void GetLocalConstantIntegervEXT(GLuint id, GLenum value, GLint * data);
GLBINDING_API void GetMapAttribParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat * params);
GLBINDING_API void GetMapAttribParameterivNV(GLenum target, GLuint index, GLenum pname, GLint * params);
GLBINDING_API void GetMapControlPointsNV(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, void * points);
GLBINDING_API void GetMapParameterfvNV(GLenum target, GLenum pname, GLfloat * params);
GLBINDING_API void GetMapParameterivNV(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetMapdv(GLenum target, GLenum query, GLdouble * v);
GLBINDING_API void GetMapfv(GLenum target, GLenum query, GLfloat * v);
GLBINDING_API void GetMapiv(GLenum target, GLenum query, GLint * v);
GLBINDING_API void GetMapxvOES(GLenum target, GLenum query, GLfixed * v);
GLBINDING_API void GetMaterialfv(GLenum face, GLenum pname, GLfloat * params);
GLBINDING_API void GetMaterialiv(GLenum face, GLenum pname, GLint * params);
GLBINDING_API void GetMaterialxOES(GLenum face, GLenum pname, GLfixed param);
GLBINDING_API void GetMaterialxv(GLenum face, GLenum pname, GLfixed * params);
GLBINDING_API void GetMaterialxvOES(GLenum face, GLenum pname, GLfixed * params);
GLBINDING_API void GetMinmax(GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
GLBINDING_API void GetMinmaxEXT(GLenum target, GLboolean reset, GLenum format, GLenum type, void * values);
GLBINDING_API void GetMinmaxParameterfv(GLenum target, GLenum pname, GLfloat * params);
GLBINDING_API void GetMinmaxParameterfvEXT(GLenum target, GLenum pname, GLfloat * params);
GLBINDING_API void GetMinmaxParameteriv(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetMinmaxParameterivEXT(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetMultiTexEnvfvEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat * params);
GLBINDING_API void GetMultiTexEnvivEXT(GLenum texunit, GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetMultiTexGendvEXT(GLenum texunit, GLenum coord, GLenum pname, GLdouble * params);
GLBINDING_API void GetMultiTexGenfvEXT(GLenum texunit, GLenum coord, GLenum pname, GLfloat * params);
GLBINDING_API void GetMultiTexGenivEXT(GLenum texunit, GLenum coord, GLenum pname, GLint * params);
GLBINDING_API void GetMultiTexImageEXT(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
GLBINDING_API void GetMultiTexLevelParameterfvEXT(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat * params);
GLBINDING_API void GetMultiTexLevelParameterivEXT(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint * params);
GLBINDING_API void GetMultiTexParameterIivEXT(GLenum texunit, GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetMultiTexParameterIuivEXT(GLenum texunit, GLenum target, GLenum pname, GLuint * params);
GLBINDING_API void GetMultiTexParameterfvEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat * params);
GLBINDING_API void GetMultiTexParameterivEXT(GLenum texunit, GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetMultisamplefv(GLenum pname, GLuint index, GLfloat * val);
GLBINDING_API void GetMultisamplefvNV(GLenum pname, GLuint index, GLfloat * val);
GLBINDING_API void GetNamedBufferParameterivEXT(GLuint buffer, GLenum pname, GLint * params);
GLBINDING_API void GetNamedBufferParameterui64vNV(GLuint buffer, GLenum pname, GLuint64EXT * params);
GLBINDING_API void GetNamedBufferPointervEXT(GLuint buffer, GLenum pname, void ** params);
GLBINDING_API void GetNamedBufferSubDataEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
GLBINDING_API void GetNamedFramebufferAttachmentParameterivEXT(GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
GLBINDING_API void GetNamedFramebufferParameterivEXT(GLuint framebuffer, GLenum pname, GLint * params);
GLBINDING_API void GetNamedProgramLocalParameterIivEXT(GLuint program, GLenum target, GLuint index, GLint * params);
GLBINDING_API void GetNamedProgramLocalParameterIuivEXT(GLuint program, GLenum target, GLuint index, GLuint * params);
GLBINDING_API void GetNamedProgramLocalParameterdvEXT(GLuint program, GLenum target, GLuint index, GLdouble * params);
GLBINDING_API void GetNamedProgramLocalParameterfvEXT(GLuint program, GLenum target, GLuint index, GLfloat * params);
GLBINDING_API void GetNamedProgramStringEXT(GLuint program, GLenum target, GLenum pname, void * string);
GLBINDING_API void GetNamedProgramivEXT(GLuint program, GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetNamedRenderbufferParameterivEXT(GLuint renderbuffer, GLenum pname, GLint * params);
GLBINDING_API void GetNamedStringARB(GLint namelen, const GLchar * name, GLsizei bufSize, GLint * stringlen, GLchar * string);
GLBINDING_API void GetNamedStringivARB(GLint namelen, const GLchar * name, GLenum pname, GLint * params);
GLBINDING_API void GetNextPerfQueryIdINTEL(GLuint queryId, GLuint * nextQueryId);
GLBINDING_API void GetObjectBufferfvATI(GLuint buffer, GLenum pname, GLfloat * params);
GLBINDING_API void GetObjectBufferivATI(GLuint buffer, GLenum pname, GLint * params);
GLBINDING_API void GetObjectLabel(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
GLBINDING_API void GetObjectLabelEXT(GLenum type, GLuint object, GLsizei bufSize, GLsizei * length, GLchar * label);
GLBINDING_API void GetObjectLabelKHR(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label);
GLBINDING_API void GetObjectParameterfvARB(GLhandleARB obj, GLenum pname, GLfloat * params);
GLBINDING_API void GetObjectParameterivAPPLE(GLenum objectType, GLuint name, GLenum pname, GLint * params);
GLBINDING_API void GetObjectParameterivARB(GLhandleARB obj, GLenum pname, GLint * params);
GLBINDING_API void GetObjectPtrLabel(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
GLBINDING_API void GetObjectPtrLabelKHR(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label);
GLBINDING_API void GetOcclusionQueryivNV(GLuint id, GLenum pname, GLint * params);
GLBINDING_API void GetOcclusionQueryuivNV(GLuint id, GLenum pname, GLuint * params);
GLBINDING_API void GetPathColorGenfvNV(GLenum color, GLenum pname, GLfloat * value);
GLBINDING_API void GetPathColorGenivNV(GLenum color, GLenum pname, GLint * value);
GLBINDING_API void GetPathCommandsNV(GLuint path, GLubyte * commands);
GLBINDING_API void GetPathCoordsNV(GLuint path, GLfloat * coords);
GLBINDING_API void GetPathDashArrayNV(GLuint path, GLfloat * dashArray);
GLBINDING_API GLfloat GetPathLengthNV(GLuint path, GLsizei startSegment, GLsizei numSegments);
GLBINDING_API void GetPathMetricRangeNV(GLbitfield metricQueryMask, GLuint firstPathName, GLsizei numPaths, GLsizei stride, GLfloat * metrics);
GLBINDING_API void GetPathMetricsNV(GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLsizei stride, GLfloat * metrics);
GLBINDING_API void GetPathParameterfvNV(GLuint path, GLenum pname, GLfloat * value);
GLBINDING_API void GetPathParameterivNV(GLuint path, GLenum pname, GLint * value);
GLBINDING_API void GetPathSpacingNV(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat * returnedSpacing);
GLBINDING_API void GetPathTexGenfvNV(GLenum texCoordSet, GLenum pname, GLfloat * value);
GLBINDING_API void GetPathTexGenivNV(GLenum texCoordSet, GLenum pname, GLint * value);
GLBINDING_API void GetPerfCounterInfoINTEL(GLuint queryId, GLuint counterId, GLuint counterNameLength, GLchar * counterName, GLuint counterDescLength, GLchar * counterDesc, GLuint * counterOffset, GLuint * counterDataSize, GLuint * counterTypeEnum, GLuint * counterDataTypeEnum, GLuint64 * rawCounterMaxValue);
GLBINDING_API void GetPerfMonitorCounterDataAMD(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint * data, GLint * bytesWritten);
GLBINDING_API void GetPerfMonitorCounterInfoAMD(GLuint group, GLuint counter, GLenum pname, void * data);
GLBINDING_API void GetPerfMonitorCounterStringAMD(GLuint group, GLuint counter, GLsizei bufSize, GLsizei * length, GLchar * counterString);
GLBINDING_API void GetPerfMonitorCountersAMD(GLuint group, GLint * numCounters, GLint * maxActiveCounters, GLsizei counterSize, GLuint * counters);
GLBINDING_API void GetPerfMonitorGroupStringAMD(GLuint group, GLsizei bufSize, GLsizei * length, GLchar * groupString);
GLBINDING_API void GetPerfMonitorGroupsAMD(GLint * numGroups, GLsizei groupsSize, GLuint * groups);
GLBINDING_API void GetPerfQueryDataINTEL(GLuint queryHandle, GLuint flags, GLsizei dataSize, GLvoid * data, GLuint * bytesWritten);
GLBINDING_API void GetPerfQueryIdByNameINTEL(GLchar * queryName, GLuint * queryId);
GLBINDING_API void GetPerfQueryInfoINTEL(GLuint queryId, GLuint queryNameLength, GLchar * queryName, GLuint * dataSize, GLuint * noCounters, GLuint * noInstances, GLuint * capsMask);
GLBINDING_API void GetPixelMapfv(GLenum map, GLfloat * values);
GLBINDING_API void GetPixelMapuiv(GLenum map, GLuint * values);
GLBINDING_API void GetPixelMapusv(GLenum map, GLushort * values);
GLBINDING_API void GetPixelMapxv(GLenum map, GLint size, GLfixed * values);
GLBINDING_API void GetPixelTexGenParameterfvSGIS(GLenum pname, GLfloat * params);
GLBINDING_API void GetPixelTexGenParameterivSGIS(GLenum pname, GLint * params);
GLBINDING_API void GetPixelTransformParameterfvEXT(GLenum target, GLenum pname, GLfloat * params);
GLBINDING_API void GetPixelTransformParameterivEXT(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetPointerIndexedvEXT(GLenum target, GLuint index, void ** data);
GLBINDING_API void GetPointeri_vEXT(GLenum pname, GLuint index, void ** params);
GLBINDING_API void GetPointerv(GLenum pname, void ** params);
GLBINDING_API void GetPointervEXT(GLenum pname, void ** params);
GLBINDING_API void GetPointervKHR(GLenum pname, void ** params);
GLBINDING_API void GetPolygonStipple(GLubyte * mask);
GLBINDING_API void GetProgramBinary(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
GLBINDING_API void GetProgramBinaryOES(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary);
GLBINDING_API void GetProgramEnvParameterIivNV(GLenum target, GLuint index, GLint * params);
GLBINDING_API void GetProgramEnvParameterIuivNV(GLenum target, GLuint index, GLuint * params);
GLBINDING_API void GetProgramEnvParameterdvARB(GLenum target, GLuint index, GLdouble * params);
GLBINDING_API void GetProgramEnvParameterfvARB(GLenum target, GLuint index, GLfloat * params);
GLBINDING_API void GetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLBINDING_API void GetProgramInterfaceiv(GLuint program, GLenum programInterface, GLenum pname, GLint * params);
GLBINDING_API void GetProgramLocalParameterIivNV(GLenum target, GLuint index, GLint * params);
GLBINDING_API void GetProgramLocalParameterIuivNV(GLenum target, GLuint index, GLuint * params);
GLBINDING_API void GetProgramLocalParameterdvARB(GLenum target, GLuint index, GLdouble * params);
GLBINDING_API void GetProgramLocalParameterfvARB(GLenum target, GLuint index, GLfloat * params);
GLBINDING_API void GetProgramNamedParameterdvNV(GLuint id, GLsizei len, const GLubyte * name, GLdouble * params);
GLBINDING_API void GetProgramNamedParameterfvNV(GLuint id, GLsizei len, const GLubyte * name, GLfloat * params);
GLBINDING_API void GetProgramParameterdvNV(GLenum target, GLuint index, GLenum pname, GLdouble * params);
GLBINDING_API void GetProgramParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat * params);
GLBINDING_API void GetProgramPipelineInfoLog(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLBINDING_API void GetProgramPipelineInfoLogEXT(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLBINDING_API void GetProgramPipelineiv(GLuint pipeline, GLenum pname, GLint * params);
GLBINDING_API void GetProgramPipelineivEXT(GLuint pipeline, GLenum pname, GLint * params);
GLBINDING_API GLuint GetProgramResourceIndex(GLuint program, GLenum programInterface, const GLchar * name);
GLBINDING_API GLint GetProgramResourceLocation(GLuint program, GLenum programInterface, const GLchar * name);
GLBINDING_API GLint GetProgramResourceLocationIndex(GLuint program, GLenum programInterface, const GLchar * name);
GLBINDING_API void GetProgramResourceName(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name);
GLBINDING_API void GetProgramResourceiv(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei bufSize, GLsizei * length, GLint * params);
GLBINDING_API void GetProgramStageiv(GLuint program, GLenum shadertype, GLenum pname, GLint * values);
GLBINDING_API void GetProgramStringARB(GLenum target, GLenum pname, void * string);
GLBINDING_API void GetProgramStringNV(GLuint id, GLenum pname, GLubyte * program);
GLBINDING_API void GetProgramSubroutineParameteruivNV(GLenum target, GLuint index, GLuint * param);
GLBINDING_API void GetProgramiv(GLuint program, GLenum pname, GLint * params);
GLBINDING_API void GetProgramivARB(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetProgramivNV(GLuint id, GLenum pname, GLint * params);
GLBINDING_API void GetQueryIndexediv(GLenum target, GLuint index, GLenum pname, GLint * params);
GLBINDING_API void GetQueryObjecti64v(GLuint id, GLenum pname, GLint64 * params);
GLBINDING_API void GetQueryObjecti64vEXT(GLuint id, GLenum pname, GLint64 * params);
GLBINDING_API void GetQueryObjectiv(GLuint id, GLenum pname, GLint * params);
GLBINDING_API void GetQueryObjectivARB(GLuint id, GLenum pname, GLint * params);
GLBINDING_API void GetQueryObjectivEXT(GLuint id, GLenum pname, GLint * params);
GLBINDING_API void GetQueryObjectui64v(GLuint id, GLenum pname, GLuint64 * params);
GLBINDING_API void GetQueryObjectui64vEXT(GLuint id, GLenum pname, GLuint64 * params);
GLBINDING_API void GetQueryObjectuiv(GLuint id, GLenum pname, GLuint * params);
GLBINDING_API void GetQueryObjectuivARB(GLuint id, GLenum pname, GLuint * params);
GLBINDING_API void GetQueryObjectuivEXT(GLuint id, GLenum pname, GLuint * params);
GLBINDING_API void GetQueryiv(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetQueryivARB(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetQueryivEXT(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetRenderbufferParameteriv(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetRenderbufferParameterivEXT(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetRenderbufferParameterivOES(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetSamplerParameterIiv(GLuint sampler, GLenum pname, GLint * params);
GLBINDING_API void GetSamplerParameterIuiv(GLuint sampler, GLenum pname, GLuint * params);
GLBINDING_API void GetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat * params);
GLBINDING_API void GetSamplerParameteriv(GLuint sampler, GLenum pname, GLint * params);
GLBINDING_API void GetSeparableFilter(GLenum target, GLenum format, GLenum type, void * row, void * column, void * span);
GLBINDING_API void GetSeparableFilterEXT(GLenum target, GLenum format, GLenum type, void * row, void * column, void * span);
GLBINDING_API void GetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog);
GLBINDING_API void GetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision);
GLBINDING_API void GetShaderSource(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source);
GLBINDING_API void GetShaderSourceARB(GLhandleARB obj, GLsizei maxLength, GLsizei * length, GLcharARB * source);
GLBINDING_API void GetShaderiv(GLuint shader, GLenum pname, GLint * params);
GLBINDING_API void GetSharpenTexFuncSGIS(GLenum target, GLfloat * points);
GLBINDING_API const GLubyte * GetString(GLenum name);
GLBINDING_API const GLubyte * GetStringi(GLenum name, GLuint index);
GLBINDING_API GLuint GetSubroutineIndex(GLuint program, GLenum shadertype, const GLchar * name);
GLBINDING_API GLint GetSubroutineUniformLocation(GLuint program, GLenum shadertype, const GLchar * name);
GLBINDING_API void GetSynciv(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
GLBINDING_API void GetSyncivAPPLE(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
GLBINDING_API void GetTexBumpParameterfvATI(GLenum pname, GLfloat * param);
GLBINDING_API void GetTexBumpParameterivATI(GLenum pname, GLint * param);
GLBINDING_API void GetTexEnvfv(GLenum target, GLenum pname, GLfloat * params);
GLBINDING_API void GetTexEnviv(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetTexEnvxv(GLenum target, GLenum pname, GLfixed * params);
GLBINDING_API void GetTexEnvxvOES(GLenum target, GLenum pname, GLfixed * params);
GLBINDING_API void GetTexFilterFuncSGIS(GLenum target, GLenum filter, GLfloat * weights);
GLBINDING_API void GetTexGendv(GLenum coord, GLenum pname, GLdouble * params);
GLBINDING_API void GetTexGenfv(GLenum coord, GLenum pname, GLfloat * params);
GLBINDING_API void GetTexGenfvOES(GLenum coord, GLenum pname, GLfloat * params);
GLBINDING_API void GetTexGeniv(GLenum coord, GLenum pname, GLint * params);
GLBINDING_API void GetTexGenivOES(GLenum coord, GLenum pname, GLint * params);
GLBINDING_API void GetTexGenxvOES(GLenum coord, GLenum pname, GLfixed * params);
GLBINDING_API void GetTexImage(GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
GLBINDING_API void GetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat * params);
GLBINDING_API void GetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint * params);
GLBINDING_API void GetTexLevelParameterxvOES(GLenum target, GLint level, GLenum pname, GLfixed * params);
GLBINDING_API void GetTexParameterIiv(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetTexParameterIivEXT(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetTexParameterIuiv(GLenum target, GLenum pname, GLuint * params);
GLBINDING_API void GetTexParameterIuivEXT(GLenum target, GLenum pname, GLuint * params);
GLBINDING_API void GetTexParameterPointervAPPLE(GLenum target, GLenum pname, void ** params);
GLBINDING_API void GetTexParameterfv(GLenum target, GLenum pname, GLfloat * params);
GLBINDING_API void GetTexParameteriv(GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetTexParameterxv(GLenum target, GLenum pname, GLfixed * params);
GLBINDING_API void GetTexParameterxvOES(GLenum target, GLenum pname, GLfixed * params);
GLBINDING_API GLuint64 GetTextureHandleARB(GLuint texture);
GLBINDING_API GLuint64 GetTextureHandleNV(GLuint texture);
GLBINDING_API void GetTextureImageEXT(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, void * pixels);
GLBINDING_API void GetTextureLevelParameterfvEXT(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat * params);
GLBINDING_API void GetTextureLevelParameterivEXT(GLuint texture, GLenum target, GLint level, GLenum pname, GLint * params);
GLBINDING_API void GetTextureParameterIivEXT(GLuint texture, GLenum target, GLenum pname, GLint * params);
GLBINDING_API void GetTextureParameterIuivEXT(GLuint texture, GLenum target, GLenum pname, GLuint * params);
GLBINDING_API void GetTextureParameterfvEXT(GLuint texture, GLenum target, GLenum pname, GLfloat * params);
GLBINDING_API void GetTextureParameterivEXT(GLuint texture, GLenum target, GLenum pname, GLint * params);
GLBINDING_API GLuint64 GetTextureSamplerHandleARB(GLuint texture, GLuint sampler);
GLBINDING_API GLuint64 GetTextureSamplerHandleNV(GLuint texture, GLuint sampler);
GLBINDING_API void GetTrackMatrixivNV(GLenum target, GLuint address, GLenum pname, GLint * params);
GLBINDING_API void GetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
GLBINDING_API void GetTransformFeedbackVaryingEXT(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name);
GLBINDING_API void GetTransformFeedbackVaryingNV(GLuint program, GLuint index, GLint * location);
GLBINDING_API void GetTranslatedShaderSourceANGLE(GLuint shader, GLsizei bufsize, GLsizei * length, GLchar * source);
GLBINDING_API GLuint GetUniformBlockIndex(GLuint program, const GLchar * uniformBlockName);
GLBINDING_API GLint GetUniformBufferSizeEXT(GLuint program, GLint location);
GLBINDING_API void GetUniformIndices(GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices);
GLBINDING_API GLint GetUniformLocation(GLuint program, const GLchar * name);
GLBINDING_API GLint GetUniformLocationARB(GLhandleARB programObj, const GLcharARB * name);
GLBINDING_API GLintptr GetUniformOffsetEXT(GLuint program, GLint location);
GLBINDING_API void GetUniformSubroutineuiv(GLenum shadertype, GLint location, GLuint * params);
GLBINDING_API void GetUniformdv(GLuint program, GLint location, GLdouble * params);
GLBINDING_API void GetUniformfv(GLuint program, GLint location, GLfloat * params);
GLBINDING_API void GetUniformfvARB(GLhandleARB programObj, GLint location, GLfloat * params);
GLBINDING_API void GetUniformi64vNV(GLuint program, GLint location, GLint64EXT * params);
GLBINDING_API void GetUniformiv(GLuint program, GLint location, GLint * params);
GLBINDING_API void GetUniformivARB(GLhandleARB programObj, GLint location, GLint * params);
GLBINDING_API void GetUniformui64vNV(GLuint program, GLint location, GLuint64EXT * params);
GLBINDING_API void GetUniformuiv(GLuint program, GLint location, GLuint * params);
GLBINDING_API void GetUniformuivEXT(GLuint program, GLint location, GLuint * params);
GLBINDING_API void GetVariantArrayObjectfvATI(GLuint id, GLenum pname, GLfloat * params);
GLBINDING_API void GetVariantArrayObjectivATI(GLuint id, GLenum pname, GLint * params);
GLBINDING_API void GetVariantBooleanvEXT(GLuint id, GLenum value, GLboolean * data);
GLBINDING_API void GetVariantFloatvEXT(GLuint id, GLenum value, GLfloat * data);
GLBINDING_API void GetVariantIntegervEXT(GLuint id, GLenum value, GLint * data);
GLBINDING_API void GetVariantPointervEXT(GLuint id, GLenum value, void ** data);
GLBINDING_API GLint GetVaryingLocationNV(GLuint program, const GLchar * name);
GLBINDING_API void GetVertexArrayIntegeri_vEXT(GLuint vaobj, GLuint index, GLenum pname, GLint * param);
GLBINDING_API void GetVertexArrayIntegervEXT(GLuint vaobj, GLenum pname, GLint * param);
GLBINDING_API void GetVertexArrayPointeri_vEXT(GLuint vaobj, GLuint index, GLenum pname, void ** param);
GLBINDING_API void GetVertexArrayPointervEXT(GLuint vaobj, GLenum pname, void ** param);
GLBINDING_API void GetVertexAttribArrayObjectfvATI(GLuint index, GLenum pname, GLfloat * params);
GLBINDING_API void GetVertexAttribArrayObjectivATI(GLuint index, GLenum pname, GLint * params);
GLBINDING_API void GetVertexAttribIiv(GLuint index, GLenum pname, GLint * params);
GLBINDING_API void GetVertexAttribIivEXT(GLuint index, GLenum pname, GLint * params);
GLBINDING_API void GetVertexAttribIuiv(GLuint index, GLenum pname, GLuint * params);
GLBINDING_API void GetVertexAttribIuivEXT(GLuint index, GLenum pname, GLuint * params);
GLBINDING_API void GetVertexAttribLdv(GLuint index, GLenum pname, GLdouble * params);
GLBINDING_API void GetVertexAttribLdvEXT(GLuint index, GLenum pname, GLdouble * params);
GLBINDING_API void GetVertexAttribLi64vNV(GLuint index, GLenum pname, GLint64EXT * params);
GLBINDING_API void GetVertexAttribLui64vARB(GLuint index, GLenum pname, GLuint64EXT * params);
GLBINDING_API void GetVertexAttribLui64vNV(GLuint index, GLenum pname, GLuint64EXT * params);
GLBINDING_API void GetVertexAttribPointerv(GLuint index, GLenum pname, void ** pointer);
GLBINDING_API void GetVertexAttribPointervARB(GLuint index, GLenum pname, void ** pointer);
GLBINDING_API void GetVertexAttribPointervNV(GLuint index, GLenum pname, void ** pointer);
GLBINDING_API void GetVertexAttribdv(GLuint index, GLenum pname, GLdouble * params);
GLBINDING_API void GetVertexAttribdvARB(GLuint index, GLenum pname, GLdouble * params);
GLBINDING_API void GetVertexAttribdvNV(GLuint index, GLenum pname, GLdouble * params);
GLBINDING_API void GetVertexAttribfv(GLuint index, GLenum pname, GLfloat * params);
GLBINDING_API void GetVertexAttribfvARB(GLuint index, GLenum pname, GLfloat * params);
GLBINDING_API void GetVertexAttribfvNV(GLuint index, GLenum pname, GLfloat * params);
GLBINDING_API void GetVertexAttribiv(GLuint index, GLenum pname, GLint * params);
GLBINDING_API void GetVertexAttribivARB(GLuint index, GLenum pname, GLint * params);
GLBINDING_API void GetVertexAttribivNV(GLuint index, GLenum pname, GLint * params);
GLBINDING_API void GetVideoCaptureStreamdvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble * params);
GLBINDING_API void GetVideoCaptureStreamfvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat * params);
GLBINDING_API void GetVideoCaptureStreamivNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint * params);
GLBINDING_API void GetVideoCaptureivNV(GLuint video_capture_slot, GLenum pname, GLint * params);
GLBINDING_API void GetVideoi64vNV(GLuint video_slot, GLenum pname, GLint64EXT * params);
GLBINDING_API void GetVideoivNV(GLuint video_slot, GLenum pname, GLint * params);
GLBINDING_API void GetVideoui64vNV(GLuint video_slot, GLenum pname, GLuint64EXT * params);
GLBINDING_API void GetVideouivNV(GLuint video_slot, GLenum pname, GLuint * params);
GLBINDING_API void GetnColorTableARB(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * table);
GLBINDING_API void GetnCompressedTexImageARB(GLenum target, GLint lod, GLsizei bufSize, void * img);
GLBINDING_API void GetnConvolutionFilterARB(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * image);
GLBINDING_API void GetnHistogramARB(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
GLBINDING_API void GetnMapdvARB(GLenum target, GLenum query, GLsizei bufSize, GLdouble * v);
GLBINDING_API void GetnMapfvARB(GLenum target, GLenum query, GLsizei bufSize, GLfloat * v);
GLBINDING_API void GetnMapivARB(GLenum target, GLenum query, GLsizei bufSize, GLint * v);
GLBINDING_API void GetnMinmaxARB(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values);
GLBINDING_API void GetnPixelMapfvARB(GLenum map, GLsizei bufSize, GLfloat * values);
GLBINDING_API void GetnPixelMapuivARB(GLenum map, GLsizei bufSize, GLuint * values);
GLBINDING_API void GetnPixelMapusvARB(GLenum map, GLsizei bufSize, GLushort * values);
GLBINDING_API void GetnPolygonStippleARB(GLsizei bufSize, GLubyte * pattern);
GLBINDING_API void GetnSeparableFilterARB(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void * row, GLsizei columnBufSize, void * column, void * span);
GLBINDING_API void GetnTexImageARB(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * img);
GLBINDING_API void GetnUniformdvARB(GLuint program, GLint location, GLsizei bufSize, GLdouble * params);
GLBINDING_API void GetnUniformfvARB(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
GLBINDING_API void GetnUniformfvEXT(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
GLBINDING_API void GetnUniformivARB(GLuint program, GLint location, GLsizei bufSize, GLint * params);
GLBINDING_API void GetnUniformivEXT(GLuint program, GLint location, GLsizei bufSize, GLint * params);
GLBINDING_API void GetnUniformuivARB(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
GLBINDING_API void GlobalAlphaFactorbSUN(GLbyte factor);
GLBINDING_API void GlobalAlphaFactordSUN(GLdouble factor);
GLBINDING_API void GlobalAlphaFactorfSUN(GLfloat factor);
GLBINDING_API void GlobalAlphaFactoriSUN(GLint factor);
GLBINDING_API void GlobalAlphaFactorsSUN(GLshort factor);
GLBINDING_API void GlobalAlphaFactorubSUN(GLubyte factor);
GLBINDING_API void GlobalAlphaFactoruiSUN(GLuint factor);
GLBINDING_API void GlobalAlphaFactorusSUN(GLushort factor);
GLBINDING_API void Hint(GLenum target, GLenum mode);
GLBINDING_API void HintPGI(GLenum target, GLint mode);
GLBINDING_API void Histogram(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
GLBINDING_API void HistogramEXT(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);
GLBINDING_API void IglooInterfaceSGIX(GLenum pname, const void * params);
GLBINDING_API void ImageTransformParameterfHP(GLenum target, GLenum pname, GLfloat param);
GLBINDING_API void ImageTransformParameterfvHP(GLenum target, GLenum pname, const GLfloat * params);
GLBINDING_API void ImageTransformParameteriHP(GLenum target, GLenum pname, GLint param);
GLBINDING_API void ImageTransformParameterivHP(GLenum target, GLenum pname, const GLint * params);
GLBINDING_API GLsync ImportSyncEXT(GLenum external_sync_type, GLintptr external_sync, GLbitfield flags);
GLBINDING_API void IndexFormatNV(GLenum type, GLsizei stride);
GLBINDING_API void IndexFuncEXT(GLenum func, GLclampf ref);
GLBINDING_API void IndexMask(GLuint mask);
GLBINDING_API void IndexMaterialEXT(GLenum face, GLenum mode);
GLBINDING_API void IndexPointer(GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void IndexPointerEXT(GLenum type, GLsizei stride, GLsizei count, const void * pointer);
GLBINDING_API void IndexPointerListIBM(GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
GLBINDING_API void Indexd(GLdouble c);
GLBINDING_API void Indexdv(const GLdouble * c);
GLBINDING_API void Indexf(GLfloat c);
GLBINDING_API void Indexfv(const GLfloat * c);
GLBINDING_API void Indexi(GLint c);
GLBINDING_API void Indexiv(const GLint * c);
GLBINDING_API void Indexs(GLshort c);
GLBINDING_API void Indexsv(const GLshort * c);
GLBINDING_API void Indexub(GLubyte c);
GLBINDING_API void Indexubv(const GLubyte * c);
GLBINDING_API void IndexxOES(GLfixed component);
GLBINDING_API void IndexxvOES(const GLfixed * component);
GLBINDING_API void InitNames();
GLBINDING_API void InsertComponentEXT(GLuint res, GLuint src, GLuint num);
GLBINDING_API void InsertEventMarkerEXT(GLsizei length, const GLchar * marker);
GLBINDING_API void InstrumentsBufferSGIX(GLsizei size, GLint * buffer);
GLBINDING_API void InterleavedArrays(GLenum format, GLsizei stride, const void * pointer);
GLBINDING_API void InterpolatePathsNV(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight);
GLBINDING_API void InvalidateBufferData(GLuint buffer);
GLBINDING_API void InvalidateBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr length);
GLBINDING_API void InvalidateFramebuffer(GLenum target, GLsizei numAttachments, const GLenum * attachments);
GLBINDING_API void InvalidateSubFramebuffer(GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
GLBINDING_API void InvalidateTexImage(GLuint texture, GLint level);
GLBINDING_API void InvalidateTexSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);
GLBINDING_API GLboolean IsAsyncMarkerSGIX(GLuint marker);
GLBINDING_API GLboolean IsBuffer(GLuint buffer);
GLBINDING_API GLboolean IsBufferARB(GLuint buffer);
GLBINDING_API GLboolean IsBufferResidentNV(GLenum target);
GLBINDING_API GLboolean IsEnabled(GLenum cap);
GLBINDING_API GLboolean IsEnabledIndexedEXT(GLenum target, GLuint index);
GLBINDING_API GLboolean IsEnabledi(GLenum target, GLuint index);
GLBINDING_API GLboolean IsFenceAPPLE(GLuint fence);
GLBINDING_API GLboolean IsFenceNV(GLuint fence);
GLBINDING_API GLboolean IsFramebuffer(GLuint framebuffer);
GLBINDING_API GLboolean IsFramebufferEXT(GLuint framebuffer);
GLBINDING_API GLboolean IsFramebufferOES(GLuint framebuffer);
GLBINDING_API GLboolean IsImageHandleResidentARB(GLuint64 handle);
GLBINDING_API GLboolean IsImageHandleResidentNV(GLuint64 handle);
GLBINDING_API GLboolean IsList(GLuint list);
GLBINDING_API GLboolean IsNameAMD(GLenum identifier, GLuint name);
GLBINDING_API GLboolean IsNamedBufferResidentNV(GLuint buffer);
GLBINDING_API GLboolean IsNamedStringARB(GLint namelen, const GLchar * name);
GLBINDING_API GLboolean IsObjectBufferATI(GLuint buffer);
GLBINDING_API GLboolean IsOcclusionQueryNV(GLuint id);
GLBINDING_API GLboolean IsPathNV(GLuint path);
GLBINDING_API GLboolean IsPointInFillPathNV(GLuint path, GLuint mask, GLfloat x, GLfloat y);
GLBINDING_API GLboolean IsPointInStrokePathNV(GLuint path, GLfloat x, GLfloat y);
GLBINDING_API GLboolean IsProgram(GLuint program);
GLBINDING_API GLboolean IsProgramARB(GLuint program);
GLBINDING_API GLboolean IsProgramNV(GLuint id);
GLBINDING_API GLboolean IsProgramPipeline(GLuint pipeline);
GLBINDING_API GLboolean IsProgramPipelineEXT(GLuint pipeline);
GLBINDING_API GLboolean IsQuery(GLuint id);
GLBINDING_API GLboolean IsQueryARB(GLuint id);
GLBINDING_API GLboolean IsQueryEXT(GLuint id);
GLBINDING_API GLboolean IsRenderbuffer(GLuint renderbuffer);
GLBINDING_API GLboolean IsRenderbufferEXT(GLuint renderbuffer);
GLBINDING_API GLboolean IsRenderbufferOES(GLuint renderbuffer);
GLBINDING_API GLboolean IsSampler(GLuint sampler);
GLBINDING_API GLboolean IsShader(GLuint shader);
GLBINDING_API GLboolean IsSync(GLsync sync);
GLBINDING_API GLboolean IsSyncAPPLE(GLsync sync);
GLBINDING_API GLboolean IsTexture(GLuint texture);
GLBINDING_API GLboolean IsTextureEXT(GLuint texture);
GLBINDING_API GLboolean IsTextureHandleResidentARB(GLuint64 handle);
GLBINDING_API GLboolean IsTextureHandleResidentNV(GLuint64 handle);
GLBINDING_API GLboolean IsTransformFeedback(GLuint id);
GLBINDING_API GLboolean IsTransformFeedbackNV(GLuint id);
GLBINDING_API GLboolean IsVariantEnabledEXT(GLuint id, GLenum cap);
GLBINDING_API GLboolean IsVertexArray(GLuint array);
GLBINDING_API GLboolean IsVertexArrayAPPLE(GLuint array);
GLBINDING_API GLboolean IsVertexArrayOES(GLuint array);
GLBINDING_API GLboolean IsVertexAttribEnabledAPPLE(GLuint index, GLenum pname);
GLBINDING_API void LabelObjectEXT(GLenum type, GLuint object, GLsizei length, const GLchar * label);
GLBINDING_API void LightEnviSGIX(GLenum pname, GLint param);
GLBINDING_API void LightModelf(GLenum pname, GLfloat param);
GLBINDING_API void LightModelfv(GLenum pname, const GLfloat * params);
GLBINDING_API void LightModeli(GLenum pname, GLint param);
GLBINDING_API void LightModeliv(GLenum pname, const GLint * params);
GLBINDING_API void LightModelx(GLenum pname, GLfixed param);
GLBINDING_API void LightModelxOES(GLenum pname, GLfixed param);
GLBINDING_API void LightModelxv(GLenum pname, const GLfixed * param);
GLBINDING_API void LightModelxvOES(GLenum pname, const GLfixed * param);
GLBINDING_API void Lightf(GLenum light, GLenum pname, GLfloat param);
GLBINDING_API void Lightfv(GLenum light, GLenum pname, const GLfloat * params);
GLBINDING_API void Lighti(GLenum light, GLenum pname, GLint param);
GLBINDING_API void Lightiv(GLenum light, GLenum pname, const GLint * params);
GLBINDING_API void Lightx(GLenum light, GLenum pname, GLfixed param);
GLBINDING_API void LightxOES(GLenum light, GLenum pname, GLfixed param);
GLBINDING_API void Lightxv(GLenum light, GLenum pname, const GLfixed * params);
GLBINDING_API void LightxvOES(GLenum light, GLenum pname, const GLfixed * params);
GLBINDING_API void LineStipple(GLint factor, GLushort pattern);
GLBINDING_API void LineWidth(GLfloat width);
GLBINDING_API void LineWidthx(GLfixed width);
GLBINDING_API void LineWidthxOES(GLfixed width);
GLBINDING_API void LinkProgram(GLuint program);
GLBINDING_API void LinkProgramARB(GLhandleARB programObj);
GLBINDING_API void ListBase(GLuint base);
GLBINDING_API void ListParameterfSGIX(GLuint list, GLenum pname, GLfloat param);
GLBINDING_API void ListParameterfvSGIX(GLuint list, GLenum pname, const GLfloat * params);
GLBINDING_API void ListParameteriSGIX(GLuint list, GLenum pname, GLint param);
GLBINDING_API void ListParameterivSGIX(GLuint list, GLenum pname, const GLint * params);
GLBINDING_API void LoadIdentity();
GLBINDING_API void LoadIdentityDeformationMapSGIX(GLbitfield mask);
GLBINDING_API void LoadMatrixd(const GLdouble * m);
GLBINDING_API void LoadMatrixf(const GLfloat * m);
GLBINDING_API void LoadMatrixx(const GLfixed * m);
GLBINDING_API void LoadMatrixxOES(const GLfixed * m);
GLBINDING_API void LoadName(GLuint name);
GLBINDING_API void LoadPaletteFromModelViewMatrixOES();
GLBINDING_API void LoadProgramNV(GLenum target, GLuint id, GLsizei len, const GLubyte * program);
GLBINDING_API void LoadTransposeMatrixd(const GLdouble * m);
GLBINDING_API void LoadTransposeMatrixdARB(const GLdouble * m);
GLBINDING_API void LoadTransposeMatrixf(const GLfloat * m);
GLBINDING_API void LoadTransposeMatrixfARB(const GLfloat * m);
GLBINDING_API void LoadTransposeMatrixxOES(const GLfixed * m);
GLBINDING_API void LockArraysEXT(GLint first, GLsizei count);
GLBINDING_API void LogicOp(GLenum opcode);
GLBINDING_API void MakeBufferNonResidentNV(GLenum target);
GLBINDING_API void MakeBufferResidentNV(GLenum target, GLenum access);
GLBINDING_API void MakeImageHandleNonResidentARB(GLuint64 handle);
GLBINDING_API void MakeImageHandleNonResidentNV(GLuint64 handle);
GLBINDING_API void MakeImageHandleResidentARB(GLuint64 handle, GLenum access);
GLBINDING_API void MakeImageHandleResidentNV(GLuint64 handle, GLenum access);
GLBINDING_API void MakeNamedBufferNonResidentNV(GLuint buffer);
GLBINDING_API void MakeNamedBufferResidentNV(GLuint buffer, GLenum access);
GLBINDING_API void MakeTextureHandleNonResidentARB(GLuint64 handle);
GLBINDING_API void MakeTextureHandleNonResidentNV(GLuint64 handle);
GLBINDING_API void MakeTextureHandleResidentARB(GLuint64 handle);
GLBINDING_API void MakeTextureHandleResidentNV(GLuint64 handle);
GLBINDING_API void Map1d(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
GLBINDING_API void Map1f(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
GLBINDING_API void Map1xOES(GLenum target, GLfixed u1, GLfixed u2, GLint stride, GLint order, GLfixed points);
GLBINDING_API void Map2d(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
GLBINDING_API void Map2f(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
GLBINDING_API void Map2xOES(GLenum target, GLfixed u1, GLfixed u2, GLint ustride, GLint uorder, GLfixed v1, GLfixed v2, GLint vstride, GLint vorder, GLfixed points);
GLBINDING_API void * MapBuffer(GLenum target, GLenum access);
GLBINDING_API void * MapBufferARB(GLenum target, GLenum access);
GLBINDING_API void * MapBufferOES(GLenum target, GLenum access);
GLBINDING_API void * MapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
GLBINDING_API void * MapBufferRangeEXT(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
GLBINDING_API void MapControlPointsNV(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const void * points);
GLBINDING_API void MapGrid1d(GLint un, GLdouble u1, GLdouble u2);
GLBINDING_API void MapGrid1f(GLint un, GLfloat u1, GLfloat u2);
GLBINDING_API void MapGrid1xOES(GLint n, GLfixed u1, GLfixed u2);
GLBINDING_API void MapGrid2d(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2);
GLBINDING_API void MapGrid2f(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2);
GLBINDING_API void MapGrid2xOES(GLint n, GLfixed u1, GLfixed u2, GLfixed v1, GLfixed v2);
GLBINDING_API void * MapNamedBufferEXT(GLuint buffer, GLenum access);
GLBINDING_API void * MapNamedBufferRangeEXT(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
GLBINDING_API void * MapObjectBufferATI(GLuint buffer);
GLBINDING_API void MapParameterfvNV(GLenum target, GLenum pname, const GLfloat * params);
GLBINDING_API void MapParameterivNV(GLenum target, GLenum pname, const GLint * params);
GLBINDING_API void * MapTexture2DINTEL(GLuint texture, GLint level, GLbitfield access, GLint * stride, GLenum * layout);
GLBINDING_API void MapVertexAttrib1dAPPLE(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points);
GLBINDING_API void MapVertexAttrib1fAPPLE(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points);
GLBINDING_API void MapVertexAttrib2dAPPLE(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points);
GLBINDING_API void MapVertexAttrib2fAPPLE(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points);
GLBINDING_API void Materialf(GLenum face, GLenum pname, GLfloat param);
GLBINDING_API void Materialfv(GLenum face, GLenum pname, const GLfloat * params);
GLBINDING_API void Materiali(GLenum face, GLenum pname, GLint param);
GLBINDING_API void Materialiv(GLenum face, GLenum pname, const GLint * params);
GLBINDING_API void Materialx(GLenum face, GLenum pname, GLfixed param);
GLBINDING_API void MaterialxOES(GLenum face, GLenum pname, GLfixed param);
GLBINDING_API void Materialxv(GLenum face, GLenum pname, const GLfixed * param);
GLBINDING_API void MaterialxvOES(GLenum face, GLenum pname, const GLfixed * param);
GLBINDING_API void MatrixFrustumEXT(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLBINDING_API void MatrixIndexPointerARB(GLint size, GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void MatrixIndexPointerOES(GLint size, GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void MatrixIndexubvARB(GLint size, const GLubyte * indices);
GLBINDING_API void MatrixIndexuivARB(GLint size, const GLuint * indices);
GLBINDING_API void MatrixIndexusvARB(GLint size, const GLushort * indices);
GLBINDING_API void MatrixLoadIdentityEXT(GLenum mode);
GLBINDING_API void MatrixLoadTransposedEXT(GLenum mode, const GLdouble * m);
GLBINDING_API void MatrixLoadTransposefEXT(GLenum mode, const GLfloat * m);
GLBINDING_API void MatrixLoaddEXT(GLenum mode, const GLdouble * m);
GLBINDING_API void MatrixLoadfEXT(GLenum mode, const GLfloat * m);
GLBINDING_API void MatrixMode(GLenum mode);
GLBINDING_API void MatrixMultTransposedEXT(GLenum mode, const GLdouble * m);
GLBINDING_API void MatrixMultTransposefEXT(GLenum mode, const GLfloat * m);
GLBINDING_API void MatrixMultdEXT(GLenum mode, const GLdouble * m);
GLBINDING_API void MatrixMultfEXT(GLenum mode, const GLfloat * m);
GLBINDING_API void MatrixOrthoEXT(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLBINDING_API void MatrixPopEXT(GLenum mode);
GLBINDING_API void MatrixPushEXT(GLenum mode);
GLBINDING_API void MatrixRotatedEXT(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
GLBINDING_API void MatrixRotatefEXT(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void MatrixScaledEXT(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
GLBINDING_API void MatrixScalefEXT(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void MatrixTranslatedEXT(GLenum mode, GLdouble x, GLdouble y, GLdouble z);
GLBINDING_API void MatrixTranslatefEXT(GLenum mode, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void MemoryBarrier(GLbitfield barriers);
GLBINDING_API void MemoryBarrierEXT(GLbitfield barriers);
GLBINDING_API void MinSampleShading(GLfloat value);
GLBINDING_API void MinSampleShadingARB(GLfloat value);
GLBINDING_API void Minmax(GLenum target, GLenum internalformat, GLboolean sink);
GLBINDING_API void MinmaxEXT(GLenum target, GLenum internalformat, GLboolean sink);
GLBINDING_API void MultMatrixd(const GLdouble * m);
GLBINDING_API void MultMatrixf(const GLfloat * m);
GLBINDING_API void MultMatrixx(const GLfixed * m);
GLBINDING_API void MultMatrixxOES(const GLfixed * m);
GLBINDING_API void MultTransposeMatrixd(const GLdouble * m);
GLBINDING_API void MultTransposeMatrixdARB(const GLdouble * m);
GLBINDING_API void MultTransposeMatrixf(const GLfloat * m);
GLBINDING_API void MultTransposeMatrixfARB(const GLfloat * m);
GLBINDING_API void MultTransposeMatrixxOES(const GLfixed * m);
GLBINDING_API void MultiDrawArrays(GLenum mode, const GLint * first, const GLsizei * count, GLsizei drawcount);
GLBINDING_API void MultiDrawArraysEXT(GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
GLBINDING_API void MultiDrawArraysIndirect(GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride);
GLBINDING_API void MultiDrawArraysIndirectAMD(GLenum mode, const void * indirect, GLsizei primcount, GLsizei stride);
GLBINDING_API void MultiDrawArraysIndirectBindlessNV(GLenum mode, const void * indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
GLBINDING_API void MultiDrawArraysIndirectCountARB(GLenum mode, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
GLBINDING_API void MultiDrawElementArrayAPPLE(GLenum mode, const GLint * first, const GLsizei * count, GLsizei primcount);
GLBINDING_API void MultiDrawElements(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount);
GLBINDING_API void MultiDrawElementsBaseVertex(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex);
GLBINDING_API void MultiDrawElementsEXT(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount);
GLBINDING_API void MultiDrawElementsIndirect(GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride);
GLBINDING_API void MultiDrawElementsIndirectAMD(GLenum mode, GLenum type, const void * indirect, GLsizei primcount, GLsizei stride);
GLBINDING_API void MultiDrawElementsIndirectBindlessNV(GLenum mode, GLenum type, const void * indirect, GLsizei drawCount, GLsizei stride, GLint vertexBufferCount);
GLBINDING_API void MultiDrawElementsIndirectCountARB(GLenum mode, GLenum type, GLintptr indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride);
GLBINDING_API void MultiDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, const GLint * first, const GLsizei * count, GLsizei primcount);
GLBINDING_API void MultiModeDrawArraysIBM(const GLenum * mode, const GLint * first, const GLsizei * count, GLsizei primcount, GLint modestride);
GLBINDING_API void MultiModeDrawElementsIBM(const GLenum * mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei primcount, GLint modestride);
GLBINDING_API void MultiTexBufferEXT(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);
GLBINDING_API void MultiTexCoord1bOES(GLenum texture, GLbyte s);
GLBINDING_API void MultiTexCoord1bvOES(GLenum texture, const GLbyte * coords);
GLBINDING_API void MultiTexCoord1d(GLenum target, GLdouble s);
GLBINDING_API void MultiTexCoord1dARB(GLenum target, GLdouble s);
GLBINDING_API void MultiTexCoord1dv(GLenum target, const GLdouble * v);
GLBINDING_API void MultiTexCoord1dvARB(GLenum target, const GLdouble * v);
GLBINDING_API void MultiTexCoord1f(GLenum target, GLfloat s);
GLBINDING_API void MultiTexCoord1fARB(GLenum target, GLfloat s);
GLBINDING_API void MultiTexCoord1fv(GLenum target, const GLfloat * v);
GLBINDING_API void MultiTexCoord1fvARB(GLenum target, const GLfloat * v);
GLBINDING_API void MultiTexCoord1hNV(GLenum target, GLhalfNV s);
GLBINDING_API void MultiTexCoord1hvNV(GLenum target, const GLhalfNV * v);
GLBINDING_API void MultiTexCoord1i(GLenum target, GLint s);
GLBINDING_API void MultiTexCoord1iARB(GLenum target, GLint s);
GLBINDING_API void MultiTexCoord1iv(GLenum target, const GLint * v);
GLBINDING_API void MultiTexCoord1ivARB(GLenum target, const GLint * v);
GLBINDING_API void MultiTexCoord1s(GLenum target, GLshort s);
GLBINDING_API void MultiTexCoord1sARB(GLenum target, GLshort s);
GLBINDING_API void MultiTexCoord1sv(GLenum target, const GLshort * v);
GLBINDING_API void MultiTexCoord1svARB(GLenum target, const GLshort * v);
GLBINDING_API void MultiTexCoord1xOES(GLenum texture, GLfixed s);
GLBINDING_API void MultiTexCoord1xvOES(GLenum texture, const GLfixed * coords);
GLBINDING_API void MultiTexCoord2bOES(GLenum texture, GLbyte s, GLbyte t);
GLBINDING_API void MultiTexCoord2bvOES(GLenum texture, const GLbyte * coords);
GLBINDING_API void MultiTexCoord2d(GLenum target, GLdouble s, GLdouble t);
GLBINDING_API void MultiTexCoord2dARB(GLenum target, GLdouble s, GLdouble t);
GLBINDING_API void MultiTexCoord2dv(GLenum target, const GLdouble * v);
GLBINDING_API void MultiTexCoord2dvARB(GLenum target, const GLdouble * v);
GLBINDING_API void MultiTexCoord2f(GLenum target, GLfloat s, GLfloat t);
GLBINDING_API void MultiTexCoord2fARB(GLenum target, GLfloat s, GLfloat t);
GLBINDING_API void MultiTexCoord2fv(GLenum target, const GLfloat * v);
GLBINDING_API void MultiTexCoord2fvARB(GLenum target, const GLfloat * v);
GLBINDING_API void MultiTexCoord2hNV(GLenum target, GLhalfNV s, GLhalfNV t);
GLBINDING_API void MultiTexCoord2hvNV(GLenum target, const GLhalfNV * v);
GLBINDING_API void MultiTexCoord2i(GLenum target, GLint s, GLint t);
GLBINDING_API void MultiTexCoord2iARB(GLenum target, GLint s, GLint t);
GLBINDING_API void MultiTexCoord2iv(GLenum target, const GLint * v);
GLBINDING_API void MultiTexCoord2ivARB(GLenum target, const GLint * v);
GLBINDING_API void MultiTexCoord2s(GLenum target, GLshort s, GLshort t);
GLBINDING_API void MultiTexCoord2sARB(GLenum target, GLshort s, GLshort t);
GLBINDING_API void MultiTexCoord2sv(GLenum target, const GLshort * v);
GLBINDING_API void MultiTexCoord2svARB(GLenum target, const GLshort * v);
GLBINDING_API void MultiTexCoord2xOES(GLenum texture, GLfixed s, GLfixed t);
GLBINDING_API void MultiTexCoord2xvOES(GLenum texture, const GLfixed * coords);
GLBINDING_API void MultiTexCoord3bOES(GLenum texture, GLbyte s, GLbyte t, GLbyte r);
GLBINDING_API void MultiTexCoord3bvOES(GLenum texture, const GLbyte * coords);
GLBINDING_API void MultiTexCoord3d(GLenum target, GLdouble s, GLdouble t, GLdouble r);
GLBINDING_API void MultiTexCoord3dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r);
GLBINDING_API void MultiTexCoord3dv(GLenum target, const GLdouble * v);
GLBINDING_API void MultiTexCoord3dvARB(GLenum target, const GLdouble * v);
GLBINDING_API void MultiTexCoord3f(GLenum target, GLfloat s, GLfloat t, GLfloat r);
GLBINDING_API void MultiTexCoord3fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r);
GLBINDING_API void MultiTexCoord3fv(GLenum target, const GLfloat * v);
GLBINDING_API void MultiTexCoord3fvARB(GLenum target, const GLfloat * v);
GLBINDING_API void MultiTexCoord3hNV(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);
GLBINDING_API void MultiTexCoord3hvNV(GLenum target, const GLhalfNV * v);
GLBINDING_API void MultiTexCoord3i(GLenum target, GLint s, GLint t, GLint r);
GLBINDING_API void MultiTexCoord3iARB(GLenum target, GLint s, GLint t, GLint r);
GLBINDING_API void MultiTexCoord3iv(GLenum target, const GLint * v);
GLBINDING_API void MultiTexCoord3ivARB(GLenum target, const GLint * v);
GLBINDING_API void MultiTexCoord3s(GLenum target, GLshort s, GLshort t, GLshort r);
GLBINDING_API void MultiTexCoord3sARB(GLenum target, GLshort s, GLshort t, GLshort r);
GLBINDING_API void MultiTexCoord3sv(GLenum target, const GLshort * v);
GLBINDING_API void MultiTexCoord3svARB(GLenum target, const GLshort * v);
GLBINDING_API void MultiTexCoord3xOES(GLenum texture, GLfixed s, GLfixed t, GLfixed r);
GLBINDING_API void MultiTexCoord3xvOES(GLenum texture, const GLfixed * coords);
GLBINDING_API void MultiTexCoord4bOES(GLenum texture, GLbyte s, GLbyte t, GLbyte r, GLbyte q);
GLBINDING_API void MultiTexCoord4bvOES(GLenum texture, const GLbyte * coords);
GLBINDING_API void MultiTexCoord4d(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
GLBINDING_API void MultiTexCoord4dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);
GLBINDING_API void MultiTexCoord4dv(GLenum target, const GLdouble * v);
GLBINDING_API void MultiTexCoord4dvARB(GLenum target, const GLdouble * v);
GLBINDING_API void MultiTexCoord4f(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
GLBINDING_API void MultiTexCoord4fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
GLBINDING_API void MultiTexCoord4fv(GLenum target, const GLfloat * v);
GLBINDING_API void MultiTexCoord4fvARB(GLenum target, const GLfloat * v);
GLBINDING_API void MultiTexCoord4hNV(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
GLBINDING_API void MultiTexCoord4hvNV(GLenum target, const GLhalfNV * v);
GLBINDING_API void MultiTexCoord4i(GLenum target, GLint s, GLint t, GLint r, GLint q);
GLBINDING_API void MultiTexCoord4iARB(GLenum target, GLint s, GLint t, GLint r, GLint q);
GLBINDING_API void MultiTexCoord4iv(GLenum target, const GLint * v);
GLBINDING_API void MultiTexCoord4ivARB(GLenum target, const GLint * v);
GLBINDING_API void MultiTexCoord4s(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
GLBINDING_API void MultiTexCoord4sARB(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);
GLBINDING_API void MultiTexCoord4sv(GLenum target, const GLshort * v);
GLBINDING_API void MultiTexCoord4svARB(GLenum target, const GLshort * v);
GLBINDING_API void MultiTexCoord4x(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
GLBINDING_API void MultiTexCoord4xOES(GLenum texture, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
GLBINDING_API void MultiTexCoord4xvOES(GLenum texture, const GLfixed * coords);
GLBINDING_API void MultiTexCoordP1ui(GLenum texture, GLenum type, GLuint coords);
GLBINDING_API void MultiTexCoordP1uiv(GLenum texture, GLenum type, const GLuint * coords);
GLBINDING_API void MultiTexCoordP2ui(GLenum texture, GLenum type, GLuint coords);
GLBINDING_API void MultiTexCoordP2uiv(GLenum texture, GLenum type, const GLuint * coords);
GLBINDING_API void MultiTexCoordP3ui(GLenum texture, GLenum type, GLuint coords);
GLBINDING_API void MultiTexCoordP3uiv(GLenum texture, GLenum type, const GLuint * coords);
GLBINDING_API void MultiTexCoordP4ui(GLenum texture, GLenum type, GLuint coords);
GLBINDING_API void MultiTexCoordP4uiv(GLenum texture, GLenum type, const GLuint * coords);
GLBINDING_API void MultiTexCoordPointerEXT(GLenum texunit, GLint size, GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void MultiTexEnvfEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
GLBINDING_API void MultiTexEnvfvEXT(GLenum texunit, GLenum target, GLenum pname, const GLfloat * params);
GLBINDING_API void MultiTexEnviEXT(GLenum texunit, GLenum target, GLenum pname, GLint param);
GLBINDING_API void MultiTexEnvivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint * params);
GLBINDING_API void MultiTexGendEXT(GLenum texunit, GLenum coord, GLenum pname, GLdouble param);
GLBINDING_API void MultiTexGendvEXT(GLenum texunit, GLenum coord, GLenum pname, const GLdouble * params);
GLBINDING_API void MultiTexGenfEXT(GLenum texunit, GLenum coord, GLenum pname, GLfloat param);
GLBINDING_API void MultiTexGenfvEXT(GLenum texunit, GLenum coord, GLenum pname, const GLfloat * params);
GLBINDING_API void MultiTexGeniEXT(GLenum texunit, GLenum coord, GLenum pname, GLint param);
GLBINDING_API void MultiTexGenivEXT(GLenum texunit, GLenum coord, GLenum pname, const GLint * params);
GLBINDING_API void MultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void MultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void MultiTexImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void MultiTexParameterIivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint * params);
GLBINDING_API void MultiTexParameterIuivEXT(GLenum texunit, GLenum target, GLenum pname, const GLuint * params);
GLBINDING_API void MultiTexParameterfEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat param);
GLBINDING_API void MultiTexParameterfvEXT(GLenum texunit, GLenum target, GLenum pname, const GLfloat * params);
GLBINDING_API void MultiTexParameteriEXT(GLenum texunit, GLenum target, GLenum pname, GLint param);
GLBINDING_API void MultiTexParameterivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint * params);
GLBINDING_API void MultiTexRenderbufferEXT(GLenum texunit, GLenum target, GLuint renderbuffer);
GLBINDING_API void MultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void MultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void MultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void NamedBufferDataEXT(GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
GLBINDING_API void NamedBufferStorageEXT(GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
GLBINDING_API void NamedBufferSubDataEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
GLBINDING_API void NamedCopyBufferSubDataEXT(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
GLBINDING_API void NamedFramebufferParameteriEXT(GLuint framebuffer, GLenum pname, GLint param);
GLBINDING_API void NamedFramebufferRenderbufferEXT(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
GLBINDING_API void NamedFramebufferTexture1DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLBINDING_API void NamedFramebufferTexture2DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
GLBINDING_API void NamedFramebufferTexture3DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
GLBINDING_API void NamedFramebufferTextureEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
GLBINDING_API void NamedFramebufferTextureFaceEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);
GLBINDING_API void NamedFramebufferTextureLayerEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
GLBINDING_API void NamedProgramLocalParameter4dEXT(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLBINDING_API void NamedProgramLocalParameter4dvEXT(GLuint program, GLenum target, GLuint index, const GLdouble * params);
GLBINDING_API void NamedProgramLocalParameter4fEXT(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLBINDING_API void NamedProgramLocalParameter4fvEXT(GLuint program, GLenum target, GLuint index, const GLfloat * params);
GLBINDING_API void NamedProgramLocalParameterI4iEXT(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
GLBINDING_API void NamedProgramLocalParameterI4ivEXT(GLuint program, GLenum target, GLuint index, const GLint * params);
GLBINDING_API void NamedProgramLocalParameterI4uiEXT(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLBINDING_API void NamedProgramLocalParameterI4uivEXT(GLuint program, GLenum target, GLuint index, const GLuint * params);
GLBINDING_API void NamedProgramLocalParameters4fvEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat * params);
GLBINDING_API void NamedProgramLocalParametersI4ivEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLint * params);
GLBINDING_API void NamedProgramLocalParametersI4uivEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint * params);
GLBINDING_API void NamedProgramStringEXT(GLuint program, GLenum target, GLenum format, GLsizei len, const void * string);
GLBINDING_API void NamedRenderbufferStorageEXT(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void NamedRenderbufferStorageMultisampleCoverageEXT(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void NamedRenderbufferStorageMultisampleEXT(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void NamedStringARB(GLenum type, GLint namelen, const GLchar * name, GLint stringlen, const GLchar * string);
GLBINDING_API void NewList(GLuint list, GLenum mode);
GLBINDING_API GLuint NewObjectBufferATI(GLsizei size, const void * pointer, GLenum usage);
GLBINDING_API void Normal3b(GLbyte nx, GLbyte ny, GLbyte nz);
GLBINDING_API void Normal3bv(const GLbyte * v);
GLBINDING_API void Normal3d(GLdouble nx, GLdouble ny, GLdouble nz);
GLBINDING_API void Normal3dv(const GLdouble * v);
GLBINDING_API void Normal3f(GLfloat nx, GLfloat ny, GLfloat nz);
GLBINDING_API void Normal3fVertex3fSUN(GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void Normal3fVertex3fvSUN(const GLfloat * n, const GLfloat * v);
GLBINDING_API void Normal3fv(const GLfloat * v);
GLBINDING_API void Normal3hNV(GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);
GLBINDING_API void Normal3hvNV(const GLhalfNV * v);
GLBINDING_API void Normal3i(GLint nx, GLint ny, GLint nz);
GLBINDING_API void Normal3iv(const GLint * v);
GLBINDING_API void Normal3s(GLshort nx, GLshort ny, GLshort nz);
GLBINDING_API void Normal3sv(const GLshort * v);
GLBINDING_API void Normal3x(GLfixed nx, GLfixed ny, GLfixed nz);
GLBINDING_API void Normal3xOES(GLfixed nx, GLfixed ny, GLfixed nz);
GLBINDING_API void Normal3xvOES(const GLfixed * coords);
GLBINDING_API void NormalFormatNV(GLenum type, GLsizei stride);
GLBINDING_API void NormalP3ui(GLenum type, GLuint coords);
GLBINDING_API void NormalP3uiv(GLenum type, const GLuint * coords);
GLBINDING_API void NormalPointer(GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void NormalPointerEXT(GLenum type, GLsizei stride, GLsizei count, const void * pointer);
GLBINDING_API void NormalPointerListIBM(GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
GLBINDING_API void NormalPointervINTEL(GLenum type, const void ** pointer);
GLBINDING_API void NormalStream3bATI(GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);
GLBINDING_API void NormalStream3bvATI(GLenum stream, const GLbyte * coords);
GLBINDING_API void NormalStream3dATI(GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);
GLBINDING_API void NormalStream3dvATI(GLenum stream, const GLdouble * coords);
GLBINDING_API void NormalStream3fATI(GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);
GLBINDING_API void NormalStream3fvATI(GLenum stream, const GLfloat * coords);
GLBINDING_API void NormalStream3iATI(GLenum stream, GLint nx, GLint ny, GLint nz);
GLBINDING_API void NormalStream3ivATI(GLenum stream, const GLint * coords);
GLBINDING_API void NormalStream3sATI(GLenum stream, GLshort nx, GLshort ny, GLshort nz);
GLBINDING_API void NormalStream3svATI(GLenum stream, const GLshort * coords);
GLBINDING_API void ObjectLabel(GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
GLBINDING_API void ObjectLabelKHR(GLenum identifier, GLuint name, GLsizei length, const GLchar * label);
GLBINDING_API void ObjectPtrLabel(const void * ptr, GLsizei length, const GLchar * label);
GLBINDING_API void ObjectPtrLabelKHR(const void * ptr, GLsizei length, const GLchar * label);
GLBINDING_API GLenum ObjectPurgeableAPPLE(GLenum objectType, GLuint name, GLenum option);
GLBINDING_API GLenum ObjectUnpurgeableAPPLE(GLenum objectType, GLuint name, GLenum option);
GLBINDING_API void Ortho(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);
GLBINDING_API void Orthof(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
GLBINDING_API void OrthofOES(GLfloat l, GLfloat r, GLfloat b, GLfloat t, GLfloat n, GLfloat f);
GLBINDING_API void Orthox(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
GLBINDING_API void OrthoxOES(GLfixed l, GLfixed r, GLfixed b, GLfixed t, GLfixed n, GLfixed f);
GLBINDING_API void PNTrianglesfATI(GLenum pname, GLfloat param);
GLBINDING_API void PNTrianglesiATI(GLenum pname, GLint param);
GLBINDING_API void PassTexCoordATI(GLuint dst, GLuint coord, GLenum swizzle);
GLBINDING_API void PassThrough(GLfloat token);
GLBINDING_API void PassThroughxOES(GLfixed token);
GLBINDING_API void PatchParameterfv(GLenum pname, const GLfloat * values);
GLBINDING_API void PatchParameteri(GLenum pname, GLint value);
GLBINDING_API void PathColorGenNV(GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat * coeffs);
GLBINDING_API void PathCommandsNV(GLuint path, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
GLBINDING_API void PathCoordsNV(GLuint path, GLsizei numCoords, GLenum coordType, const void * coords);
GLBINDING_API void PathCoverDepthFuncNV(GLenum func);
GLBINDING_API void PathDashArrayNV(GLuint path, GLsizei dashCount, const GLfloat * dashArray);
GLBINDING_API void PathFogGenNV(GLenum genMode);
GLBINDING_API void PathGlyphRangeNV(GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLBINDING_API void PathGlyphsNV(GLuint firstPathName, GLenum fontTarget, const void * fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const void * charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale);
GLBINDING_API void PathParameterfNV(GLuint path, GLenum pname, GLfloat value);
GLBINDING_API void PathParameterfvNV(GLuint path, GLenum pname, const GLfloat * value);
GLBINDING_API void PathParameteriNV(GLuint path, GLenum pname, GLint value);
GLBINDING_API void PathParameterivNV(GLuint path, GLenum pname, const GLint * value);
GLBINDING_API void PathStencilDepthOffsetNV(GLfloat factor, GLfloat units);
GLBINDING_API void PathStencilFuncNV(GLenum func, GLint ref, GLuint mask);
GLBINDING_API void PathStringNV(GLuint path, GLenum format, GLsizei length, const void * pathString);
GLBINDING_API void PathSubCommandsNV(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte * commands, GLsizei numCoords, GLenum coordType, const void * coords);
GLBINDING_API void PathSubCoordsNV(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const void * coords);
GLBINDING_API void PathTexGenNV(GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat * coeffs);
GLBINDING_API void PauseTransformFeedback();
GLBINDING_API void PauseTransformFeedbackNV();
GLBINDING_API void PixelDataRangeNV(GLenum target, GLsizei length, const void * pointer);
GLBINDING_API void PixelMapfv(GLenum map, GLsizei mapsize, const GLfloat * values);
GLBINDING_API void PixelMapuiv(GLenum map, GLsizei mapsize, const GLuint * values);
GLBINDING_API void PixelMapusv(GLenum map, GLsizei mapsize, const GLushort * values);
GLBINDING_API void PixelMapx(GLenum map, GLint size, const GLfixed * values);
GLBINDING_API void PixelStoref(GLenum pname, GLfloat param);
GLBINDING_API void PixelStorei(GLenum pname, GLint param);
GLBINDING_API void PixelStorex(GLenum pname, GLfixed param);
GLBINDING_API void PixelTexGenParameterfSGIS(GLenum pname, GLfloat param);
GLBINDING_API void PixelTexGenParameterfvSGIS(GLenum pname, const GLfloat * params);
GLBINDING_API void PixelTexGenParameteriSGIS(GLenum pname, GLint param);
GLBINDING_API void PixelTexGenParameterivSGIS(GLenum pname, const GLint * params);
GLBINDING_API void PixelTexGenSGIX(GLenum mode);
GLBINDING_API void PixelTransferf(GLenum pname, GLfloat param);
GLBINDING_API void PixelTransferi(GLenum pname, GLint param);
GLBINDING_API void PixelTransferxOES(GLenum pname, GLfixed param);
GLBINDING_API void PixelTransformParameterfEXT(GLenum target, GLenum pname, GLfloat param);
GLBINDING_API void PixelTransformParameterfvEXT(GLenum target, GLenum pname, const GLfloat * params);
GLBINDING_API void PixelTransformParameteriEXT(GLenum target, GLenum pname, GLint param);
GLBINDING_API void PixelTransformParameterivEXT(GLenum target, GLenum pname, const GLint * params);
GLBINDING_API void PixelZoom(GLfloat xfactor, GLfloat yfactor);
GLBINDING_API void PixelZoomxOES(GLfixed xfactor, GLfixed yfactor);
GLBINDING_API GLboolean PointAlongPathNV(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat * x, GLfloat * y, GLfloat * tangentX, GLfloat * tangentY);
GLBINDING_API void PointParameterf(GLenum pname, GLfloat param);
GLBINDING_API void PointParameterfARB(GLenum pname, GLfloat param);
GLBINDING_API void PointParameterfEXT(GLenum pname, GLfloat param);
GLBINDING_API void PointParameterfSGIS(GLenum pname, GLfloat param);
GLBINDING_API void PointParameterfv(GLenum pname, const GLfloat * params);
GLBINDING_API void PointParameterfvARB(GLenum pname, const GLfloat * params);
GLBINDING_API void PointParameterfvEXT(GLenum pname, const GLfloat * params);
GLBINDING_API void PointParameterfvSGIS(GLenum pname, const GLfloat * params);
GLBINDING_API void PointParameteri(GLenum pname, GLint param);
GLBINDING_API void PointParameteriNV(GLenum pname, GLint param);
GLBINDING_API void PointParameteriv(GLenum pname, const GLint * params);
GLBINDING_API void PointParameterivNV(GLenum pname, const GLint * params);
GLBINDING_API void PointParameterx(GLenum pname, GLfixed param);
GLBINDING_API void PointParameterxOES(GLenum pname, GLfixed param);
GLBINDING_API void PointParameterxv(GLenum pname, const GLfixed * params);
GLBINDING_API void PointParameterxvOES(GLenum pname, const GLfixed * params);
GLBINDING_API void PointSize(GLfloat size);
GLBINDING_API void PointSizePointerOES(GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void PointSizex(GLfixed size);
GLBINDING_API void PointSizexOES(GLfixed size);
GLBINDING_API GLint PollAsyncSGIX(GLuint * markerp);
GLBINDING_API GLint PollInstrumentsSGIX(GLint * marker_p);
GLBINDING_API void PolygonMode(GLenum face, GLenum mode);
GLBINDING_API void PolygonOffset(GLfloat factor, GLfloat units);
GLBINDING_API void PolygonOffsetEXT(GLfloat factor, GLfloat bias);
GLBINDING_API void PolygonOffsetx(GLfixed factor, GLfixed units);
GLBINDING_API void PolygonOffsetxOES(GLfixed factor, GLfixed units);
GLBINDING_API void PolygonStipple(const GLubyte * mask);
GLBINDING_API void PopAttrib();
GLBINDING_API void PopClientAttrib();
GLBINDING_API void PopDebugGroup();
GLBINDING_API void PopDebugGroupKHR();
GLBINDING_API void PopGroupMarkerEXT();
GLBINDING_API void PopMatrix();
GLBINDING_API void PopName();
GLBINDING_API void PresentFrameDualFillNV(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);
GLBINDING_API void PresentFrameKeyedNV(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);
GLBINDING_API void PrimitiveRestartIndex(GLuint index);
GLBINDING_API void PrimitiveRestartIndexNV(GLuint index);
GLBINDING_API void PrimitiveRestartNV();
GLBINDING_API void PrioritizeTextures(GLsizei n, const GLuint * textures, const GLfloat * priorities);
GLBINDING_API void PrioritizeTexturesEXT(GLsizei n, const GLuint * textures, const GLclampf * priorities);
GLBINDING_API void PrioritizeTexturesxOES(GLsizei n, const GLuint * textures, const GLfixed * priorities);
GLBINDING_API void ProgramBinary(GLuint program, GLenum binaryFormat, const void * binary, GLsizei length);
GLBINDING_API void ProgramBinaryOES(GLuint program, GLenum binaryFormat, const void * binary, GLint length);
GLBINDING_API void ProgramBufferParametersIivNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLint * params);
GLBINDING_API void ProgramBufferParametersIuivNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLuint * params);
GLBINDING_API void ProgramBufferParametersfvNV(GLenum target, GLuint bindingIndex, GLuint wordIndex, GLsizei count, const GLfloat * params);
GLBINDING_API void ProgramEnvParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLBINDING_API void ProgramEnvParameter4dvARB(GLenum target, GLuint index, const GLdouble * params);
GLBINDING_API void ProgramEnvParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLBINDING_API void ProgramEnvParameter4fvARB(GLenum target, GLuint index, const GLfloat * params);
GLBINDING_API void ProgramEnvParameterI4iNV(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
GLBINDING_API void ProgramEnvParameterI4ivNV(GLenum target, GLuint index, const GLint * params);
GLBINDING_API void ProgramEnvParameterI4uiNV(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLBINDING_API void ProgramEnvParameterI4uivNV(GLenum target, GLuint index, const GLuint * params);
GLBINDING_API void ProgramEnvParameters4fvEXT(GLenum target, GLuint index, GLsizei count, const GLfloat * params);
GLBINDING_API void ProgramEnvParametersI4ivNV(GLenum target, GLuint index, GLsizei count, const GLint * params);
GLBINDING_API void ProgramEnvParametersI4uivNV(GLenum target, GLuint index, GLsizei count, const GLuint * params);
GLBINDING_API void ProgramLocalParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLBINDING_API void ProgramLocalParameter4dvARB(GLenum target, GLuint index, const GLdouble * params);
GLBINDING_API void ProgramLocalParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLBINDING_API void ProgramLocalParameter4fvARB(GLenum target, GLuint index, const GLfloat * params);
GLBINDING_API void ProgramLocalParameterI4iNV(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);
GLBINDING_API void ProgramLocalParameterI4ivNV(GLenum target, GLuint index, const GLint * params);
GLBINDING_API void ProgramLocalParameterI4uiNV(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLBINDING_API void ProgramLocalParameterI4uivNV(GLenum target, GLuint index, const GLuint * params);
GLBINDING_API void ProgramLocalParameters4fvEXT(GLenum target, GLuint index, GLsizei count, const GLfloat * params);
GLBINDING_API void ProgramLocalParametersI4ivNV(GLenum target, GLuint index, GLsizei count, const GLint * params);
GLBINDING_API void ProgramLocalParametersI4uivNV(GLenum target, GLuint index, GLsizei count, const GLuint * params);
GLBINDING_API void ProgramNamedParameter4dNV(GLuint id, GLsizei len, const GLubyte * name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLBINDING_API void ProgramNamedParameter4dvNV(GLuint id, GLsizei len, const GLubyte * name, const GLdouble * v);
GLBINDING_API void ProgramNamedParameter4fNV(GLuint id, GLsizei len, const GLubyte * name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLBINDING_API void ProgramNamedParameter4fvNV(GLuint id, GLsizei len, const GLubyte * name, const GLfloat * v);
GLBINDING_API void ProgramParameter4dNV(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLBINDING_API void ProgramParameter4dvNV(GLenum target, GLuint index, const GLdouble * v);
GLBINDING_API void ProgramParameter4fNV(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLBINDING_API void ProgramParameter4fvNV(GLenum target, GLuint index, const GLfloat * v);
GLBINDING_API void ProgramParameteri(GLuint program, GLenum pname, GLint value);
GLBINDING_API void ProgramParameteriARB(GLuint program, GLenum pname, GLint value);
GLBINDING_API void ProgramParameteriEXT(GLuint program, GLenum pname, GLint value);
GLBINDING_API void ProgramParameters4dvNV(GLenum target, GLuint index, GLsizei count, const GLdouble * v);
GLBINDING_API void ProgramParameters4fvNV(GLenum target, GLuint index, GLsizei count, const GLfloat * v);
GLBINDING_API void ProgramStringARB(GLenum target, GLenum format, GLsizei len, const void * string);
GLBINDING_API void ProgramSubroutineParametersuivNV(GLenum target, GLsizei count, const GLuint * params);
GLBINDING_API void ProgramUniform1d(GLuint program, GLint location, GLdouble v0);
GLBINDING_API void ProgramUniform1dEXT(GLuint program, GLint location, GLdouble x);
GLBINDING_API void ProgramUniform1dv(GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLBINDING_API void ProgramUniform1dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLBINDING_API void ProgramUniform1f(GLuint program, GLint location, GLfloat v0);
GLBINDING_API void ProgramUniform1fEXT(GLuint program, GLint location, GLfloat v0);
GLBINDING_API void ProgramUniform1fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void ProgramUniform1fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void ProgramUniform1i(GLuint program, GLint location, GLint v0);
GLBINDING_API void ProgramUniform1i64NV(GLuint program, GLint location, GLint64EXT x);
GLBINDING_API void ProgramUniform1i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
GLBINDING_API void ProgramUniform1iEXT(GLuint program, GLint location, GLint v0);
GLBINDING_API void ProgramUniform1iv(GLuint program, GLint location, GLsizei count, const GLint * value);
GLBINDING_API void ProgramUniform1ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
GLBINDING_API void ProgramUniform1ui(GLuint program, GLint location, GLuint v0);
GLBINDING_API void ProgramUniform1ui64NV(GLuint program, GLint location, GLuint64EXT x);
GLBINDING_API void ProgramUniform1ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
GLBINDING_API void ProgramUniform1uiEXT(GLuint program, GLint location, GLuint v0);
GLBINDING_API void ProgramUniform1uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void ProgramUniform1uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void ProgramUniform2d(GLuint program, GLint location, GLdouble v0, GLdouble v1);
GLBINDING_API void ProgramUniform2dEXT(GLuint program, GLint location, GLdouble x, GLdouble y);
GLBINDING_API void ProgramUniform2dv(GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLBINDING_API void ProgramUniform2dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLBINDING_API void ProgramUniform2f(GLuint program, GLint location, GLfloat v0, GLfloat v1);
GLBINDING_API void ProgramUniform2fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1);
GLBINDING_API void ProgramUniform2fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void ProgramUniform2fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void ProgramUniform2i(GLuint program, GLint location, GLint v0, GLint v1);
GLBINDING_API void ProgramUniform2i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y);
GLBINDING_API void ProgramUniform2i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
GLBINDING_API void ProgramUniform2iEXT(GLuint program, GLint location, GLint v0, GLint v1);
GLBINDING_API void ProgramUniform2iv(GLuint program, GLint location, GLsizei count, const GLint * value);
GLBINDING_API void ProgramUniform2ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
GLBINDING_API void ProgramUniform2ui(GLuint program, GLint location, GLuint v0, GLuint v1);
GLBINDING_API void ProgramUniform2ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);
GLBINDING_API void ProgramUniform2ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
GLBINDING_API void ProgramUniform2uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1);
GLBINDING_API void ProgramUniform2uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void ProgramUniform2uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void ProgramUniform3d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);
GLBINDING_API void ProgramUniform3dEXT(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);
GLBINDING_API void ProgramUniform3dv(GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLBINDING_API void ProgramUniform3dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLBINDING_API void ProgramUniform3f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLBINDING_API void ProgramUniform3fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLBINDING_API void ProgramUniform3fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void ProgramUniform3fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void ProgramUniform3i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
GLBINDING_API void ProgramUniform3i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
GLBINDING_API void ProgramUniform3i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
GLBINDING_API void ProgramUniform3iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
GLBINDING_API void ProgramUniform3iv(GLuint program, GLint location, GLsizei count, const GLint * value);
GLBINDING_API void ProgramUniform3ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
GLBINDING_API void ProgramUniform3ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
GLBINDING_API void ProgramUniform3ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
GLBINDING_API void ProgramUniform3ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
GLBINDING_API void ProgramUniform3uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);
GLBINDING_API void ProgramUniform3uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void ProgramUniform3uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void ProgramUniform4d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);
GLBINDING_API void ProgramUniform4dEXT(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLBINDING_API void ProgramUniform4dv(GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLBINDING_API void ProgramUniform4dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble * value);
GLBINDING_API void ProgramUniform4f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLBINDING_API void ProgramUniform4fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLBINDING_API void ProgramUniform4fv(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void ProgramUniform4fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void ProgramUniform4i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLBINDING_API void ProgramUniform4i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
GLBINDING_API void ProgramUniform4i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT * value);
GLBINDING_API void ProgramUniform4iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLBINDING_API void ProgramUniform4iv(GLuint program, GLint location, GLsizei count, const GLint * value);
GLBINDING_API void ProgramUniform4ivEXT(GLuint program, GLint location, GLsizei count, const GLint * value);
GLBINDING_API void ProgramUniform4ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLBINDING_API void ProgramUniform4ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
GLBINDING_API void ProgramUniform4ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
GLBINDING_API void ProgramUniform4uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLBINDING_API void ProgramUniform4uiv(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void ProgramUniform4uivEXT(GLuint program, GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void ProgramUniformHandleui64ARB(GLuint program, GLint location, GLuint64 value);
GLBINDING_API void ProgramUniformHandleui64NV(GLuint program, GLint location, GLuint64 value);
GLBINDING_API void ProgramUniformHandleui64vARB(GLuint program, GLint location, GLsizei count, const GLuint64 * values);
GLBINDING_API void ProgramUniformHandleui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64 * values);
GLBINDING_API void ProgramUniformMatrix2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void ProgramUniformMatrix2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void ProgramUniformMatrix2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void ProgramUniformMatrix2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void ProgramUniformMatrix2x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void ProgramUniformMatrix2x3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void ProgramUniformMatrix2x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void ProgramUniformMatrix2x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void ProgramUniformMatrix2x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void ProgramUniformMatrix2x4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void ProgramUniformMatrix2x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void ProgramUniformMatrix2x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void ProgramUniformMatrix3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void ProgramUniformMatrix3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void ProgramUniformMatrix3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void ProgramUniformMatrix3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void ProgramUniformMatrix3x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void ProgramUniformMatrix3x2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void ProgramUniformMatrix3x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void ProgramUniformMatrix3x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void ProgramUniformMatrix3x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void ProgramUniformMatrix3x4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void ProgramUniformMatrix3x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void ProgramUniformMatrix3x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void ProgramUniformMatrix4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void ProgramUniformMatrix4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void ProgramUniformMatrix4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void ProgramUniformMatrix4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void ProgramUniformMatrix4x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void ProgramUniformMatrix4x2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void ProgramUniformMatrix4x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void ProgramUniformMatrix4x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void ProgramUniformMatrix4x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void ProgramUniformMatrix4x3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void ProgramUniformMatrix4x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void ProgramUniformMatrix4x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void ProgramUniformui64NV(GLuint program, GLint location, GLuint64EXT value);
GLBINDING_API void ProgramUniformui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT * value);
GLBINDING_API void ProgramVertexLimitNV(GLenum target, GLint limit);
GLBINDING_API void ProvokingVertex(GLenum mode);
GLBINDING_API void ProvokingVertexEXT(GLenum mode);
GLBINDING_API void PushAttrib(GLbitfield mask);
GLBINDING_API void PushClientAttrib(GLbitfield mask);
GLBINDING_API void PushClientAttribDefaultEXT(GLbitfield mask);
GLBINDING_API void PushDebugGroup(GLenum source, GLuint id, GLsizei length, const GLchar * message);
GLBINDING_API void PushDebugGroupKHR(GLenum source, GLuint id, GLsizei length, const GLchar * message);
GLBINDING_API void PushGroupMarkerEXT(GLsizei length, const GLchar * marker);
GLBINDING_API void PushMatrix();
GLBINDING_API void PushName(GLuint name);
GLBINDING_API void QueryCounter(GLuint id, GLenum target);
GLBINDING_API void QueryCounterEXT(GLuint id, GLenum target);
GLBINDING_API GLbitfield QueryMatrixxOES(GLfixed * mantissa, GLint * exponent);
GLBINDING_API void QueryObjectParameteruiAMD(GLenum target, GLuint id, GLenum pname, GLuint param);
GLBINDING_API void RasterPos2d(GLdouble x, GLdouble y);
GLBINDING_API void RasterPos2dv(const GLdouble * v);
GLBINDING_API void RasterPos2f(GLfloat x, GLfloat y);
GLBINDING_API void RasterPos2fv(const GLfloat * v);
GLBINDING_API void RasterPos2i(GLint x, GLint y);
GLBINDING_API void RasterPos2iv(const GLint * v);
GLBINDING_API void RasterPos2s(GLshort x, GLshort y);
GLBINDING_API void RasterPos2sv(const GLshort * v);
GLBINDING_API void RasterPos2xOES(GLfixed x, GLfixed y);
GLBINDING_API void RasterPos2xvOES(const GLfixed * coords);
GLBINDING_API void RasterPos3d(GLdouble x, GLdouble y, GLdouble z);
GLBINDING_API void RasterPos3dv(const GLdouble * v);
GLBINDING_API void RasterPos3f(GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void RasterPos3fv(const GLfloat * v);
GLBINDING_API void RasterPos3i(GLint x, GLint y, GLint z);
GLBINDING_API void RasterPos3iv(const GLint * v);
GLBINDING_API void RasterPos3s(GLshort x, GLshort y, GLshort z);
GLBINDING_API void RasterPos3sv(const GLshort * v);
GLBINDING_API void RasterPos3xOES(GLfixed x, GLfixed y, GLfixed z);
GLBINDING_API void RasterPos3xvOES(const GLfixed * coords);
GLBINDING_API void RasterPos4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLBINDING_API void RasterPos4dv(const GLdouble * v);
GLBINDING_API void RasterPos4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLBINDING_API void RasterPos4fv(const GLfloat * v);
GLBINDING_API void RasterPos4i(GLint x, GLint y, GLint z, GLint w);
GLBINDING_API void RasterPos4iv(const GLint * v);
GLBINDING_API void RasterPos4s(GLshort x, GLshort y, GLshort z, GLshort w);
GLBINDING_API void RasterPos4sv(const GLshort * v);
GLBINDING_API void RasterPos4xOES(GLfixed x, GLfixed y, GLfixed z, GLfixed w);
GLBINDING_API void RasterPos4xvOES(const GLfixed * coords);
GLBINDING_API void ReadBuffer(GLenum mode);
GLBINDING_API void ReadBufferIndexedEXT(GLenum src, GLint index);
GLBINDING_API void ReadBufferNV(GLenum mode);
GLBINDING_API void ReadInstrumentsSGIX(GLint marker);
GLBINDING_API void ReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels);
GLBINDING_API void ReadnPixelsARB(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
GLBINDING_API void ReadnPixelsEXT(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
GLBINDING_API void Rectd(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2);
GLBINDING_API void Rectdv(const GLdouble * v1, const GLdouble * v2);
GLBINDING_API void Rectf(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2);
GLBINDING_API void Rectfv(const GLfloat * v1, const GLfloat * v2);
GLBINDING_API void Recti(GLint x1, GLint y1, GLint x2, GLint y2);
GLBINDING_API void Rectiv(const GLint * v1, const GLint * v2);
GLBINDING_API void Rects(GLshort x1, GLshort y1, GLshort x2, GLshort y2);
GLBINDING_API void Rectsv(const GLshort * v1, const GLshort * v2);
GLBINDING_API void RectxOES(GLfixed x1, GLfixed y1, GLfixed x2, GLfixed y2);
GLBINDING_API void RectxvOES(const GLfixed * v1, const GLfixed * v2);
GLBINDING_API void ReferencePlaneSGIX(const GLdouble * equation);
GLBINDING_API void ReleaseShaderCompiler();
GLBINDING_API GLint RenderMode(GLenum mode);
GLBINDING_API void RenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void RenderbufferStorageEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void RenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void RenderbufferStorageMultisampleANGLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void RenderbufferStorageMultisampleAPPLE(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void RenderbufferStorageMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void RenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void RenderbufferStorageMultisampleIMG(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void RenderbufferStorageMultisampleNV(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void RenderbufferStorageOES(GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void ReplacementCodePointerSUN(GLenum type, GLsizei stride, const void ** pointer);
GLBINDING_API void ReplacementCodeubSUN(GLubyte code);
GLBINDING_API void ReplacementCodeubvSUN(const GLubyte * code);
GLBINDING_API void ReplacementCodeuiColor3fVertex3fSUN(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void ReplacementCodeuiColor3fVertex3fvSUN(const GLuint * rc, const GLfloat * c, const GLfloat * v);
GLBINDING_API void ReplacementCodeuiColor4fNormal3fVertex3fSUN(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void ReplacementCodeuiColor4fNormal3fVertex3fvSUN(const GLuint * rc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
GLBINDING_API void ReplacementCodeuiColor4ubVertex3fSUN(GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void ReplacementCodeuiColor4ubVertex3fvSUN(const GLuint * rc, const GLubyte * c, const GLfloat * v);
GLBINDING_API void ReplacementCodeuiNormal3fVertex3fSUN(GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void ReplacementCodeuiNormal3fVertex3fvSUN(const GLuint * rc, const GLfloat * n, const GLfloat * v);
GLBINDING_API void ReplacementCodeuiSUN(GLuint code);
GLBINDING_API void ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void ReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(const GLuint * rc, const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
GLBINDING_API void ReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void ReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(const GLuint * rc, const GLfloat * tc, const GLfloat * n, const GLfloat * v);
GLBINDING_API void ReplacementCodeuiTexCoord2fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void ReplacementCodeuiTexCoord2fVertex3fvSUN(const GLuint * rc, const GLfloat * tc, const GLfloat * v);
GLBINDING_API void ReplacementCodeuiVertex3fSUN(GLuint rc, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void ReplacementCodeuiVertex3fvSUN(const GLuint * rc, const GLfloat * v);
GLBINDING_API void ReplacementCodeuivSUN(const GLuint * code);
GLBINDING_API void ReplacementCodeusSUN(GLushort code);
GLBINDING_API void ReplacementCodeusvSUN(const GLushort * code);
GLBINDING_API void RequestResidentProgramsNV(GLsizei n, const GLuint * programs);
GLBINDING_API void ResetHistogram(GLenum target);
GLBINDING_API void ResetHistogramEXT(GLenum target);
GLBINDING_API void ResetMinmax(GLenum target);
GLBINDING_API void ResetMinmaxEXT(GLenum target);
GLBINDING_API void ResizeBuffersMESA();
GLBINDING_API void ResolveMultisampleFramebufferAPPLE();
GLBINDING_API void ResumeTransformFeedback();
GLBINDING_API void ResumeTransformFeedbackNV();
GLBINDING_API void Rotated(GLdouble angle, GLdouble x, GLdouble y, GLdouble z);
GLBINDING_API void Rotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void Rotatex(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
GLBINDING_API void RotatexOES(GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
GLBINDING_API void SampleCoverage(GLfloat value, GLboolean invert);
GLBINDING_API void SampleCoverageARB(GLfloat value, GLboolean invert);
GLBINDING_API void SampleCoverageOES(GLfixed value, GLboolean invert);
GLBINDING_API void SampleCoveragex(GLclampx value, GLboolean invert);
GLBINDING_API void SampleCoveragexOES(GLclampx value, GLboolean invert);
GLBINDING_API void SampleMapATI(GLuint dst, GLuint interp, GLenum swizzle);
GLBINDING_API void SampleMaskEXT(GLclampf value, GLboolean invert);
GLBINDING_API void SampleMaskIndexedNV(GLuint index, GLbitfield mask);
GLBINDING_API void SampleMaskSGIS(GLclampf value, GLboolean invert);
GLBINDING_API void SampleMaski(GLuint maskNumber, GLbitfield mask);
GLBINDING_API void SamplePatternEXT(GLenum pattern);
GLBINDING_API void SamplePatternSGIS(GLenum pattern);
GLBINDING_API void SamplerParameterIiv(GLuint sampler, GLenum pname, const GLint * param);
GLBINDING_API void SamplerParameterIuiv(GLuint sampler, GLenum pname, const GLuint * param);
GLBINDING_API void SamplerParameterf(GLuint sampler, GLenum pname, GLfloat param);
GLBINDING_API void SamplerParameterfv(GLuint sampler, GLenum pname, const GLfloat * param);
GLBINDING_API void SamplerParameteri(GLuint sampler, GLenum pname, GLint param);
GLBINDING_API void SamplerParameteriv(GLuint sampler, GLenum pname, const GLint * param);
GLBINDING_API void Scaled(GLdouble x, GLdouble y, GLdouble z);
GLBINDING_API void Scalef(GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void Scalex(GLfixed x, GLfixed y, GLfixed z);
GLBINDING_API void ScalexOES(GLfixed x, GLfixed y, GLfixed z);
GLBINDING_API void Scissor(GLint x, GLint y, GLsizei width, GLsizei height);
GLBINDING_API void ScissorArrayv(GLuint first, GLsizei count, const GLint * v);
GLBINDING_API void ScissorIndexed(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);
GLBINDING_API void ScissorIndexedv(GLuint index, const GLint * v);
GLBINDING_API void SecondaryColor3b(GLbyte red, GLbyte green, GLbyte blue);
GLBINDING_API void SecondaryColor3bEXT(GLbyte red, GLbyte green, GLbyte blue);
GLBINDING_API void SecondaryColor3bv(const GLbyte * v);
GLBINDING_API void SecondaryColor3bvEXT(const GLbyte * v);
GLBINDING_API void SecondaryColor3d(GLdouble red, GLdouble green, GLdouble blue);
GLBINDING_API void SecondaryColor3dEXT(GLdouble red, GLdouble green, GLdouble blue);
GLBINDING_API void SecondaryColor3dv(const GLdouble * v);
GLBINDING_API void SecondaryColor3dvEXT(const GLdouble * v);
GLBINDING_API void SecondaryColor3f(GLfloat red, GLfloat green, GLfloat blue);
GLBINDING_API void SecondaryColor3fEXT(GLfloat red, GLfloat green, GLfloat blue);
GLBINDING_API void SecondaryColor3fv(const GLfloat * v);
GLBINDING_API void SecondaryColor3fvEXT(const GLfloat * v);
GLBINDING_API void SecondaryColor3hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue);
GLBINDING_API void SecondaryColor3hvNV(const GLhalfNV * v);
GLBINDING_API void SecondaryColor3i(GLint red, GLint green, GLint blue);
GLBINDING_API void SecondaryColor3iEXT(GLint red, GLint green, GLint blue);
GLBINDING_API void SecondaryColor3iv(const GLint * v);
GLBINDING_API void SecondaryColor3ivEXT(const GLint * v);
GLBINDING_API void SecondaryColor3s(GLshort red, GLshort green, GLshort blue);
GLBINDING_API void SecondaryColor3sEXT(GLshort red, GLshort green, GLshort blue);
GLBINDING_API void SecondaryColor3sv(const GLshort * v);
GLBINDING_API void SecondaryColor3svEXT(const GLshort * v);
GLBINDING_API void SecondaryColor3ub(GLubyte red, GLubyte green, GLubyte blue);
GLBINDING_API void SecondaryColor3ubEXT(GLubyte red, GLubyte green, GLubyte blue);
GLBINDING_API void SecondaryColor3ubv(const GLubyte * v);
GLBINDING_API void SecondaryColor3ubvEXT(const GLubyte * v);
GLBINDING_API void SecondaryColor3ui(GLuint red, GLuint green, GLuint blue);
GLBINDING_API void SecondaryColor3uiEXT(GLuint red, GLuint green, GLuint blue);
GLBINDING_API void SecondaryColor3uiv(const GLuint * v);
GLBINDING_API void SecondaryColor3uivEXT(const GLuint * v);
GLBINDING_API void SecondaryColor3us(GLushort red, GLushort green, GLushort blue);
GLBINDING_API void SecondaryColor3usEXT(GLushort red, GLushort green, GLushort blue);
GLBINDING_API void SecondaryColor3usv(const GLushort * v);
GLBINDING_API void SecondaryColor3usvEXT(const GLushort * v);
GLBINDING_API void SecondaryColorFormatNV(GLint size, GLenum type, GLsizei stride);
GLBINDING_API void SecondaryColorP3ui(GLenum type, GLuint color);
GLBINDING_API void SecondaryColorP3uiv(GLenum type, const GLuint * color);
GLBINDING_API void SecondaryColorPointer(GLint size, GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void SecondaryColorPointerEXT(GLint size, GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void SecondaryColorPointerListIBM(GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
GLBINDING_API void SelectBuffer(GLsizei size, GLuint * buffer);
GLBINDING_API void SelectPerfMonitorCountersAMD(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint * counterList);
GLBINDING_API void SeparableFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * row, const void * column);
GLBINDING_API void SeparableFilter2DEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * row, const void * column);
GLBINDING_API void SetFenceAPPLE(GLuint fence);
GLBINDING_API void SetFenceNV(GLuint fence, GLenum condition);
GLBINDING_API void SetFragmentShaderConstantATI(GLuint dst, const GLfloat * value);
GLBINDING_API void SetInvariantEXT(GLuint id, GLenum type, const void * addr);
GLBINDING_API void SetLocalConstantEXT(GLuint id, GLenum type, const void * addr);
GLBINDING_API void SetMultisamplefvAMD(GLenum pname, GLuint index, const GLfloat * val);
GLBINDING_API void ShadeModel(GLenum mode);
GLBINDING_API void ShaderBinary(GLsizei count, const GLuint * shaders, GLenum binaryformat, const void * binary, GLsizei length);
GLBINDING_API void ShaderOp1EXT(GLenum op, GLuint res, GLuint arg1);
GLBINDING_API void ShaderOp2EXT(GLenum op, GLuint res, GLuint arg1, GLuint arg2);
GLBINDING_API void ShaderOp3EXT(GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);
GLBINDING_API void ShaderSource(GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length);
GLBINDING_API void ShaderSourceARB(GLhandleARB shaderObj, GLsizei count, const GLcharARB ** string, const GLint * length);
GLBINDING_API void ShaderStorageBlockBinding(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);
GLBINDING_API void SharpenTexFuncSGIS(GLenum target, GLsizei n, const GLfloat * points);
GLBINDING_API void SpriteParameterfSGIX(GLenum pname, GLfloat param);
GLBINDING_API void SpriteParameterfvSGIX(GLenum pname, const GLfloat * params);
GLBINDING_API void SpriteParameteriSGIX(GLenum pname, GLint param);
GLBINDING_API void SpriteParameterivSGIX(GLenum pname, const GLint * params);
GLBINDING_API void StartInstrumentsSGIX();
GLBINDING_API void StartTilingQCOM(GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask);
GLBINDING_API void StencilClearTagEXT(GLsizei stencilTagBits, GLuint stencilClearTag);
GLBINDING_API void StencilFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat * transformValues);
GLBINDING_API void StencilFillPathNV(GLuint path, GLenum fillMode, GLuint mask);
GLBINDING_API void StencilFunc(GLenum func, GLint ref, GLuint mask);
GLBINDING_API void StencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask);
GLBINDING_API void StencilFuncSeparateATI(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);
GLBINDING_API void StencilMask(GLuint mask);
GLBINDING_API void StencilMaskSeparate(GLenum face, GLuint mask);
GLBINDING_API void StencilOp(GLenum fail, GLenum zfail, GLenum zpass);
GLBINDING_API void StencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
GLBINDING_API void StencilOpSeparateATI(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
GLBINDING_API void StencilOpValueAMD(GLenum face, GLuint value);
GLBINDING_API void StencilStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const void * paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat * transformValues);
GLBINDING_API void StencilStrokePathNV(GLuint path, GLint reference, GLuint mask);
GLBINDING_API void StopInstrumentsSGIX(GLint marker);
GLBINDING_API void StringMarkerGREMEDY(GLsizei len, const void * string);
GLBINDING_API void SwizzleEXT(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);
GLBINDING_API void SyncTextureINTEL(GLuint texture);
GLBINDING_API void TagSampleBufferSGIX();
GLBINDING_API void Tangent3bEXT(GLbyte tx, GLbyte ty, GLbyte tz);
GLBINDING_API void Tangent3bvEXT(const GLbyte * v);
GLBINDING_API void Tangent3dEXT(GLdouble tx, GLdouble ty, GLdouble tz);
GLBINDING_API void Tangent3dvEXT(const GLdouble * v);
GLBINDING_API void Tangent3fEXT(GLfloat tx, GLfloat ty, GLfloat tz);
GLBINDING_API void Tangent3fvEXT(const GLfloat * v);
GLBINDING_API void Tangent3iEXT(GLint tx, GLint ty, GLint tz);
GLBINDING_API void Tangent3ivEXT(const GLint * v);
GLBINDING_API void Tangent3sEXT(GLshort tx, GLshort ty, GLshort tz);
GLBINDING_API void Tangent3svEXT(const GLshort * v);
GLBINDING_API void TangentPointerEXT(GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void TbufferMask3DFX(GLuint mask);
GLBINDING_API void TessellationFactorAMD(GLfloat factor);
GLBINDING_API void TessellationModeAMD(GLenum mode);
GLBINDING_API GLboolean TestFenceAPPLE(GLuint fence);
GLBINDING_API GLboolean TestFenceNV(GLuint fence);
GLBINDING_API GLboolean TestObjectAPPLE(GLenum object, GLuint name);
GLBINDING_API void TexBuffer(GLenum target, GLenum internalformat, GLuint buffer);
GLBINDING_API void TexBufferARB(GLenum target, GLenum internalformat, GLuint buffer);
GLBINDING_API void TexBufferEXT(GLenum target, GLenum internalformat, GLuint buffer);
GLBINDING_API void TexBufferRange(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLBINDING_API void TexBumpParameterfvATI(GLenum pname, const GLfloat * param);
GLBINDING_API void TexBumpParameterivATI(GLenum pname, const GLint * param);
GLBINDING_API void TexCoord1bOES(GLbyte s);
GLBINDING_API void TexCoord1bvOES(const GLbyte * coords);
GLBINDING_API void TexCoord1d(GLdouble s);
GLBINDING_API void TexCoord1dv(const GLdouble * v);
GLBINDING_API void TexCoord1f(GLfloat s);
GLBINDING_API void TexCoord1fv(const GLfloat * v);
GLBINDING_API void TexCoord1hNV(GLhalfNV s);
GLBINDING_API void TexCoord1hvNV(const GLhalfNV * v);
GLBINDING_API void TexCoord1i(GLint s);
GLBINDING_API void TexCoord1iv(const GLint * v);
GLBINDING_API void TexCoord1s(GLshort s);
GLBINDING_API void TexCoord1sv(const GLshort * v);
GLBINDING_API void TexCoord1xOES(GLfixed s);
GLBINDING_API void TexCoord1xvOES(const GLfixed * coords);
GLBINDING_API void TexCoord2bOES(GLbyte s, GLbyte t);
GLBINDING_API void TexCoord2bvOES(const GLbyte * coords);
GLBINDING_API void TexCoord2d(GLdouble s, GLdouble t);
GLBINDING_API void TexCoord2dv(const GLdouble * v);
GLBINDING_API void TexCoord2f(GLfloat s, GLfloat t);
GLBINDING_API void TexCoord2fColor3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void TexCoord2fColor3fVertex3fvSUN(const GLfloat * tc, const GLfloat * c, const GLfloat * v);
GLBINDING_API void TexCoord2fColor4fNormal3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void TexCoord2fColor4fNormal3fVertex3fvSUN(const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
GLBINDING_API void TexCoord2fColor4ubVertex3fSUN(GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void TexCoord2fColor4ubVertex3fvSUN(const GLfloat * tc, const GLubyte * c, const GLfloat * v);
GLBINDING_API void TexCoord2fNormal3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void TexCoord2fNormal3fVertex3fvSUN(const GLfloat * tc, const GLfloat * n, const GLfloat * v);
GLBINDING_API void TexCoord2fVertex3fSUN(GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void TexCoord2fVertex3fvSUN(const GLfloat * tc, const GLfloat * v);
GLBINDING_API void TexCoord2fv(const GLfloat * v);
GLBINDING_API void TexCoord2hNV(GLhalfNV s, GLhalfNV t);
GLBINDING_API void TexCoord2hvNV(const GLhalfNV * v);
GLBINDING_API void TexCoord2i(GLint s, GLint t);
GLBINDING_API void TexCoord2iv(const GLint * v);
GLBINDING_API void TexCoord2s(GLshort s, GLshort t);
GLBINDING_API void TexCoord2sv(const GLshort * v);
GLBINDING_API void TexCoord2xOES(GLfixed s, GLfixed t);
GLBINDING_API void TexCoord2xvOES(const GLfixed * coords);
GLBINDING_API void TexCoord3bOES(GLbyte s, GLbyte t, GLbyte r);
GLBINDING_API void TexCoord3bvOES(const GLbyte * coords);
GLBINDING_API void TexCoord3d(GLdouble s, GLdouble t, GLdouble r);
GLBINDING_API void TexCoord3dv(const GLdouble * v);
GLBINDING_API void TexCoord3f(GLfloat s, GLfloat t, GLfloat r);
GLBINDING_API void TexCoord3fv(const GLfloat * v);
GLBINDING_API void TexCoord3hNV(GLhalfNV s, GLhalfNV t, GLhalfNV r);
GLBINDING_API void TexCoord3hvNV(const GLhalfNV * v);
GLBINDING_API void TexCoord3i(GLint s, GLint t, GLint r);
GLBINDING_API void TexCoord3iv(const GLint * v);
GLBINDING_API void TexCoord3s(GLshort s, GLshort t, GLshort r);
GLBINDING_API void TexCoord3sv(const GLshort * v);
GLBINDING_API void TexCoord3xOES(GLfixed s, GLfixed t, GLfixed r);
GLBINDING_API void TexCoord3xvOES(const GLfixed * coords);
GLBINDING_API void TexCoord4bOES(GLbyte s, GLbyte t, GLbyte r, GLbyte q);
GLBINDING_API void TexCoord4bvOES(const GLbyte * coords);
GLBINDING_API void TexCoord4d(GLdouble s, GLdouble t, GLdouble r, GLdouble q);
GLBINDING_API void TexCoord4dv(const GLdouble * v);
GLBINDING_API void TexCoord4f(GLfloat s, GLfloat t, GLfloat r, GLfloat q);
GLBINDING_API void TexCoord4fColor4fNormal3fVertex4fSUN(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLBINDING_API void TexCoord4fColor4fNormal3fVertex4fvSUN(const GLfloat * tc, const GLfloat * c, const GLfloat * n, const GLfloat * v);
GLBINDING_API void TexCoord4fVertex4fSUN(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLBINDING_API void TexCoord4fVertex4fvSUN(const GLfloat * tc, const GLfloat * v);
GLBINDING_API void TexCoord4fv(const GLfloat * v);
GLBINDING_API void TexCoord4hNV(GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);
GLBINDING_API void TexCoord4hvNV(const GLhalfNV * v);
GLBINDING_API void TexCoord4i(GLint s, GLint t, GLint r, GLint q);
GLBINDING_API void TexCoord4iv(const GLint * v);
GLBINDING_API void TexCoord4s(GLshort s, GLshort t, GLshort r, GLshort q);
GLBINDING_API void TexCoord4sv(const GLshort * v);
GLBINDING_API void TexCoord4xOES(GLfixed s, GLfixed t, GLfixed r, GLfixed q);
GLBINDING_API void TexCoord4xvOES(const GLfixed * coords);
GLBINDING_API void TexCoordFormatNV(GLint size, GLenum type, GLsizei stride);
GLBINDING_API void TexCoordP1ui(GLenum type, GLuint coords);
GLBINDING_API void TexCoordP1uiv(GLenum type, const GLuint * coords);
GLBINDING_API void TexCoordP2ui(GLenum type, GLuint coords);
GLBINDING_API void TexCoordP2uiv(GLenum type, const GLuint * coords);
GLBINDING_API void TexCoordP3ui(GLenum type, GLuint coords);
GLBINDING_API void TexCoordP3uiv(GLenum type, const GLuint * coords);
GLBINDING_API void TexCoordP4ui(GLenum type, GLuint coords);
GLBINDING_API void TexCoordP4uiv(GLenum type, const GLuint * coords);
GLBINDING_API void TexCoordPointer(GLint size, GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void TexCoordPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
GLBINDING_API void TexCoordPointerListIBM(GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
GLBINDING_API void TexCoordPointervINTEL(GLint size, GLenum type, const void ** pointer);
GLBINDING_API void TexEnvf(GLenum target, GLenum pname, GLfloat param);
GLBINDING_API void TexEnvfv(GLenum target, GLenum pname, const GLfloat * params);
GLBINDING_API void TexEnvi(GLenum target, GLenum pname, GLint param);
GLBINDING_API void TexEnviv(GLenum target, GLenum pname, const GLint * params);
GLBINDING_API void TexEnvx(GLenum target, GLenum pname, GLfixed param);
GLBINDING_API void TexEnvxOES(GLenum target, GLenum pname, GLfixed param);
GLBINDING_API void TexEnvxv(GLenum target, GLenum pname, const GLfixed * params);
GLBINDING_API void TexEnvxvOES(GLenum target, GLenum pname, const GLfixed * params);
GLBINDING_API void TexFilterFuncSGIS(GLenum target, GLenum filter, GLsizei n, const GLfloat * weights);
GLBINDING_API void TexGend(GLenum coord, GLenum pname, GLdouble param);
GLBINDING_API void TexGendv(GLenum coord, GLenum pname, const GLdouble * params);
GLBINDING_API void TexGenf(GLenum coord, GLenum pname, GLfloat param);
GLBINDING_API void TexGenfOES(GLenum coord, GLenum pname, GLfloat param);
GLBINDING_API void TexGenfv(GLenum coord, GLenum pname, const GLfloat * params);
GLBINDING_API void TexGenfvOES(GLenum coord, GLenum pname, const GLfloat * params);
GLBINDING_API void TexGeni(GLenum coord, GLenum pname, GLint param);
GLBINDING_API void TexGeniOES(GLenum coord, GLenum pname, GLint param);
GLBINDING_API void TexGeniv(GLenum coord, GLenum pname, const GLint * params);
GLBINDING_API void TexGenivOES(GLenum coord, GLenum pname, const GLint * params);
GLBINDING_API void TexGenxOES(GLenum coord, GLenum pname, GLfixed param);
GLBINDING_API void TexGenxvOES(GLenum coord, GLenum pname, const GLfixed * params);
GLBINDING_API void TexImage1D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void TexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void TexImage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLBINDING_API void TexImage2DMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
GLBINDING_API void TexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void TexImage3DEXT(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void TexImage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLBINDING_API void TexImage3DMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
GLBINDING_API void TexImage3DOES(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void TexImage4DSGIS(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void TexPageCommitmentARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean resident);
GLBINDING_API void TexParameterIiv(GLenum target, GLenum pname, const GLint * params);
GLBINDING_API void TexParameterIivEXT(GLenum target, GLenum pname, const GLint * params);
GLBINDING_API void TexParameterIuiv(GLenum target, GLenum pname, const GLuint * params);
GLBINDING_API void TexParameterIuivEXT(GLenum target, GLenum pname, const GLuint * params);
GLBINDING_API void TexParameterf(GLenum target, GLenum pname, GLfloat param);
GLBINDING_API void TexParameterfv(GLenum target, GLenum pname, const GLfloat * params);
GLBINDING_API void TexParameteri(GLenum target, GLenum pname, GLint param);
GLBINDING_API void TexParameteriv(GLenum target, GLenum pname, const GLint * params);
GLBINDING_API void TexParameterx(GLenum target, GLenum pname, GLfixed param);
GLBINDING_API void TexParameterxOES(GLenum target, GLenum pname, GLfixed param);
GLBINDING_API void TexParameterxv(GLenum target, GLenum pname, const GLfixed * params);
GLBINDING_API void TexParameterxvOES(GLenum target, GLenum pname, const GLfixed * params);
GLBINDING_API void TexRenderbufferNV(GLenum target, GLuint renderbuffer);
GLBINDING_API void TexStorage1D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
GLBINDING_API void TexStorage1DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
GLBINDING_API void TexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void TexStorage2DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void TexStorage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLBINDING_API void TexStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLBINDING_API void TexStorage3DEXT(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLBINDING_API void TexStorage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLBINDING_API void TexStorageSparseAMD(GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
GLBINDING_API void TexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void TexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void TexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void TexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void TexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void TexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void TexSubImage3DOES(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void TexSubImage4DSGIS(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void TextureBarrierNV();
GLBINDING_API void TextureBufferEXT(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);
GLBINDING_API void TextureBufferRangeEXT(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
GLBINDING_API void TextureColorMaskSGIS(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
GLBINDING_API void TextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void TextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void TextureImage2DMultisampleCoverageNV(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
GLBINDING_API void TextureImage2DMultisampleNV(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations);
GLBINDING_API void TextureImage3DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void TextureImage3DMultisampleCoverageNV(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
GLBINDING_API void TextureImage3DMultisampleNV(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations);
GLBINDING_API void TextureLightEXT(GLenum pname);
GLBINDING_API void TextureMaterialEXT(GLenum face, GLenum mode);
GLBINDING_API void TextureNormalEXT(GLenum mode);
GLBINDING_API void TexturePageCommitmentEXT(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLboolean resident);
GLBINDING_API void TextureParameterIivEXT(GLuint texture, GLenum target, GLenum pname, const GLint * params);
GLBINDING_API void TextureParameterIuivEXT(GLuint texture, GLenum target, GLenum pname, const GLuint * params);
GLBINDING_API void TextureParameterfEXT(GLuint texture, GLenum target, GLenum pname, GLfloat param);
GLBINDING_API void TextureParameterfvEXT(GLuint texture, GLenum target, GLenum pname, const GLfloat * params);
GLBINDING_API void TextureParameteriEXT(GLuint texture, GLenum target, GLenum pname, GLint param);
GLBINDING_API void TextureParameterivEXT(GLuint texture, GLenum target, GLenum pname, const GLint * params);
GLBINDING_API void TextureRangeAPPLE(GLenum target, GLsizei length, const void * pointer);
GLBINDING_API void TextureRenderbufferEXT(GLuint texture, GLenum target, GLuint renderbuffer);
GLBINDING_API void TextureStorage1DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);
GLBINDING_API void TextureStorage2DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
GLBINDING_API void TextureStorage2DMultisampleEXT(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
GLBINDING_API void TextureStorage3DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
GLBINDING_API void TextureStorage3DMultisampleEXT(GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
GLBINDING_API void TextureStorageSparseAMD(GLuint texture, GLenum target, GLenum internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLsizei layers, GLbitfield flags);
GLBINDING_API void TextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void TextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void TextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
GLBINDING_API void TextureView(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);
GLBINDING_API void TrackMatrixNV(GLenum target, GLuint address, GLenum matrix, GLenum transform);
GLBINDING_API void TransformFeedbackAttribsNV(GLuint count, const GLint * attribs, GLenum bufferMode);
GLBINDING_API void TransformFeedbackStreamAttribsNV(GLsizei count, const GLint * attribs, GLsizei nbuffers, const GLint * bufstreams, GLenum bufferMode);
GLBINDING_API void TransformFeedbackVaryings(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
GLBINDING_API void TransformFeedbackVaryingsEXT(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode);
GLBINDING_API void TransformFeedbackVaryingsNV(GLuint program, GLsizei count, const GLint * locations, GLenum bufferMode);
GLBINDING_API void TransformPathNV(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat * transformValues);
GLBINDING_API void Translated(GLdouble x, GLdouble y, GLdouble z);
GLBINDING_API void Translatef(GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void Translatex(GLfixed x, GLfixed y, GLfixed z);
GLBINDING_API void TranslatexOES(GLfixed x, GLfixed y, GLfixed z);
GLBINDING_API void Uniform1d(GLint location, GLdouble x);
GLBINDING_API void Uniform1dv(GLint location, GLsizei count, const GLdouble * value);
GLBINDING_API void Uniform1f(GLint location, GLfloat v0);
GLBINDING_API void Uniform1fARB(GLint location, GLfloat v0);
GLBINDING_API void Uniform1fv(GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void Uniform1fvARB(GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void Uniform1i(GLint location, GLint v0);
GLBINDING_API void Uniform1i64NV(GLint location, GLint64EXT x);
GLBINDING_API void Uniform1i64vNV(GLint location, GLsizei count, const GLint64EXT * value);
GLBINDING_API void Uniform1iARB(GLint location, GLint v0);
GLBINDING_API void Uniform1iv(GLint location, GLsizei count, const GLint * value);
GLBINDING_API void Uniform1ivARB(GLint location, GLsizei count, const GLint * value);
GLBINDING_API void Uniform1ui(GLint location, GLuint v0);
GLBINDING_API void Uniform1ui64NV(GLint location, GLuint64EXT x);
GLBINDING_API void Uniform1ui64vNV(GLint location, GLsizei count, const GLuint64EXT * value);
GLBINDING_API void Uniform1uiEXT(GLint location, GLuint v0);
GLBINDING_API void Uniform1uiv(GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void Uniform1uivEXT(GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void Uniform2d(GLint location, GLdouble x, GLdouble y);
GLBINDING_API void Uniform2dv(GLint location, GLsizei count, const GLdouble * value);
GLBINDING_API void Uniform2f(GLint location, GLfloat v0, GLfloat v1);
GLBINDING_API void Uniform2fARB(GLint location, GLfloat v0, GLfloat v1);
GLBINDING_API void Uniform2fv(GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void Uniform2fvARB(GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void Uniform2i(GLint location, GLint v0, GLint v1);
GLBINDING_API void Uniform2i64NV(GLint location, GLint64EXT x, GLint64EXT y);
GLBINDING_API void Uniform2i64vNV(GLint location, GLsizei count, const GLint64EXT * value);
GLBINDING_API void Uniform2iARB(GLint location, GLint v0, GLint v1);
GLBINDING_API void Uniform2iv(GLint location, GLsizei count, const GLint * value);
GLBINDING_API void Uniform2ivARB(GLint location, GLsizei count, const GLint * value);
GLBINDING_API void Uniform2ui(GLint location, GLuint v0, GLuint v1);
GLBINDING_API void Uniform2ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y);
GLBINDING_API void Uniform2ui64vNV(GLint location, GLsizei count, const GLuint64EXT * value);
GLBINDING_API void Uniform2uiEXT(GLint location, GLuint v0, GLuint v1);
GLBINDING_API void Uniform2uiv(GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void Uniform2uivEXT(GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void Uniform3d(GLint location, GLdouble x, GLdouble y, GLdouble z);
GLBINDING_API void Uniform3dv(GLint location, GLsizei count, const GLdouble * value);
GLBINDING_API void Uniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLBINDING_API void Uniform3fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
GLBINDING_API void Uniform3fv(GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void Uniform3fvARB(GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void Uniform3i(GLint location, GLint v0, GLint v1, GLint v2);
GLBINDING_API void Uniform3i64NV(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);
GLBINDING_API void Uniform3i64vNV(GLint location, GLsizei count, const GLint64EXT * value);
GLBINDING_API void Uniform3iARB(GLint location, GLint v0, GLint v1, GLint v2);
GLBINDING_API void Uniform3iv(GLint location, GLsizei count, const GLint * value);
GLBINDING_API void Uniform3ivARB(GLint location, GLsizei count, const GLint * value);
GLBINDING_API void Uniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2);
GLBINDING_API void Uniform3ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
GLBINDING_API void Uniform3ui64vNV(GLint location, GLsizei count, const GLuint64EXT * value);
GLBINDING_API void Uniform3uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2);
GLBINDING_API void Uniform3uiv(GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void Uniform3uivEXT(GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void Uniform4d(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLBINDING_API void Uniform4dv(GLint location, GLsizei count, const GLdouble * value);
GLBINDING_API void Uniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLBINDING_API void Uniform4fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
GLBINDING_API void Uniform4fv(GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void Uniform4fvARB(GLint location, GLsizei count, const GLfloat * value);
GLBINDING_API void Uniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLBINDING_API void Uniform4i64NV(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
GLBINDING_API void Uniform4i64vNV(GLint location, GLsizei count, const GLint64EXT * value);
GLBINDING_API void Uniform4iARB(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
GLBINDING_API void Uniform4iv(GLint location, GLsizei count, const GLint * value);
GLBINDING_API void Uniform4ivARB(GLint location, GLsizei count, const GLint * value);
GLBINDING_API void Uniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLBINDING_API void Uniform4ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
GLBINDING_API void Uniform4ui64vNV(GLint location, GLsizei count, const GLuint64EXT * value);
GLBINDING_API void Uniform4uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
GLBINDING_API void Uniform4uiv(GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void Uniform4uivEXT(GLint location, GLsizei count, const GLuint * value);
GLBINDING_API void UniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
GLBINDING_API void UniformBufferEXT(GLuint program, GLint location, GLuint buffer);
GLBINDING_API void UniformHandleui64ARB(GLint location, GLuint64 value);
GLBINDING_API void UniformHandleui64NV(GLint location, GLuint64 value);
GLBINDING_API void UniformHandleui64vARB(GLint location, GLsizei count, const GLuint64 * value);
GLBINDING_API void UniformHandleui64vNV(GLint location, GLsizei count, const GLuint64 * value);
GLBINDING_API void UniformMatrix2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void UniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void UniformMatrix2fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void UniformMatrix2x3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void UniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void UniformMatrix2x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void UniformMatrix2x4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void UniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void UniformMatrix2x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void UniformMatrix3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void UniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void UniformMatrix3fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void UniformMatrix3x2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void UniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void UniformMatrix3x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void UniformMatrix3x4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void UniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void UniformMatrix3x4fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void UniformMatrix4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void UniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void UniformMatrix4fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void UniformMatrix4x2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void UniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void UniformMatrix4x2fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void UniformMatrix4x3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value);
GLBINDING_API void UniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void UniformMatrix4x3fvNV(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value);
GLBINDING_API void UniformSubroutinesuiv(GLenum shadertype, GLsizei count, const GLuint * indices);
GLBINDING_API void Uniformui64NV(GLint location, GLuint64EXT value);
GLBINDING_API void Uniformui64vNV(GLint location, GLsizei count, const GLuint64EXT * value);
GLBINDING_API void UnlockArraysEXT();
GLBINDING_API GLboolean UnmapBuffer(GLenum target);
GLBINDING_API GLboolean UnmapBufferARB(GLenum target);
GLBINDING_API GLboolean UnmapBufferOES(GLenum target);
GLBINDING_API GLboolean UnmapNamedBufferEXT(GLuint buffer);
GLBINDING_API void UnmapObjectBufferATI(GLuint buffer);
GLBINDING_API void UnmapTexture2DINTEL(GLuint texture, GLint level);
GLBINDING_API void UpdateObjectBufferATI(GLuint buffer, GLuint offset, GLsizei size, const void * pointer, GLenum preserve);
GLBINDING_API void UseProgram(GLuint program);
GLBINDING_API void UseProgramObjectARB(GLhandleARB programObj);
GLBINDING_API void UseProgramStages(GLuint pipeline, GLbitfield stages, GLuint program);
GLBINDING_API void UseProgramStagesEXT(GLuint pipeline, GLbitfield stages, GLuint program);
GLBINDING_API void UseShaderProgramEXT(GLenum type, GLuint program);
GLBINDING_API void VDPAUFiniNV();
GLBINDING_API void VDPAUGetSurfaceivNV(GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei * length, GLint * values);
GLBINDING_API void VDPAUInitNV(const void * vdpDevice, const void * _getProcAddress);
GLBINDING_API GLboolean VDPAUIsSurfaceNV(GLvdpauSurfaceNV surface);
GLBINDING_API void VDPAUMapSurfacesNV(GLsizei numSurfaces, const GLvdpauSurfaceNV * surfaces);
GLBINDING_API GLvdpauSurfaceNV VDPAURegisterOutputSurfaceNV(const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames);
GLBINDING_API GLvdpauSurfaceNV VDPAURegisterVideoSurfaceNV(const void * vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint * textureNames);
GLBINDING_API void VDPAUSurfaceAccessNV(GLvdpauSurfaceNV surface, GLenum access);
GLBINDING_API void VDPAUUnmapSurfacesNV(GLsizei numSurface, const GLvdpauSurfaceNV * surfaces);
GLBINDING_API void VDPAUUnregisterSurfaceNV(GLvdpauSurfaceNV surface);
GLBINDING_API void ValidateProgram(GLuint program);
GLBINDING_API void ValidateProgramARB(GLhandleARB programObj);
GLBINDING_API void ValidateProgramPipeline(GLuint pipeline);
GLBINDING_API void ValidateProgramPipelineEXT(GLuint pipeline);
GLBINDING_API void VariantArrayObjectATI(GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);
GLBINDING_API void VariantPointerEXT(GLuint id, GLenum type, GLuint stride, const void * addr);
GLBINDING_API void VariantbvEXT(GLuint id, const GLbyte * addr);
GLBINDING_API void VariantdvEXT(GLuint id, const GLdouble * addr);
GLBINDING_API void VariantfvEXT(GLuint id, const GLfloat * addr);
GLBINDING_API void VariantivEXT(GLuint id, const GLint * addr);
GLBINDING_API void VariantsvEXT(GLuint id, const GLshort * addr);
GLBINDING_API void VariantubvEXT(GLuint id, const GLubyte * addr);
GLBINDING_API void VariantuivEXT(GLuint id, const GLuint * addr);
GLBINDING_API void VariantusvEXT(GLuint id, const GLushort * addr);
GLBINDING_API void Vertex2bOES(GLbyte x);
GLBINDING_API void Vertex2bvOES(const GLbyte * coords);
GLBINDING_API void Vertex2d(GLdouble x, GLdouble y);
GLBINDING_API void Vertex2dv(const GLdouble * v);
GLBINDING_API void Vertex2f(GLfloat x, GLfloat y);
GLBINDING_API void Vertex2fv(const GLfloat * v);
GLBINDING_API void Vertex2hNV(GLhalfNV x, GLhalfNV y);
GLBINDING_API void Vertex2hvNV(const GLhalfNV * v);
GLBINDING_API void Vertex2i(GLint x, GLint y);
GLBINDING_API void Vertex2iv(const GLint * v);
GLBINDING_API void Vertex2s(GLshort x, GLshort y);
GLBINDING_API void Vertex2sv(const GLshort * v);
GLBINDING_API void Vertex2xOES(GLfixed x);
GLBINDING_API void Vertex2xvOES(const GLfixed * coords);
GLBINDING_API void Vertex3bOES(GLbyte x, GLbyte y);
GLBINDING_API void Vertex3bvOES(const GLbyte * coords);
GLBINDING_API void Vertex3d(GLdouble x, GLdouble y, GLdouble z);
GLBINDING_API void Vertex3dv(const GLdouble * v);
GLBINDING_API void Vertex3f(GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void Vertex3fv(const GLfloat * v);
GLBINDING_API void Vertex3hNV(GLhalfNV x, GLhalfNV y, GLhalfNV z);
GLBINDING_API void Vertex3hvNV(const GLhalfNV * v);
GLBINDING_API void Vertex3i(GLint x, GLint y, GLint z);
GLBINDING_API void Vertex3iv(const GLint * v);
GLBINDING_API void Vertex3s(GLshort x, GLshort y, GLshort z);
GLBINDING_API void Vertex3sv(const GLshort * v);
GLBINDING_API void Vertex3xOES(GLfixed x, GLfixed y);
GLBINDING_API void Vertex3xvOES(const GLfixed * coords);
GLBINDING_API void Vertex4bOES(GLbyte x, GLbyte y, GLbyte z);
GLBINDING_API void Vertex4bvOES(const GLbyte * coords);
GLBINDING_API void Vertex4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLBINDING_API void Vertex4dv(const GLdouble * v);
GLBINDING_API void Vertex4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLBINDING_API void Vertex4fv(const GLfloat * v);
GLBINDING_API void Vertex4hNV(GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
GLBINDING_API void Vertex4hvNV(const GLhalfNV * v);
GLBINDING_API void Vertex4i(GLint x, GLint y, GLint z, GLint w);
GLBINDING_API void Vertex4iv(const GLint * v);
GLBINDING_API void Vertex4s(GLshort x, GLshort y, GLshort z, GLshort w);
GLBINDING_API void Vertex4sv(const GLshort * v);
GLBINDING_API void Vertex4xOES(GLfixed x, GLfixed y, GLfixed z);
GLBINDING_API void Vertex4xvOES(const GLfixed * coords);
GLBINDING_API void VertexArrayBindVertexBufferEXT(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
GLBINDING_API void VertexArrayColorOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLBINDING_API void VertexArrayEdgeFlagOffsetEXT(GLuint vaobj, GLuint buffer, GLsizei stride, GLintptr offset);
GLBINDING_API void VertexArrayFogCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
GLBINDING_API void VertexArrayIndexOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
GLBINDING_API void VertexArrayMultiTexCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLenum texunit, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLBINDING_API void VertexArrayNormalOffsetEXT(GLuint vaobj, GLuint buffer, GLenum type, GLsizei stride, GLintptr offset);
GLBINDING_API void VertexArrayParameteriAPPLE(GLenum pname, GLint param);
GLBINDING_API void VertexArrayRangeAPPLE(GLsizei length, void * pointer);
GLBINDING_API void VertexArrayRangeNV(GLsizei length, const void * pointer);
GLBINDING_API void VertexArraySecondaryColorOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLBINDING_API void VertexArrayTexCoordOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLBINDING_API void VertexArrayVertexAttribBindingEXT(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
GLBINDING_API void VertexArrayVertexAttribDivisorEXT(GLuint vaobj, GLuint index, GLuint divisor);
GLBINDING_API void VertexArrayVertexAttribFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
GLBINDING_API void VertexArrayVertexAttribIFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLBINDING_API void VertexArrayVertexAttribIOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLBINDING_API void VertexArrayVertexAttribLFormatEXT(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLBINDING_API void VertexArrayVertexAttribLOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLBINDING_API void VertexArrayVertexAttribOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLintptr offset);
GLBINDING_API void VertexArrayVertexBindingDivisorEXT(GLuint vaobj, GLuint bindingindex, GLuint divisor);
GLBINDING_API void VertexArrayVertexOffsetEXT(GLuint vaobj, GLuint buffer, GLint size, GLenum type, GLsizei stride, GLintptr offset);
GLBINDING_API void VertexAttrib1d(GLuint index, GLdouble x);
GLBINDING_API void VertexAttrib1dARB(GLuint index, GLdouble x);
GLBINDING_API void VertexAttrib1dNV(GLuint index, GLdouble x);
GLBINDING_API void VertexAttrib1dv(GLuint index, const GLdouble * v);
GLBINDING_API void VertexAttrib1dvARB(GLuint index, const GLdouble * v);
GLBINDING_API void VertexAttrib1dvNV(GLuint index, const GLdouble * v);
GLBINDING_API void VertexAttrib1f(GLuint index, GLfloat x);
GLBINDING_API void VertexAttrib1fARB(GLuint index, GLfloat x);
GLBINDING_API void VertexAttrib1fNV(GLuint index, GLfloat x);
GLBINDING_API void VertexAttrib1fv(GLuint index, const GLfloat * v);
GLBINDING_API void VertexAttrib1fvARB(GLuint index, const GLfloat * v);
GLBINDING_API void VertexAttrib1fvNV(GLuint index, const GLfloat * v);
GLBINDING_API void VertexAttrib1hNV(GLuint index, GLhalfNV x);
GLBINDING_API void VertexAttrib1hvNV(GLuint index, const GLhalfNV * v);
GLBINDING_API void VertexAttrib1s(GLuint index, GLshort x);
GLBINDING_API void VertexAttrib1sARB(GLuint index, GLshort x);
GLBINDING_API void VertexAttrib1sNV(GLuint index, GLshort x);
GLBINDING_API void VertexAttrib1sv(GLuint index, const GLshort * v);
GLBINDING_API void VertexAttrib1svARB(GLuint index, const GLshort * v);
GLBINDING_API void VertexAttrib1svNV(GLuint index, const GLshort * v);
GLBINDING_API void VertexAttrib2d(GLuint index, GLdouble x, GLdouble y);
GLBINDING_API void VertexAttrib2dARB(GLuint index, GLdouble x, GLdouble y);
GLBINDING_API void VertexAttrib2dNV(GLuint index, GLdouble x, GLdouble y);
GLBINDING_API void VertexAttrib2dv(GLuint index, const GLdouble * v);
GLBINDING_API void VertexAttrib2dvARB(GLuint index, const GLdouble * v);
GLBINDING_API void VertexAttrib2dvNV(GLuint index, const GLdouble * v);
GLBINDING_API void VertexAttrib2f(GLuint index, GLfloat x, GLfloat y);
GLBINDING_API void VertexAttrib2fARB(GLuint index, GLfloat x, GLfloat y);
GLBINDING_API void VertexAttrib2fNV(GLuint index, GLfloat x, GLfloat y);
GLBINDING_API void VertexAttrib2fv(GLuint index, const GLfloat * v);
GLBINDING_API void VertexAttrib2fvARB(GLuint index, const GLfloat * v);
GLBINDING_API void VertexAttrib2fvNV(GLuint index, const GLfloat * v);
GLBINDING_API void VertexAttrib2hNV(GLuint index, GLhalfNV x, GLhalfNV y);
GLBINDING_API void VertexAttrib2hvNV(GLuint index, const GLhalfNV * v);
GLBINDING_API void VertexAttrib2s(GLuint index, GLshort x, GLshort y);
GLBINDING_API void VertexAttrib2sARB(GLuint index, GLshort x, GLshort y);
GLBINDING_API void VertexAttrib2sNV(GLuint index, GLshort x, GLshort y);
GLBINDING_API void VertexAttrib2sv(GLuint index, const GLshort * v);
GLBINDING_API void VertexAttrib2svARB(GLuint index, const GLshort * v);
GLBINDING_API void VertexAttrib2svNV(GLuint index, const GLshort * v);
GLBINDING_API void VertexAttrib3d(GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLBINDING_API void VertexAttrib3dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLBINDING_API void VertexAttrib3dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLBINDING_API void VertexAttrib3dv(GLuint index, const GLdouble * v);
GLBINDING_API void VertexAttrib3dvARB(GLuint index, const GLdouble * v);
GLBINDING_API void VertexAttrib3dvNV(GLuint index, const GLdouble * v);
GLBINDING_API void VertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void VertexAttrib3fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void VertexAttrib3fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void VertexAttrib3fv(GLuint index, const GLfloat * v);
GLBINDING_API void VertexAttrib3fvARB(GLuint index, const GLfloat * v);
GLBINDING_API void VertexAttrib3fvNV(GLuint index, const GLfloat * v);
GLBINDING_API void VertexAttrib3hNV(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);
GLBINDING_API void VertexAttrib3hvNV(GLuint index, const GLhalfNV * v);
GLBINDING_API void VertexAttrib3s(GLuint index, GLshort x, GLshort y, GLshort z);
GLBINDING_API void VertexAttrib3sARB(GLuint index, GLshort x, GLshort y, GLshort z);
GLBINDING_API void VertexAttrib3sNV(GLuint index, GLshort x, GLshort y, GLshort z);
GLBINDING_API void VertexAttrib3sv(GLuint index, const GLshort * v);
GLBINDING_API void VertexAttrib3svARB(GLuint index, const GLshort * v);
GLBINDING_API void VertexAttrib3svNV(GLuint index, const GLshort * v);
GLBINDING_API void VertexAttrib4Nbv(GLuint index, const GLbyte * v);
GLBINDING_API void VertexAttrib4NbvARB(GLuint index, const GLbyte * v);
GLBINDING_API void VertexAttrib4Niv(GLuint index, const GLint * v);
GLBINDING_API void VertexAttrib4NivARB(GLuint index, const GLint * v);
GLBINDING_API void VertexAttrib4Nsv(GLuint index, const GLshort * v);
GLBINDING_API void VertexAttrib4NsvARB(GLuint index, const GLshort * v);
GLBINDING_API void VertexAttrib4Nub(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
GLBINDING_API void VertexAttrib4NubARB(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
GLBINDING_API void VertexAttrib4Nubv(GLuint index, const GLubyte * v);
GLBINDING_API void VertexAttrib4NubvARB(GLuint index, const GLubyte * v);
GLBINDING_API void VertexAttrib4Nuiv(GLuint index, const GLuint * v);
GLBINDING_API void VertexAttrib4NuivARB(GLuint index, const GLuint * v);
GLBINDING_API void VertexAttrib4Nusv(GLuint index, const GLushort * v);
GLBINDING_API void VertexAttrib4NusvARB(GLuint index, const GLushort * v);
GLBINDING_API void VertexAttrib4bv(GLuint index, const GLbyte * v);
GLBINDING_API void VertexAttrib4bvARB(GLuint index, const GLbyte * v);
GLBINDING_API void VertexAttrib4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLBINDING_API void VertexAttrib4dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLBINDING_API void VertexAttrib4dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLBINDING_API void VertexAttrib4dv(GLuint index, const GLdouble * v);
GLBINDING_API void VertexAttrib4dvARB(GLuint index, const GLdouble * v);
GLBINDING_API void VertexAttrib4dvNV(GLuint index, const GLdouble * v);
GLBINDING_API void VertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLBINDING_API void VertexAttrib4fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLBINDING_API void VertexAttrib4fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLBINDING_API void VertexAttrib4fv(GLuint index, const GLfloat * v);
GLBINDING_API void VertexAttrib4fvARB(GLuint index, const GLfloat * v);
GLBINDING_API void VertexAttrib4fvNV(GLuint index, const GLfloat * v);
GLBINDING_API void VertexAttrib4hNV(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);
GLBINDING_API void VertexAttrib4hvNV(GLuint index, const GLhalfNV * v);
GLBINDING_API void VertexAttrib4iv(GLuint index, const GLint * v);
GLBINDING_API void VertexAttrib4ivARB(GLuint index, const GLint * v);
GLBINDING_API void VertexAttrib4s(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
GLBINDING_API void VertexAttrib4sARB(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
GLBINDING_API void VertexAttrib4sNV(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
GLBINDING_API void VertexAttrib4sv(GLuint index, const GLshort * v);
GLBINDING_API void VertexAttrib4svARB(GLuint index, const GLshort * v);
GLBINDING_API void VertexAttrib4svNV(GLuint index, const GLshort * v);
GLBINDING_API void VertexAttrib4ubNV(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
GLBINDING_API void VertexAttrib4ubv(GLuint index, const GLubyte * v);
GLBINDING_API void VertexAttrib4ubvARB(GLuint index, const GLubyte * v);
GLBINDING_API void VertexAttrib4ubvNV(GLuint index, const GLubyte * v);
GLBINDING_API void VertexAttrib4uiv(GLuint index, const GLuint * v);
GLBINDING_API void VertexAttrib4uivARB(GLuint index, const GLuint * v);
GLBINDING_API void VertexAttrib4usv(GLuint index, const GLushort * v);
GLBINDING_API void VertexAttrib4usvARB(GLuint index, const GLushort * v);
GLBINDING_API void VertexAttribArrayObjectATI(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);
GLBINDING_API void VertexAttribBinding(GLuint attribindex, GLuint bindingindex);
GLBINDING_API void VertexAttribDivisor(GLuint index, GLuint divisor);
GLBINDING_API void VertexAttribDivisorANGLE(GLuint index, GLuint divisor);
GLBINDING_API void VertexAttribDivisorARB(GLuint index, GLuint divisor);
GLBINDING_API void VertexAttribDivisorEXT(GLuint index, GLuint divisor);
GLBINDING_API void VertexAttribDivisorNV(GLuint index, GLuint divisor);
GLBINDING_API void VertexAttribFormat(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
GLBINDING_API void VertexAttribFormatNV(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);
GLBINDING_API void VertexAttribI1i(GLuint index, GLint x);
GLBINDING_API void VertexAttribI1iEXT(GLuint index, GLint x);
GLBINDING_API void VertexAttribI1iv(GLuint index, const GLint * v);
GLBINDING_API void VertexAttribI1ivEXT(GLuint index, const GLint * v);
GLBINDING_API void VertexAttribI1ui(GLuint index, GLuint x);
GLBINDING_API void VertexAttribI1uiEXT(GLuint index, GLuint x);
GLBINDING_API void VertexAttribI1uiv(GLuint index, const GLuint * v);
GLBINDING_API void VertexAttribI1uivEXT(GLuint index, const GLuint * v);
GLBINDING_API void VertexAttribI2i(GLuint index, GLint x, GLint y);
GLBINDING_API void VertexAttribI2iEXT(GLuint index, GLint x, GLint y);
GLBINDING_API void VertexAttribI2iv(GLuint index, const GLint * v);
GLBINDING_API void VertexAttribI2ivEXT(GLuint index, const GLint * v);
GLBINDING_API void VertexAttribI2ui(GLuint index, GLuint x, GLuint y);
GLBINDING_API void VertexAttribI2uiEXT(GLuint index, GLuint x, GLuint y);
GLBINDING_API void VertexAttribI2uiv(GLuint index, const GLuint * v);
GLBINDING_API void VertexAttribI2uivEXT(GLuint index, const GLuint * v);
GLBINDING_API void VertexAttribI3i(GLuint index, GLint x, GLint y, GLint z);
GLBINDING_API void VertexAttribI3iEXT(GLuint index, GLint x, GLint y, GLint z);
GLBINDING_API void VertexAttribI3iv(GLuint index, const GLint * v);
GLBINDING_API void VertexAttribI3ivEXT(GLuint index, const GLint * v);
GLBINDING_API void VertexAttribI3ui(GLuint index, GLuint x, GLuint y, GLuint z);
GLBINDING_API void VertexAttribI3uiEXT(GLuint index, GLuint x, GLuint y, GLuint z);
GLBINDING_API void VertexAttribI3uiv(GLuint index, const GLuint * v);
GLBINDING_API void VertexAttribI3uivEXT(GLuint index, const GLuint * v);
GLBINDING_API void VertexAttribI4bv(GLuint index, const GLbyte * v);
GLBINDING_API void VertexAttribI4bvEXT(GLuint index, const GLbyte * v);
GLBINDING_API void VertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w);
GLBINDING_API void VertexAttribI4iEXT(GLuint index, GLint x, GLint y, GLint z, GLint w);
GLBINDING_API void VertexAttribI4iv(GLuint index, const GLint * v);
GLBINDING_API void VertexAttribI4ivEXT(GLuint index, const GLint * v);
GLBINDING_API void VertexAttribI4sv(GLuint index, const GLshort * v);
GLBINDING_API void VertexAttribI4svEXT(GLuint index, const GLshort * v);
GLBINDING_API void VertexAttribI4ubv(GLuint index, const GLubyte * v);
GLBINDING_API void VertexAttribI4ubvEXT(GLuint index, const GLubyte * v);
GLBINDING_API void VertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLBINDING_API void VertexAttribI4uiEXT(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);
GLBINDING_API void VertexAttribI4uiv(GLuint index, const GLuint * v);
GLBINDING_API void VertexAttribI4uivEXT(GLuint index, const GLuint * v);
GLBINDING_API void VertexAttribI4usv(GLuint index, const GLushort * v);
GLBINDING_API void VertexAttribI4usvEXT(GLuint index, const GLushort * v);
GLBINDING_API void VertexAttribIFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLBINDING_API void VertexAttribIFormatNV(GLuint index, GLint size, GLenum type, GLsizei stride);
GLBINDING_API void VertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void VertexAttribIPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void VertexAttribL1d(GLuint index, GLdouble x);
GLBINDING_API void VertexAttribL1dEXT(GLuint index, GLdouble x);
GLBINDING_API void VertexAttribL1dv(GLuint index, const GLdouble * v);
GLBINDING_API void VertexAttribL1dvEXT(GLuint index, const GLdouble * v);
GLBINDING_API void VertexAttribL1i64NV(GLuint index, GLint64EXT x);
GLBINDING_API void VertexAttribL1i64vNV(GLuint index, const GLint64EXT * v);
GLBINDING_API void VertexAttribL1ui64ARB(GLuint index, GLuint64EXT x);
GLBINDING_API void VertexAttribL1ui64NV(GLuint index, GLuint64EXT x);
GLBINDING_API void VertexAttribL1ui64vARB(GLuint index, const GLuint64EXT * v);
GLBINDING_API void VertexAttribL1ui64vNV(GLuint index, const GLuint64EXT * v);
GLBINDING_API void VertexAttribL2d(GLuint index, GLdouble x, GLdouble y);
GLBINDING_API void VertexAttribL2dEXT(GLuint index, GLdouble x, GLdouble y);
GLBINDING_API void VertexAttribL2dv(GLuint index, const GLdouble * v);
GLBINDING_API void VertexAttribL2dvEXT(GLuint index, const GLdouble * v);
GLBINDING_API void VertexAttribL2i64NV(GLuint index, GLint64EXT x, GLint64EXT y);
GLBINDING_API void VertexAttribL2i64vNV(GLuint index, const GLint64EXT * v);
GLBINDING_API void VertexAttribL2ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y);
GLBINDING_API void VertexAttribL2ui64vNV(GLuint index, const GLuint64EXT * v);
GLBINDING_API void VertexAttribL3d(GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLBINDING_API void VertexAttribL3dEXT(GLuint index, GLdouble x, GLdouble y, GLdouble z);
GLBINDING_API void VertexAttribL3dv(GLuint index, const GLdouble * v);
GLBINDING_API void VertexAttribL3dvEXT(GLuint index, const GLdouble * v);
GLBINDING_API void VertexAttribL3i64NV(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);
GLBINDING_API void VertexAttribL3i64vNV(GLuint index, const GLint64EXT * v);
GLBINDING_API void VertexAttribL3ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);
GLBINDING_API void VertexAttribL3ui64vNV(GLuint index, const GLuint64EXT * v);
GLBINDING_API void VertexAttribL4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLBINDING_API void VertexAttribL4dEXT(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLBINDING_API void VertexAttribL4dv(GLuint index, const GLdouble * v);
GLBINDING_API void VertexAttribL4dvEXT(GLuint index, const GLdouble * v);
GLBINDING_API void VertexAttribL4i64NV(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);
GLBINDING_API void VertexAttribL4i64vNV(GLuint index, const GLint64EXT * v);
GLBINDING_API void VertexAttribL4ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);
GLBINDING_API void VertexAttribL4ui64vNV(GLuint index, const GLuint64EXT * v);
GLBINDING_API void VertexAttribLFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
GLBINDING_API void VertexAttribLFormatNV(GLuint index, GLint size, GLenum type, GLsizei stride);
GLBINDING_API void VertexAttribLPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void VertexAttribLPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void VertexAttribP1ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
GLBINDING_API void VertexAttribP1uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
GLBINDING_API void VertexAttribP2ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
GLBINDING_API void VertexAttribP2uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
GLBINDING_API void VertexAttribP3ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
GLBINDING_API void VertexAttribP3uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
GLBINDING_API void VertexAttribP4ui(GLuint index, GLenum type, GLboolean normalized, GLuint value);
GLBINDING_API void VertexAttribP4uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint * value);
GLBINDING_API void VertexAttribParameteriAMD(GLuint index, GLenum pname, GLint param);
GLBINDING_API void VertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
GLBINDING_API void VertexAttribPointerARB(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer);
GLBINDING_API void VertexAttribPointerNV(GLuint index, GLint fsize, GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void VertexAttribs1dvNV(GLuint index, GLsizei count, const GLdouble * v);
GLBINDING_API void VertexAttribs1fvNV(GLuint index, GLsizei count, const GLfloat * v);
GLBINDING_API void VertexAttribs1hvNV(GLuint index, GLsizei n, const GLhalfNV * v);
GLBINDING_API void VertexAttribs1svNV(GLuint index, GLsizei count, const GLshort * v);
GLBINDING_API void VertexAttribs2dvNV(GLuint index, GLsizei count, const GLdouble * v);
GLBINDING_API void VertexAttribs2fvNV(GLuint index, GLsizei count, const GLfloat * v);
GLBINDING_API void VertexAttribs2hvNV(GLuint index, GLsizei n, const GLhalfNV * v);
GLBINDING_API void VertexAttribs2svNV(GLuint index, GLsizei count, const GLshort * v);
GLBINDING_API void VertexAttribs3dvNV(GLuint index, GLsizei count, const GLdouble * v);
GLBINDING_API void VertexAttribs3fvNV(GLuint index, GLsizei count, const GLfloat * v);
GLBINDING_API void VertexAttribs3hvNV(GLuint index, GLsizei n, const GLhalfNV * v);
GLBINDING_API void VertexAttribs3svNV(GLuint index, GLsizei count, const GLshort * v);
GLBINDING_API void VertexAttribs4dvNV(GLuint index, GLsizei count, const GLdouble * v);
GLBINDING_API void VertexAttribs4fvNV(GLuint index, GLsizei count, const GLfloat * v);
GLBINDING_API void VertexAttribs4hvNV(GLuint index, GLsizei n, const GLhalfNV * v);
GLBINDING_API void VertexAttribs4svNV(GLuint index, GLsizei count, const GLshort * v);
GLBINDING_API void VertexAttribs4ubvNV(GLuint index, GLsizei count, const GLubyte * v);
GLBINDING_API void VertexBindingDivisor(GLuint bindingindex, GLuint divisor);
GLBINDING_API void VertexBlendARB(GLint count);
GLBINDING_API void VertexBlendEnvfATI(GLenum pname, GLfloat param);
GLBINDING_API void VertexBlendEnviATI(GLenum pname, GLint param);
GLBINDING_API void VertexFormatNV(GLint size, GLenum type, GLsizei stride);
GLBINDING_API void VertexP2ui(GLenum type, GLuint value);
GLBINDING_API void VertexP2uiv(GLenum type, const GLuint * value);
GLBINDING_API void VertexP3ui(GLenum type, GLuint value);
GLBINDING_API void VertexP3uiv(GLenum type, const GLuint * value);
GLBINDING_API void VertexP4ui(GLenum type, GLuint value);
GLBINDING_API void VertexP4uiv(GLenum type, const GLuint * value);
GLBINDING_API void VertexPointer(GLint size, GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void VertexPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const void * pointer);
GLBINDING_API void VertexPointerListIBM(GLint size, GLenum type, GLint stride, const void ** pointer, GLint ptrstride);
GLBINDING_API void VertexPointervINTEL(GLint size, GLenum type, const void ** pointer);
GLBINDING_API void VertexStream1dATI(GLenum stream, GLdouble x);
GLBINDING_API void VertexStream1dvATI(GLenum stream, const GLdouble * coords);
GLBINDING_API void VertexStream1fATI(GLenum stream, GLfloat x);
GLBINDING_API void VertexStream1fvATI(GLenum stream, const GLfloat * coords);
GLBINDING_API void VertexStream1iATI(GLenum stream, GLint x);
GLBINDING_API void VertexStream1ivATI(GLenum stream, const GLint * coords);
GLBINDING_API void VertexStream1sATI(GLenum stream, GLshort x);
GLBINDING_API void VertexStream1svATI(GLenum stream, const GLshort * coords);
GLBINDING_API void VertexStream2dATI(GLenum stream, GLdouble x, GLdouble y);
GLBINDING_API void VertexStream2dvATI(GLenum stream, const GLdouble * coords);
GLBINDING_API void VertexStream2fATI(GLenum stream, GLfloat x, GLfloat y);
GLBINDING_API void VertexStream2fvATI(GLenum stream, const GLfloat * coords);
GLBINDING_API void VertexStream2iATI(GLenum stream, GLint x, GLint y);
GLBINDING_API void VertexStream2ivATI(GLenum stream, const GLint * coords);
GLBINDING_API void VertexStream2sATI(GLenum stream, GLshort x, GLshort y);
GLBINDING_API void VertexStream2svATI(GLenum stream, const GLshort * coords);
GLBINDING_API void VertexStream3dATI(GLenum stream, GLdouble x, GLdouble y, GLdouble z);
GLBINDING_API void VertexStream3dvATI(GLenum stream, const GLdouble * coords);
GLBINDING_API void VertexStream3fATI(GLenum stream, GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void VertexStream3fvATI(GLenum stream, const GLfloat * coords);
GLBINDING_API void VertexStream3iATI(GLenum stream, GLint x, GLint y, GLint z);
GLBINDING_API void VertexStream3ivATI(GLenum stream, const GLint * coords);
GLBINDING_API void VertexStream3sATI(GLenum stream, GLshort x, GLshort y, GLshort z);
GLBINDING_API void VertexStream3svATI(GLenum stream, const GLshort * coords);
GLBINDING_API void VertexStream4dATI(GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLBINDING_API void VertexStream4dvATI(GLenum stream, const GLdouble * coords);
GLBINDING_API void VertexStream4fATI(GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLBINDING_API void VertexStream4fvATI(GLenum stream, const GLfloat * coords);
GLBINDING_API void VertexStream4iATI(GLenum stream, GLint x, GLint y, GLint z, GLint w);
GLBINDING_API void VertexStream4ivATI(GLenum stream, const GLint * coords);
GLBINDING_API void VertexStream4sATI(GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);
GLBINDING_API void VertexStream4svATI(GLenum stream, const GLshort * coords);
GLBINDING_API void VertexWeightPointerEXT(GLint size, GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void VertexWeightfEXT(GLfloat weight);
GLBINDING_API void VertexWeightfvEXT(const GLfloat * weight);
GLBINDING_API void VertexWeighthNV(GLhalfNV weight);
GLBINDING_API void VertexWeighthvNV(const GLhalfNV * weight);
GLBINDING_API GLenum VideoCaptureNV(GLuint video_capture_slot, GLuint * sequence_num, GLuint64EXT * capture_time);
GLBINDING_API void VideoCaptureStreamParameterdvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble * params);
GLBINDING_API void VideoCaptureStreamParameterfvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat * params);
GLBINDING_API void VideoCaptureStreamParameterivNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint * params);
GLBINDING_API void Viewport(GLint x, GLint y, GLsizei width, GLsizei height);
GLBINDING_API void ViewportArrayv(GLuint first, GLsizei count, const GLfloat * v);
GLBINDING_API void ViewportIndexedf(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);
GLBINDING_API void ViewportIndexedfv(GLuint index, const GLfloat * v);
GLBINDING_API void WaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout);
GLBINDING_API void WaitSyncAPPLE(GLsync sync, GLbitfield flags, GLuint64 timeout);
GLBINDING_API void WeightPathsNV(GLuint resultPath, GLsizei numPaths, const GLuint * paths, const GLfloat * weights);
GLBINDING_API void WeightPointerARB(GLint size, GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void WeightPointerOES(GLint size, GLenum type, GLsizei stride, const void * pointer);
GLBINDING_API void WeightbvARB(GLint size, const GLbyte * weights);
GLBINDING_API void WeightdvARB(GLint size, const GLdouble * weights);
GLBINDING_API void WeightfvARB(GLint size, const GLfloat * weights);
GLBINDING_API void WeightivARB(GLint size, const GLint * weights);
GLBINDING_API void WeightsvARB(GLint size, const GLshort * weights);
GLBINDING_API void WeightubvARB(GLint size, const GLubyte * weights);
GLBINDING_API void WeightuivARB(GLint size, const GLuint * weights);
GLBINDING_API void WeightusvARB(GLint size, const GLushort * weights);
GLBINDING_API void WindowPos2d(GLdouble x, GLdouble y);
GLBINDING_API void WindowPos2dARB(GLdouble x, GLdouble y);
GLBINDING_API void WindowPos2dMESA(GLdouble x, GLdouble y);
GLBINDING_API void WindowPos2dv(const GLdouble * v);
GLBINDING_API void WindowPos2dvARB(const GLdouble * v);
GLBINDING_API void WindowPos2dvMESA(const GLdouble * v);
GLBINDING_API void WindowPos2f(GLfloat x, GLfloat y);
GLBINDING_API void WindowPos2fARB(GLfloat x, GLfloat y);
GLBINDING_API void WindowPos2fMESA(GLfloat x, GLfloat y);
GLBINDING_API void WindowPos2fv(const GLfloat * v);
GLBINDING_API void WindowPos2fvARB(const GLfloat * v);
GLBINDING_API void WindowPos2fvMESA(const GLfloat * v);
GLBINDING_API void WindowPos2i(GLint x, GLint y);
GLBINDING_API void WindowPos2iARB(GLint x, GLint y);
GLBINDING_API void WindowPos2iMESA(GLint x, GLint y);
GLBINDING_API void WindowPos2iv(const GLint * v);
GLBINDING_API void WindowPos2ivARB(const GLint * v);
GLBINDING_API void WindowPos2ivMESA(const GLint * v);
GLBINDING_API void WindowPos2s(GLshort x, GLshort y);
GLBINDING_API void WindowPos2sARB(GLshort x, GLshort y);
GLBINDING_API void WindowPos2sMESA(GLshort x, GLshort y);
GLBINDING_API void WindowPos2sv(const GLshort * v);
GLBINDING_API void WindowPos2svARB(const GLshort * v);
GLBINDING_API void WindowPos2svMESA(const GLshort * v);
GLBINDING_API void WindowPos3d(GLdouble x, GLdouble y, GLdouble z);
GLBINDING_API void WindowPos3dARB(GLdouble x, GLdouble y, GLdouble z);
GLBINDING_API void WindowPos3dMESA(GLdouble x, GLdouble y, GLdouble z);
GLBINDING_API void WindowPos3dv(const GLdouble * v);
GLBINDING_API void WindowPos3dvARB(const GLdouble * v);
GLBINDING_API void WindowPos3dvMESA(const GLdouble * v);
GLBINDING_API void WindowPos3f(GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void WindowPos3fARB(GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void WindowPos3fMESA(GLfloat x, GLfloat y, GLfloat z);
GLBINDING_API void WindowPos3fv(const GLfloat * v);
GLBINDING_API void WindowPos3fvARB(const GLfloat * v);
GLBINDING_API void WindowPos3fvMESA(const GLfloat * v);
GLBINDING_API void WindowPos3i(GLint x, GLint y, GLint z);
GLBINDING_API void WindowPos3iARB(GLint x, GLint y, GLint z);
GLBINDING_API void WindowPos3iMESA(GLint x, GLint y, GLint z);
GLBINDING_API void WindowPos3iv(const GLint * v);
GLBINDING_API void WindowPos3ivARB(const GLint * v);
GLBINDING_API void WindowPos3ivMESA(const GLint * v);
GLBINDING_API void WindowPos3s(GLshort x, GLshort y, GLshort z);
GLBINDING_API void WindowPos3sARB(GLshort x, GLshort y, GLshort z);
GLBINDING_API void WindowPos3sMESA(GLshort x, GLshort y, GLshort z);
GLBINDING_API void WindowPos3sv(const GLshort * v);
GLBINDING_API void WindowPos3svARB(const GLshort * v);
GLBINDING_API void WindowPos3svMESA(const GLshort * v);
GLBINDING_API void WindowPos4dMESA(GLdouble x, GLdouble y, GLdouble z, GLdouble w);
GLBINDING_API void WindowPos4dvMESA(const GLdouble * v);
GLBINDING_API void WindowPos4fMESA(GLfloat x, GLfloat y, GLfloat z, GLfloat w);
GLBINDING_API void WindowPos4fvMESA(const GLfloat * v);
GLBINDING_API void WindowPos4iMESA(GLint x, GLint y, GLint z, GLint w);
GLBINDING_API void WindowPos4ivMESA(const GLint * v);
GLBINDING_API void WindowPos4sMESA(GLshort x, GLshort y, GLshort z, GLshort w);
GLBINDING_API void WindowPos4svMESA(const GLshort * v);
GLBINDING_API void WriteMaskEXT(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);


} // namespace gl
		