#pragma once

#include <glbinding/types.h>


namespace gl40core
{

using namespace gl;

enum class GLenum : unsigned int
{
	GL_ACTIVE_ATTRIBUTES = 0x8B89,
    GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A,
    GL_ACTIVE_SUBROUTINES = 0x8DE5,
    GL_ACTIVE_SUBROUTINE_MAX_LENGTH = 0x8E48,
    GL_ACTIVE_SUBROUTINE_UNIFORMS = 0x8DE6,
    GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = 0x8E47,
    GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = 0x8E49,
    GL_ACTIVE_TEXTURE = 0x84E0,
    GL_ACTIVE_UNIFORMS = 0x8B86,
    GL_ACTIVE_UNIFORM_BLOCKS = 0x8A36,
    GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = 0x8A35,
    GL_ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87,
    GL_ALIASED_LINE_WIDTH_RANGE = 0x846E,
    GL_ALPHA = 0x1906,
    GL_ALREADY_SIGNALED = 0x911A,
    GL_ALWAYS = 0x0207,
    GL_AND = 0x1501,
    GL_AND_INVERTED = 0x1504,
    GL_AND_REVERSE = 0x1502,
    GL_ANY_SAMPLES_PASSED = 0x8C2F,
    GL_ARRAY_BUFFER = 0x8892,
    GL_ARRAY_BUFFER_BINDING = 0x8894,
    GL_ATTACHED_SHADERS = 0x8B85,
    GL_BACK = 0x0405,
    GL_BACK_LEFT = 0x0402,
    GL_BACK_RIGHT = 0x0403,
    GL_BGR = 0x80E0,
    GL_BGRA = 0x80E1,
    GL_BGRA_INTEGER = 0x8D9B,
    GL_BGR_INTEGER = 0x8D9A,
    GL_BLEND = 0x0BE2,
    GL_BLEND_COLOR = 0x8005,
    GL_BLEND_DST = 0x0BE0,
    GL_BLEND_DST_ALPHA = 0x80CA,
    GL_BLEND_DST_RGB = 0x80C8,
    GL_BLEND_EQUATION = 0x8009,
    GL_BLEND_EQUATION_ALPHA = 0x883D,
    GL_BLEND_EQUATION_RGB = 0x8009,
    GL_BLEND_SRC = 0x0BE1,
    GL_BLEND_SRC_ALPHA = 0x80CB,
    GL_BLEND_SRC_RGB = 0x80C9,
    GL_BLUE = 0x1905,
    GL_BLUE_INTEGER = 0x8D96,
    GL_BOOL = 0x8B56,
    GL_BOOL_VEC2 = 0x8B57,
    GL_BOOL_VEC3 = 0x8B58,
    GL_BOOL_VEC4 = 0x8B59,
    GL_BUFFER_ACCESS = 0x88BB,
    GL_BUFFER_ACCESS_FLAGS = 0x911F,
    GL_BUFFER_MAPPED = 0x88BC,
    GL_BUFFER_MAP_LENGTH = 0x9120,
    GL_BUFFER_MAP_OFFSET = 0x9121,
    GL_BUFFER_MAP_POINTER = 0x88BD,
    GL_BUFFER_SIZE = 0x8764,
    GL_BUFFER_USAGE = 0x8765,
    GL_BYTE = 0x1400,
    GL_CCW = 0x0901,
    GL_CLAMP_READ_COLOR = 0x891C,
    GL_CLAMP_TO_BORDER = 0x812D,
    GL_CLAMP_TO_EDGE = 0x812F,
    GL_CLEAR = 0x1500,
    GL_CLIP_DISTANCE0 = 0x3000,
    GL_CLIP_DISTANCE1 = 0x3001,
    GL_CLIP_DISTANCE2 = 0x3002,
    GL_CLIP_DISTANCE3 = 0x3003,
    GL_CLIP_DISTANCE4 = 0x3004,
    GL_CLIP_DISTANCE5 = 0x3005,
    GL_CLIP_DISTANCE6 = 0x3006,
    GL_CLIP_DISTANCE7 = 0x3007,
    GL_COLOR = 0x1800,
    GL_COLOR_ATTACHMENT0 = 0x8CE0,
    GL_COLOR_ATTACHMENT1 = 0x8CE1,
    GL_COLOR_ATTACHMENT10 = 0x8CEA,
    GL_COLOR_ATTACHMENT11 = 0x8CEB,
    GL_COLOR_ATTACHMENT12 = 0x8CEC,
    GL_COLOR_ATTACHMENT13 = 0x8CED,
    GL_COLOR_ATTACHMENT14 = 0x8CEE,
    GL_COLOR_ATTACHMENT15 = 0x8CEF,
    GL_COLOR_ATTACHMENT2 = 0x8CE2,
    GL_COLOR_ATTACHMENT3 = 0x8CE3,
    GL_COLOR_ATTACHMENT4 = 0x8CE4,
    GL_COLOR_ATTACHMENT5 = 0x8CE5,
    GL_COLOR_ATTACHMENT6 = 0x8CE6,
    GL_COLOR_ATTACHMENT7 = 0x8CE7,
    GL_COLOR_ATTACHMENT8 = 0x8CE8,
    GL_COLOR_ATTACHMENT9 = 0x8CE9,
    GL_COLOR_CLEAR_VALUE = 0x0C22,
    GL_COLOR_LOGIC_OP = 0x0BF2,
    GL_COLOR_WRITEMASK = 0x0C23,
    GL_COMPARE_REF_TO_TEXTURE = 0x884E,
    GL_COMPATIBLE_SUBROUTINES = 0x8E4B,
    GL_COMPILE_STATUS = 0x8B81,
    GL_COMPRESSED_RED = 0x8225,
    GL_COMPRESSED_RED_RGTC1 = 0x8DBB,
    GL_COMPRESSED_RG = 0x8226,
    GL_COMPRESSED_RGB = 0x84ED,
    GL_COMPRESSED_RGBA = 0x84EE,
    GL_COMPRESSED_RG_RGTC2 = 0x8DBD,
    GL_COMPRESSED_SIGNED_RED_RGTC1 = 0x8DBC,
    GL_COMPRESSED_SIGNED_RG_RGTC2 = 0x8DBE,
    GL_COMPRESSED_SRGB = 0x8C48,
    GL_COMPRESSED_SRGB_ALPHA = 0x8C49,
    GL_COMPRESSED_TEXTURE_FORMATS = 0x86A3,
    GL_CONDITION_SATISFIED = 0x911C,
    GL_CONSTANT_ALPHA = 0x8003,
    GL_CONSTANT_COLOR = 0x8001,
    GL_CONTEXT_FLAGS = 0x821E,
    GL_CONTEXT_PROFILE_MASK = 0x9126,
    GL_COPY = 0x1503,
    GL_COPY_INVERTED = 0x150C,
    GL_COPY_READ_BUFFER = 0x8F36,
    GL_COPY_READ_BUFFER_BINDING = 0x8F36,
    GL_COPY_WRITE_BUFFER = 0x8F37,
    GL_COPY_WRITE_BUFFER_BINDING = 0x8F37,
    GL_CULL_FACE = 0x0B44,
    GL_CULL_FACE_MODE = 0x0B45,
    GL_CURRENT_PROGRAM = 0x8B8D,
    GL_CURRENT_QUERY = 0x8865,
    GL_CURRENT_VERTEX_ATTRIB = 0x8626,
    GL_CW = 0x0900,
    GL_DECR = 0x1E03,
    GL_DECR_WRAP = 0x8508,
    GL_DELETE_STATUS = 0x8B80,
    GL_DEPTH = 0x1801,
    GL_DEPTH24_STENCIL8 = 0x88F0,
    GL_DEPTH32F_STENCIL8 = 0x8CAD,
    GL_DEPTH_ATTACHMENT = 0x8D00,
    GL_DEPTH_CLAMP = 0x864F,
    GL_DEPTH_CLEAR_VALUE = 0x0B73,
    GL_DEPTH_COMPONENT = 0x1902,
    GL_DEPTH_COMPONENT16 = 0x81A5,
    GL_DEPTH_COMPONENT24 = 0x81A6,
    GL_DEPTH_COMPONENT32 = 0x81A7,
    GL_DEPTH_COMPONENT32F = 0x8CAC,
    GL_DEPTH_FUNC = 0x0B74,
    GL_DEPTH_RANGE = 0x0B70,
    GL_DEPTH_STENCIL = 0x84F9,
    GL_DEPTH_STENCIL_ATTACHMENT = 0x821A,
    GL_DEPTH_TEST = 0x0B71,
    GL_DEPTH_WRITEMASK = 0x0B72,
    GL_DITHER = 0x0BD0,
    GL_DONT_CARE = 0x1100,
    GL_DOUBLE = 0x140A,
    GL_DOUBLEBUFFER = 0x0C32,
    GL_DOUBLE_MAT2 = 0x8F46,
    GL_DOUBLE_MAT2x3 = 0x8F49,
    GL_DOUBLE_MAT2x4 = 0x8F4A,
    GL_DOUBLE_MAT3 = 0x8F47,
    GL_DOUBLE_MAT3x2 = 0x8F4B,
    GL_DOUBLE_MAT3x4 = 0x8F4C,
    GL_DOUBLE_MAT4 = 0x8F48,
    GL_DOUBLE_MAT4x2 = 0x8F4D,
    GL_DOUBLE_MAT4x3 = 0x8F4E,
    GL_DOUBLE_VEC2 = 0x8FFC,
    GL_DOUBLE_VEC3 = 0x8FFD,
    GL_DOUBLE_VEC4 = 0x8FFE,
    GL_DRAW_BUFFER = 0x0C01,
    GL_DRAW_BUFFER0 = 0x8825,
    GL_DRAW_BUFFER1 = 0x8826,
    GL_DRAW_BUFFER10 = 0x882F,
    GL_DRAW_BUFFER11 = 0x8830,
    GL_DRAW_BUFFER12 = 0x8831,
    GL_DRAW_BUFFER13 = 0x8832,
    GL_DRAW_BUFFER14 = 0x8833,
    GL_DRAW_BUFFER15 = 0x8834,
    GL_DRAW_BUFFER2 = 0x8827,
    GL_DRAW_BUFFER3 = 0x8828,
    GL_DRAW_BUFFER4 = 0x8829,
    GL_DRAW_BUFFER5 = 0x882A,
    GL_DRAW_BUFFER6 = 0x882B,
    GL_DRAW_BUFFER7 = 0x882C,
    GL_DRAW_BUFFER8 = 0x882D,
    GL_DRAW_BUFFER9 = 0x882E,
    GL_DRAW_FRAMEBUFFER = 0x8CA9,
    GL_DRAW_FRAMEBUFFER_BINDING = 0x8CA6,
    GL_DRAW_INDIRECT_BUFFER = 0x8F3F,
    GL_DRAW_INDIRECT_BUFFER_BINDING = 0x8F43,
    GL_DST_ALPHA = 0x0304,
    GL_DST_COLOR = 0x0306,
    GL_DYNAMIC_COPY = 0x88EA,
    GL_DYNAMIC_DRAW = 0x88E8,
    GL_DYNAMIC_READ = 0x88E9,
    GL_ELEMENT_ARRAY_BUFFER = 0x8893,
    GL_ELEMENT_ARRAY_BUFFER_BINDING = 0x8895,
    GL_EQUAL = 0x0202,
    GL_EQUIV = 0x1509,
    GL_EXTENSIONS = 0x1F03,
    GL_FASTEST = 0x1101,
    GL_FILL = 0x1B02,
    GL_FIRST_VERTEX_CONVENTION = 0x8E4D,
    GL_FIXED_ONLY = 0x891D,
    GL_FLOAT = 0x1406,
    GL_FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8DAD,
    GL_FLOAT_MAT2 = 0x8B5A,
    GL_FLOAT_MAT2x3 = 0x8B65,
    GL_FLOAT_MAT2x4 = 0x8B66,
    GL_FLOAT_MAT3 = 0x8B5B,
    GL_FLOAT_MAT3x2 = 0x8B67,
    GL_FLOAT_MAT3x4 = 0x8B68,
    GL_FLOAT_MAT4 = 0x8B5C,
    GL_FLOAT_MAT4x2 = 0x8B69,
    GL_FLOAT_MAT4x3 = 0x8B6A,
    GL_FLOAT_VEC2 = 0x8B50,
    GL_FLOAT_VEC3 = 0x8B51,
    GL_FLOAT_VEC4 = 0x8B52,
    GL_FRACTIONAL_EVEN = 0x8E7C,
    GL_FRACTIONAL_ODD = 0x8E7B,
    GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = 0x8E5D,
    GL_FRAGMENT_SHADER = 0x8B30,
    GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B,
    GL_FRAMEBUFFER = 0x8D40,
    GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215,
    GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214,
    GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210,
    GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211,
    GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216,
    GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213,
    GL_FRAMEBUFFER_ATTACHMENT_LAYERED = 0x8DA7,
    GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8CD1,
    GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8CD0,
    GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212,
    GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217,
    GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8CD3,
    GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8CD4,
    GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8CD2,
    GL_FRAMEBUFFER_BINDING = 0x8CA6,
    GL_FRAMEBUFFER_COMPLETE = 0x8CD5,
    GL_FRAMEBUFFER_DEFAULT = 0x8218,
    GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8CD6,
    GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8CD9,
    GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = 0x8CDB,
    GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = 0x8DA8,
    GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8CD7,
    GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8D56,
    GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = 0x8CDC,
    GL_FRAMEBUFFER_SRGB = 0x8DB9,
    GL_FRAMEBUFFER_UNDEFINED = 0x8219,
    GL_FRAMEBUFFER_UNSUPPORTED = 0x8CDD,
    GL_FRONT = 0x0404,
    GL_FRONT_AND_BACK = 0x0408,
    GL_FRONT_FACE = 0x0B46,
    GL_FRONT_LEFT = 0x0400,
    GL_FRONT_RIGHT = 0x0401,
    GL_FUNC_ADD = 0x8006,
    GL_FUNC_REVERSE_SUBTRACT = 0x800B,
    GL_FUNC_SUBTRACT = 0x800A,
    GL_GEOMETRY_INPUT_TYPE = 0x8917,
    GL_GEOMETRY_OUTPUT_TYPE = 0x8918,
    GL_GEOMETRY_SHADER = 0x8DD9,
    GL_GEOMETRY_SHADER_INVOCATIONS = 0x887F,
    GL_GEOMETRY_VERTICES_OUT = 0x8916,
    GL_GEQUAL = 0x0206,
    GL_GREATER = 0x0204,
    GL_GREEN = 0x1904,
    GL_GREEN_INTEGER = 0x8D95,
    GL_HALF_FLOAT = 0x140B,
    GL_INCR = 0x1E02,
    GL_INCR_WRAP = 0x8507,
    GL_INDEX = 0x8222,
    GL_INFO_LOG_LENGTH = 0x8B84,
    GL_INT = 0x1404,
    GL_INTERLEAVED_ATTRIBS = 0x8C8C,
    GL_INT_2_10_10_10_REV = 0x8D9F,
    GL_INT_SAMPLER_1D = 0x8DC9,
    GL_INT_SAMPLER_1D_ARRAY = 0x8DCE,
    GL_INT_SAMPLER_2D = 0x8DCA,
    GL_INT_SAMPLER_2D_ARRAY = 0x8DCF,
    GL_INT_SAMPLER_2D_MULTISAMPLE = 0x9109,
    GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910C,
    GL_INT_SAMPLER_2D_RECT = 0x8DCD,
    GL_INT_SAMPLER_3D = 0x8DCB,
    GL_INT_SAMPLER_BUFFER = 0x8DD0,
    GL_INT_SAMPLER_CUBE = 0x8DCC,
    GL_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900E,
    GL_INT_VEC2 = 0x8B53,
    GL_INT_VEC3 = 0x8B54,
    GL_INT_VEC4 = 0x8B55,
    GL_INVALID_ENUM = 0x0500,
    GL_INVALID_FRAMEBUFFER_OPERATION = 0x0506,
    GL_INVALID_OPERATION = 0x0502,
    GL_INVALID_VALUE = 0x0501,
    GL_INVERT = 0x150A,
    GL_ISOLINES = 0x8E7A,
    GL_KEEP = 0x1E00,
    GL_LAST_VERTEX_CONVENTION = 0x8E4E,
    GL_LEFT = 0x0406,
    GL_LEQUAL = 0x0203,
    GL_LESS = 0x0201,
    GL_LINE = 0x1B01,
    GL_LINEAR = 0x2601,
    GL_LINEAR_MIPMAP_LINEAR = 0x2703,
    GL_LINEAR_MIPMAP_NEAREST = 0x2701,
    GL_LINES = 0x0001,
    GL_LINES_ADJACENCY = 0x000A,
    GL_LINE_LOOP = 0x0002,
    GL_LINE_SMOOTH = 0x0B20,
    GL_LINE_SMOOTH_HINT = 0x0C52,
    GL_LINE_STRIP = 0x0003,
    GL_LINE_STRIP_ADJACENCY = 0x000B,
    GL_LINE_WIDTH = 0x0B21,
    GL_LINE_WIDTH_GRANULARITY = 0x0B23,
    GL_LINE_WIDTH_RANGE = 0x0B22,
    GL_LINK_STATUS = 0x8B82,
    GL_LOGIC_OP_MODE = 0x0BF0,
    GL_LOWER_LEFT = 0x8CA1,
    GL_MAJOR_VERSION = 0x821B,
    GL_MAX = 0x8008,
    GL_MAX_3D_TEXTURE_SIZE = 0x8073,
    GL_MAX_ARRAY_TEXTURE_LAYERS = 0x88FF,
    GL_MAX_CLIP_DISTANCES = 0x0D32,
    GL_MAX_COLOR_ATTACHMENTS = 0x8CDF,
    GL_MAX_COLOR_TEXTURE_SAMPLES = 0x910E,
    GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8A33,
    GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E1E,
    GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E1F,
    GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D,
    GL_MAX_COMBINED_UNIFORM_BLOCKS = 0x8A2E,
    GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8A31,
    GL_MAX_CUBE_MAP_TEXTURE_SIZE = 0x851C,
    GL_MAX_DEPTH_TEXTURE_SAMPLES = 0x910F,
    GL_MAX_DRAW_BUFFERS = 0x8824,
    GL_MAX_DUAL_SOURCE_DRAW_BUFFERS = 0x88FC,
    GL_MAX_ELEMENTS_INDICES = 0x80E9,
    GL_MAX_ELEMENTS_VERTICES = 0x80E8,
    GL_MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125,
    GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5C,
    GL_MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8A2D,
    GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8B49,
    GL_MAX_GEOMETRY_INPUT_COMPONENTS = 0x9123,
    GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = 0x9124,
    GL_MAX_GEOMETRY_OUTPUT_VERTICES = 0x8DE0,
    GL_MAX_GEOMETRY_SHADER_INVOCATIONS = 0x8E5A,
    GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = 0x8C29,
    GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = 0x8DE1,
    GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = 0x8DDF,
    GL_MAX_INTEGER_SAMPLES = 0x9110,
    GL_MAX_PATCH_VERTICES = 0x8E7D,
    GL_MAX_PROGRAM_TEXEL_OFFSET = 0x8905,
    GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5F,
    GL_MAX_RECTANGLE_TEXTURE_SIZE = 0x84F8,
    GL_MAX_RENDERBUFFER_SIZE = 0x84E8,
    GL_MAX_SAMPLES = 0x8D57,
    GL_MAX_SAMPLE_MASK_WORDS = 0x8E59,
    GL_MAX_SERVER_WAIT_TIMEOUT = 0x9111,
    GL_MAX_SUBROUTINES = 0x8DE7,
    GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS = 0x8DE8,
    GL_MAX_TESS_CONTROL_INPUT_COMPONENTS = 0x886C,
    GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS = 0x8E83,
    GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = 0x8E81,
    GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = 0x8E85,
    GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS = 0x8E89,
    GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS = 0x8E7F,
    GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS = 0x886D,
    GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = 0x8E86,
    GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = 0x8E82,
    GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS = 0x8E8A,
    GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = 0x8E80,
    GL_MAX_TESS_GEN_LEVEL = 0x8E7E,
    GL_MAX_TESS_PATCH_COMPONENTS = 0x8E84,
    GL_MAX_TEXTURE_BUFFER_SIZE = 0x8C2B,
    GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872,
    GL_MAX_TEXTURE_LOD_BIAS = 0x84FD,
    GL_MAX_TEXTURE_SIZE = 0x0D33,
    GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = 0x8E70,
    GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8C8A,
    GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8C8B,
    GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8C80,
    GL_MAX_UNIFORM_BLOCK_SIZE = 0x8A30,
    GL_MAX_UNIFORM_BUFFER_BINDINGS = 0x8A2F,
    GL_MAX_VARYING_COMPONENTS = 0x8B4B,
    GL_MAX_VARYING_FLOATS = 0x8B4B,
    GL_MAX_VERTEX_ATTRIBS = 0x8869,
    GL_MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122,
    GL_MAX_VERTEX_STREAMS = 0x8E71,
    GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C,
    GL_MAX_VERTEX_UNIFORM_BLOCKS = 0x8A2B,
    GL_MAX_VERTEX_UNIFORM_COMPONENTS = 0x8B4A,
    GL_MAX_VIEWPORT_DIMS = 0x0D3A,
    GL_MIN = 0x8007,
    GL_MINOR_VERSION = 0x821C,
    GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = 0x8E5B,
    GL_MIN_PROGRAM_TEXEL_OFFSET = 0x8904,
    GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = 0x8E5E,
    GL_MIN_SAMPLE_SHADING_VALUE = 0x8C37,
    GL_MIRRORED_REPEAT = 0x8370,
    GL_MULTISAMPLE = 0x809D,
    GL_NAND = 0x150E,
    GL_NEAREST = 0x2600,
    GL_NEAREST_MIPMAP_LINEAR = 0x2702,
    GL_NEAREST_MIPMAP_NEAREST = 0x2700,
    GL_NEVER = 0x0200,
    GL_NICEST = 0x1102,
    GL_NONE = 0,
    GL_NOOP = 0x1505,
    GL_NOR = 0x1508,
    GL_NOTEQUAL = 0x0205,
    GL_NO_ERROR = 0,
    GL_NUM_COMPATIBLE_SUBROUTINES = 0x8E4A,
    GL_NUM_COMPRESSED_TEXTURE_FORMATS = 0x86A2,
    GL_NUM_EXTENSIONS = 0x821D,
    GL_OBJECT_TYPE = 0x9112,
    GL_ONE = 1,
    GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004,
    GL_ONE_MINUS_CONSTANT_COLOR = 0x8002,
    GL_ONE_MINUS_DST_ALPHA = 0x0305,
    GL_ONE_MINUS_DST_COLOR = 0x0307,
    GL_ONE_MINUS_SRC1_ALPHA = 0x88FB,
    GL_ONE_MINUS_SRC1_COLOR = 0x88FA,
    GL_ONE_MINUS_SRC_ALPHA = 0x0303,
    GL_ONE_MINUS_SRC_COLOR = 0x0301,
    GL_OR = 0x1507,
    GL_OR_INVERTED = 0x150D,
    GL_OR_REVERSE = 0x150B,
    GL_OUT_OF_MEMORY = 0x0505,
    GL_PACK_ALIGNMENT = 0x0D05,
    GL_PACK_IMAGE_HEIGHT = 0x806C,
    GL_PACK_LSB_FIRST = 0x0D01,
    GL_PACK_ROW_LENGTH = 0x0D02,
    GL_PACK_SKIP_IMAGES = 0x806B,
    GL_PACK_SKIP_PIXELS = 0x0D04,
    GL_PACK_SKIP_ROWS = 0x0D03,
    GL_PACK_SWAP_BYTES = 0x0D00,
    GL_PATCHES = 0x000E,
    GL_PATCH_DEFAULT_INNER_LEVEL = 0x8E73,
    GL_PATCH_DEFAULT_OUTER_LEVEL = 0x8E74,
    GL_PATCH_VERTICES = 0x8E72,
    GL_PIXEL_PACK_BUFFER = 0x88EB,
    GL_PIXEL_PACK_BUFFER_BINDING = 0x88ED,
    GL_PIXEL_UNPACK_BUFFER = 0x88EC,
    GL_PIXEL_UNPACK_BUFFER_BINDING = 0x88EF,
    GL_POINT = 0x1B00,
    GL_POINTS = 0x0000,
    GL_POINT_FADE_THRESHOLD_SIZE = 0x8128,
    GL_POINT_SIZE = 0x0B11,
    GL_POINT_SIZE_GRANULARITY = 0x0B13,
    GL_POINT_SIZE_RANGE = 0x0B12,
    GL_POINT_SPRITE_COORD_ORIGIN = 0x8CA0,
    GL_POLYGON_MODE = 0x0B40,
    GL_POLYGON_OFFSET_FACTOR = 0x8038,
    GL_POLYGON_OFFSET_FILL = 0x8037,
    GL_POLYGON_OFFSET_LINE = 0x2A02,
    GL_POLYGON_OFFSET_POINT = 0x2A01,
    GL_POLYGON_OFFSET_UNITS = 0x2A00,
    GL_POLYGON_SMOOTH = 0x0B41,
    GL_POLYGON_SMOOTH_HINT = 0x0C53,
    GL_PRIMITIVES_GENERATED = 0x8C87,
    GL_PRIMITIVE_RESTART = 0x8F9D,
    GL_PRIMITIVE_RESTART_INDEX = 0x8F9E,
    GL_PROGRAM_POINT_SIZE = 0x8642,
    GL_PROVOKING_VERTEX = 0x8E4F,
    GL_PROXY_TEXTURE_1D = 0x8063,
    GL_PROXY_TEXTURE_1D_ARRAY = 0x8C19,
    GL_PROXY_TEXTURE_2D = 0x8064,
    GL_PROXY_TEXTURE_2D_ARRAY = 0x8C1B,
    GL_PROXY_TEXTURE_2D_MULTISAMPLE = 0x9101,
    GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9103,
    GL_PROXY_TEXTURE_3D = 0x8070,
    GL_PROXY_TEXTURE_CUBE_MAP = 0x851B,
    GL_PROXY_TEXTURE_CUBE_MAP_ARRAY = 0x900B,
    GL_PROXY_TEXTURE_RECTANGLE = 0x84F7,
    GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = 0x8E4C,
    GL_QUERY_BY_REGION_NO_WAIT = 0x8E16,
    GL_QUERY_BY_REGION_WAIT = 0x8E15,
    GL_QUERY_COUNTER_BITS = 0x8864,
    GL_QUERY_NO_WAIT = 0x8E14,
    GL_QUERY_RESULT = 0x8866,
    GL_QUERY_RESULT_AVAILABLE = 0x8867,
    GL_QUERY_WAIT = 0x8E13,
    GL_R11F_G11F_B10F = 0x8C3A,
    GL_R16 = 0x822A,
    GL_R16F = 0x822D,
    GL_R16I = 0x8233,
    GL_R16UI = 0x8234,
    GL_R16_SNORM = 0x8F98,
    GL_R32F = 0x822E,
    GL_R32I = 0x8235,
    GL_R32UI = 0x8236,
    GL_R3_G3_B2 = 0x2A10,
    GL_R8 = 0x8229,
    GL_R8I = 0x8231,
    GL_R8UI = 0x8232,
    GL_R8_SNORM = 0x8F94,
    GL_RASTERIZER_DISCARD = 0x8C89,
    GL_READ_BUFFER = 0x0C02,
    GL_READ_FRAMEBUFFER = 0x8CA8,
    GL_READ_FRAMEBUFFER_BINDING = 0x8CAA,
    GL_READ_ONLY = 0x88B8,
    GL_READ_WRITE = 0x88BA,
    GL_RED = 0x1903,
    GL_RED_INTEGER = 0x8D94,
    GL_RENDERBUFFER = 0x8D41,
    GL_RENDERBUFFER_ALPHA_SIZE = 0x8D53,
    GL_RENDERBUFFER_BINDING = 0x8CA7,
    GL_RENDERBUFFER_BLUE_SIZE = 0x8D52,
    GL_RENDERBUFFER_DEPTH_SIZE = 0x8D54,
    GL_RENDERBUFFER_GREEN_SIZE = 0x8D51,
    GL_RENDERBUFFER_HEIGHT = 0x8D43,
    GL_RENDERBUFFER_INTERNAL_FORMAT = 0x8D44,
    GL_RENDERBUFFER_RED_SIZE = 0x8D50,
    GL_RENDERBUFFER_SAMPLES = 0x8CAB,
    GL_RENDERBUFFER_STENCIL_SIZE = 0x8D55,
    GL_RENDERBUFFER_WIDTH = 0x8D42,
    GL_RENDERER = 0x1F01,
    GL_REPEAT = 0x2901,
    GL_REPLACE = 0x1E01,
    GL_RG = 0x8227,
    GL_RG16 = 0x822C,
    GL_RG16F = 0x822F,
    GL_RG16I = 0x8239,
    GL_RG16UI = 0x823A,
    GL_RG16_SNORM = 0x8F99,
    GL_RG32F = 0x8230,
    GL_RG32I = 0x823B,
    GL_RG32UI = 0x823C,
    GL_RG8 = 0x822B,
    GL_RG8I = 0x8237,
    GL_RG8UI = 0x8238,
    GL_RG8_SNORM = 0x8F95,
    GL_RGB = 0x1907,
    GL_RGB10 = 0x8052,
    GL_RGB10_A2 = 0x8059,
    GL_RGB10_A2UI = 0x906F,
    GL_RGB12 = 0x8053,
    GL_RGB16 = 0x8054,
    GL_RGB16F = 0x881B,
    GL_RGB16I = 0x8D89,
    GL_RGB16UI = 0x8D77,
    GL_RGB16_SNORM = 0x8F9A,
    GL_RGB32F = 0x8815,
    GL_RGB32I = 0x8D83,
    GL_RGB32UI = 0x8D71,
    GL_RGB4 = 0x804F,
    GL_RGB5 = 0x8050,
    GL_RGB5_A1 = 0x8057,
    GL_RGB8 = 0x8051,
    GL_RGB8I = 0x8D8F,
    GL_RGB8UI = 0x8D7D,
    GL_RGB8_SNORM = 0x8F96,
    GL_RGB9_E5 = 0x8C3D,
    GL_RGBA = 0x1908,
    GL_RGBA12 = 0x805A,
    GL_RGBA16 = 0x805B,
    GL_RGBA16F = 0x881A,
    GL_RGBA16I = 0x8D88,
    GL_RGBA16UI = 0x8D76,
    GL_RGBA16_SNORM = 0x8F9B,
    GL_RGBA2 = 0x8055,
    GL_RGBA32F = 0x8814,
    GL_RGBA32I = 0x8D82,
    GL_RGBA32UI = 0x8D70,
    GL_RGBA4 = 0x8056,
    GL_RGBA8 = 0x8058,
    GL_RGBA8I = 0x8D8E,
    GL_RGBA8UI = 0x8D7C,
    GL_RGBA8_SNORM = 0x8F97,
    GL_RGBA_INTEGER = 0x8D99,
    GL_RGB_INTEGER = 0x8D98,
    GL_RG_INTEGER = 0x8228,
    GL_RIGHT = 0x0407,
    GL_SAMPLER_1D = 0x8B5D,
    GL_SAMPLER_1D_ARRAY = 0x8DC0,
    GL_SAMPLER_1D_ARRAY_SHADOW = 0x8DC3,
    GL_SAMPLER_1D_SHADOW = 0x8B61,
    GL_SAMPLER_2D = 0x8B5E,
    GL_SAMPLER_2D_ARRAY = 0x8DC1,
    GL_SAMPLER_2D_ARRAY_SHADOW = 0x8DC4,
    GL_SAMPLER_2D_MULTISAMPLE = 0x9108,
    GL_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910B,
    GL_SAMPLER_2D_RECT = 0x8B63,
    GL_SAMPLER_2D_RECT_SHADOW = 0x8B64,
    GL_SAMPLER_2D_SHADOW = 0x8B62,
    GL_SAMPLER_3D = 0x8B5F,
    GL_SAMPLER_BINDING = 0x8919,
    GL_SAMPLER_BUFFER = 0x8DC2,
    GL_SAMPLER_CUBE = 0x8B60,
    GL_SAMPLER_CUBE_MAP_ARRAY = 0x900C,
    GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = 0x900D,
    GL_SAMPLER_CUBE_SHADOW = 0x8DC5,
    GL_SAMPLES = 0x80A9,
    GL_SAMPLES_PASSED = 0x8914,
    GL_SAMPLE_ALPHA_TO_COVERAGE = 0x809E,
    GL_SAMPLE_ALPHA_TO_ONE = 0x809F,
    GL_SAMPLE_BUFFERS = 0x80A8,
    GL_SAMPLE_COVERAGE = 0x80A0,
    GL_SAMPLE_COVERAGE_INVERT = 0x80AB,
    GL_SAMPLE_COVERAGE_VALUE = 0x80AA,
    GL_SAMPLE_MASK = 0x8E51,
    GL_SAMPLE_MASK_VALUE = 0x8E52,
    GL_SAMPLE_POSITION = 0x8E50,
    GL_SAMPLE_SHADING = 0x8C36,
    GL_SCISSOR_BOX = 0x0C10,
    GL_SCISSOR_TEST = 0x0C11,
    GL_SEPARATE_ATTRIBS = 0x8C8D,
    GL_SET = 0x150F,
    GL_SHADER_SOURCE_LENGTH = 0x8B88,
    GL_SHADER_TYPE = 0x8B4F,
    GL_SHADING_LANGUAGE_VERSION = 0x8B8C,
    GL_SHORT = 0x1402,
    GL_SIGNALED = 0x9119,
    GL_SIGNED_NORMALIZED = 0x8F9C,
    GL_SMOOTH_LINE_WIDTH_GRANULARITY = 0x0B23,
    GL_SMOOTH_LINE_WIDTH_RANGE = 0x0B22,
    GL_SMOOTH_POINT_SIZE_GRANULARITY = 0x0B13,
    GL_SMOOTH_POINT_SIZE_RANGE = 0x0B12,
    GL_SRC1_ALPHA = 0x8589,
    GL_SRC1_COLOR = 0x88F9,
    GL_SRC_ALPHA = 0x0302,
    GL_SRC_ALPHA_SATURATE = 0x0308,
    GL_SRC_COLOR = 0x0300,
    GL_SRGB = 0x8C40,
    GL_SRGB8 = 0x8C41,
    GL_SRGB8_ALPHA8 = 0x8C43,
    GL_SRGB_ALPHA = 0x8C42,
    GL_STATIC_COPY = 0x88E6,
    GL_STATIC_DRAW = 0x88E4,
    GL_STATIC_READ = 0x88E5,
    GL_STENCIL = 0x1802,
    GL_STENCIL_ATTACHMENT = 0x8D20,
    GL_STENCIL_BACK_FAIL = 0x8801,
    GL_STENCIL_BACK_FUNC = 0x8800,
    GL_STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802,
    GL_STENCIL_BACK_PASS_DEPTH_PASS = 0x8803,
    GL_STENCIL_BACK_REF = 0x8CA3,
    GL_STENCIL_BACK_VALUE_MASK = 0x8CA4,
    GL_STENCIL_BACK_WRITEMASK = 0x8CA5,
    GL_STENCIL_CLEAR_VALUE = 0x0B91,
    GL_STENCIL_FAIL = 0x0B94,
    GL_STENCIL_FUNC = 0x0B92,
    GL_STENCIL_INDEX = 0x1901,
    GL_STENCIL_INDEX1 = 0x8D46,
    GL_STENCIL_INDEX16 = 0x8D49,
    GL_STENCIL_INDEX4 = 0x8D47,
    GL_STENCIL_INDEX8 = 0x8D48,
    GL_STENCIL_PASS_DEPTH_FAIL = 0x0B95,
    GL_STENCIL_PASS_DEPTH_PASS = 0x0B96,
    GL_STENCIL_REF = 0x0B97,
    GL_STENCIL_TEST = 0x0B90,
    GL_STENCIL_VALUE_MASK = 0x0B93,
    GL_STENCIL_WRITEMASK = 0x0B98,
    GL_STEREO = 0x0C33,
    GL_STREAM_COPY = 0x88E2,
    GL_STREAM_DRAW = 0x88E0,
    GL_STREAM_READ = 0x88E1,
    GL_SUBPIXEL_BITS = 0x0D50,
    GL_SYNC_CONDITION = 0x9113,
    GL_SYNC_FENCE = 0x9116,
    GL_SYNC_FLAGS = 0x9115,
    GL_SYNC_GPU_COMMANDS_COMPLETE = 0x9117,
    GL_SYNC_STATUS = 0x9114,
    GL_TESS_CONTROL_OUTPUT_VERTICES = 0x8E75,
    GL_TESS_CONTROL_SHADER = 0x8E88,
    GL_TESS_EVALUATION_SHADER = 0x8E87,
    GL_TESS_GEN_MODE = 0x8E76,
    GL_TESS_GEN_POINT_MODE = 0x8E79,
    GL_TESS_GEN_SPACING = 0x8E77,
    GL_TESS_GEN_VERTEX_ORDER = 0x8E78,
    GL_TEXTURE = 0x1702,
    GL_TEXTURE0 = 0x84C0,
    GL_TEXTURE1 = 0x84C1,
    GL_TEXTURE10 = 0x84CA,
    GL_TEXTURE11 = 0x84CB,
    GL_TEXTURE12 = 0x84CC,
    GL_TEXTURE13 = 0x84CD,
    GL_TEXTURE14 = 0x84CE,
    GL_TEXTURE15 = 0x84CF,
    GL_TEXTURE16 = 0x84D0,
    GL_TEXTURE17 = 0x84D1,
    GL_TEXTURE18 = 0x84D2,
    GL_TEXTURE19 = 0x84D3,
    GL_TEXTURE2 = 0x84C2,
    GL_TEXTURE20 = 0x84D4,
    GL_TEXTURE21 = 0x84D5,
    GL_TEXTURE22 = 0x84D6,
    GL_TEXTURE23 = 0x84D7,
    GL_TEXTURE24 = 0x84D8,
    GL_TEXTURE25 = 0x84D9,
    GL_TEXTURE26 = 0x84DA,
    GL_TEXTURE27 = 0x84DB,
    GL_TEXTURE28 = 0x84DC,
    GL_TEXTURE29 = 0x84DD,
    GL_TEXTURE3 = 0x84C3,
    GL_TEXTURE30 = 0x84DE,
    GL_TEXTURE31 = 0x84DF,
    GL_TEXTURE4 = 0x84C4,
    GL_TEXTURE5 = 0x84C5,
    GL_TEXTURE6 = 0x84C6,
    GL_TEXTURE7 = 0x84C7,
    GL_TEXTURE8 = 0x84C8,
    GL_TEXTURE9 = 0x84C9,
    GL_TEXTURE_1D = 0x0DE0,
    GL_TEXTURE_1D_ARRAY = 0x8C18,
    GL_TEXTURE_2D = 0x0DE1,
    GL_TEXTURE_2D_ARRAY = 0x8C1A,
    GL_TEXTURE_2D_MULTISAMPLE = 0x9100,
    GL_TEXTURE_2D_MULTISAMPLE_ARRAY = 0x9102,
    GL_TEXTURE_3D = 0x806F,
    GL_TEXTURE_ALPHA_SIZE = 0x805F,
    GL_TEXTURE_ALPHA_TYPE = 0x8C13,
    GL_TEXTURE_BASE_LEVEL = 0x813C,
    GL_TEXTURE_BINDING_1D = 0x8068,
    GL_TEXTURE_BINDING_1D_ARRAY = 0x8C1C,
    GL_TEXTURE_BINDING_2D = 0x8069,
    GL_TEXTURE_BINDING_2D_ARRAY = 0x8C1D,
    GL_TEXTURE_BINDING_2D_MULTISAMPLE = 0x9104,
    GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = 0x9105,
    GL_TEXTURE_BINDING_3D = 0x806A,
    GL_TEXTURE_BINDING_BUFFER = 0x8C2C,
    GL_TEXTURE_BINDING_CUBE_MAP = 0x8514,
    GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = 0x900A,
    GL_TEXTURE_BINDING_RECTANGLE = 0x84F6,
    GL_TEXTURE_BLUE_SIZE = 0x805E,
    GL_TEXTURE_BLUE_TYPE = 0x8C12,
    GL_TEXTURE_BORDER_COLOR = 0x1004,
    GL_TEXTURE_BUFFER = 0x8C2A,
    GL_TEXTURE_BUFFER_DATA_STORE_BINDING = 0x8C2D,
    GL_TEXTURE_COMPARE_FUNC = 0x884D,
    GL_TEXTURE_COMPARE_MODE = 0x884C,
    GL_TEXTURE_COMPRESSED = 0x86A1,
    GL_TEXTURE_COMPRESSED_IMAGE_SIZE = 0x86A0,
    GL_TEXTURE_COMPRESSION_HINT = 0x84EF,
    GL_TEXTURE_CUBE_MAP = 0x8513,
    GL_TEXTURE_CUBE_MAP_ARRAY = 0x9009,
    GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,
    GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,
    GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851A,
    GL_TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,
    GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,
    GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,
    GL_TEXTURE_CUBE_MAP_SEAMLESS = 0x884F,
    GL_TEXTURE_DEPTH = 0x8071,
    GL_TEXTURE_DEPTH_SIZE = 0x884A,
    GL_TEXTURE_DEPTH_TYPE = 0x8C16,
    GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = 0x9107,
    GL_TEXTURE_GREEN_SIZE = 0x805D,
    GL_TEXTURE_GREEN_TYPE = 0x8C11,
    GL_TEXTURE_HEIGHT = 0x1001,
    GL_TEXTURE_INTERNAL_FORMAT = 0x1003,
    GL_TEXTURE_LOD_BIAS = 0x8501,
    GL_TEXTURE_MAG_FILTER = 0x2800,
    GL_TEXTURE_MAX_LEVEL = 0x813D,
    GL_TEXTURE_MAX_LOD = 0x813B,
    GL_TEXTURE_MIN_FILTER = 0x2801,
    GL_TEXTURE_MIN_LOD = 0x813A,
    GL_TEXTURE_RECTANGLE = 0x84F5,
    GL_TEXTURE_RED_SIZE = 0x805C,
    GL_TEXTURE_RED_TYPE = 0x8C10,
    GL_TEXTURE_SAMPLES = 0x9106,
    GL_TEXTURE_SHARED_SIZE = 0x8C3F,
    GL_TEXTURE_STENCIL_SIZE = 0x88F1,
    GL_TEXTURE_SWIZZLE_A = 0x8E45,
    GL_TEXTURE_SWIZZLE_B = 0x8E44,
    GL_TEXTURE_SWIZZLE_G = 0x8E43,
    GL_TEXTURE_SWIZZLE_R = 0x8E42,
    GL_TEXTURE_SWIZZLE_RGBA = 0x8E46,
    GL_TEXTURE_WIDTH = 0x1000,
    GL_TEXTURE_WRAP_R = 0x8072,
    GL_TEXTURE_WRAP_S = 0x2802,
    GL_TEXTURE_WRAP_T = 0x2803,
    GL_TIMEOUT_EXPIRED = 0x911B,
    GL_TIMESTAMP = 0x8E28,
    GL_TIME_ELAPSED = 0x88BF,
    GL_TRANSFORM_FEEDBACK = 0x8E22,
    GL_TRANSFORM_FEEDBACK_ACTIVE = 0x8E24,
    GL_TRANSFORM_FEEDBACK_BINDING = 0x8E25,
    GL_TRANSFORM_FEEDBACK_BUFFER = 0x8C8E,
    GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = 0x8E24,
    GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8C8F,
    GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8C7F,
    GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED = 0x8E23,
    GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8C85,
    GL_TRANSFORM_FEEDBACK_BUFFER_START = 0x8C84,
    GL_TRANSFORM_FEEDBACK_PAUSED = 0x8E23,
    GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8C88,
    GL_TRANSFORM_FEEDBACK_VARYINGS = 0x8C83,
    GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 0x8C76,
    GL_TRIANGLES = 0x0004,
    GL_TRIANGLES_ADJACENCY = 0x000C,
    GL_TRIANGLE_FAN = 0x0006,
    GL_TRIANGLE_STRIP = 0x0005,
    GL_TRIANGLE_STRIP_ADJACENCY = 0x000D,
    GL_UNIFORM_ARRAY_STRIDE = 0x8A3C,
    GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8A42,
    GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8A43,
    GL_UNIFORM_BLOCK_BINDING = 0x8A3F,
    GL_UNIFORM_BLOCK_DATA_SIZE = 0x8A40,
    GL_UNIFORM_BLOCK_INDEX = 0x8A3A,
    GL_UNIFORM_BLOCK_NAME_LENGTH = 0x8A41,
    GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8A46,
    GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = 0x84F0,
    GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = 0x84F1,
    GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8A44,
    GL_UNIFORM_BUFFER = 0x8A11,
    GL_UNIFORM_BUFFER_BINDING = 0x8A28,
    GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8A34,
    GL_UNIFORM_BUFFER_SIZE = 0x8A2A,
    GL_UNIFORM_BUFFER_START = 0x8A29,
    GL_UNIFORM_IS_ROW_MAJOR = 0x8A3E,
    GL_UNIFORM_MATRIX_STRIDE = 0x8A3D,
    GL_UNIFORM_NAME_LENGTH = 0x8A39,
    GL_UNIFORM_OFFSET = 0x8A3B,
    GL_UNIFORM_SIZE = 0x8A38,
    GL_UNIFORM_TYPE = 0x8A37,
    GL_UNPACK_ALIGNMENT = 0x0CF5,
    GL_UNPACK_IMAGE_HEIGHT = 0x806E,
    GL_UNPACK_LSB_FIRST = 0x0CF1,
    GL_UNPACK_ROW_LENGTH = 0x0CF2,
    GL_UNPACK_SKIP_IMAGES = 0x806D,
    GL_UNPACK_SKIP_PIXELS = 0x0CF4,
    GL_UNPACK_SKIP_ROWS = 0x0CF3,
    GL_UNPACK_SWAP_BYTES = 0x0CF0,
    GL_UNSIGNALED = 0x9118,
    GL_UNSIGNED_BYTE = 0x1401,
    GL_UNSIGNED_BYTE_2_3_3_REV = 0x8362,
    GL_UNSIGNED_BYTE_3_3_2 = 0x8032,
    GL_UNSIGNED_INT = 0x1405,
    GL_UNSIGNED_INT_10F_11F_11F_REV = 0x8C3B,
    GL_UNSIGNED_INT_10_10_10_2 = 0x8036,
    GL_UNSIGNED_INT_24_8 = 0x84FA,
    GL_UNSIGNED_INT_2_10_10_10_REV = 0x8368,
    GL_UNSIGNED_INT_5_9_9_9_REV = 0x8C3E,
    GL_UNSIGNED_INT_8_8_8_8 = 0x8035,
    GL_UNSIGNED_INT_8_8_8_8_REV = 0x8367,
    GL_UNSIGNED_INT_SAMPLER_1D = 0x8DD1,
    GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = 0x8DD6,
    GL_UNSIGNED_INT_SAMPLER_2D = 0x8DD2,
    GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8DD7,
    GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = 0x910A,
    GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = 0x910D,
    GL_UNSIGNED_INT_SAMPLER_2D_RECT = 0x8DD5,
    GL_UNSIGNED_INT_SAMPLER_3D = 0x8DD3,
    GL_UNSIGNED_INT_SAMPLER_BUFFER = 0x8DD8,
    GL_UNSIGNED_INT_SAMPLER_CUBE = 0x8DD4,
    GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = 0x900F,
    GL_UNSIGNED_INT_VEC2 = 0x8DC6,
    GL_UNSIGNED_INT_VEC3 = 0x8DC7,
    GL_UNSIGNED_INT_VEC4 = 0x8DC8,
    GL_UNSIGNED_NORMALIZED = 0x8C17,
    GL_UNSIGNED_SHORT = 0x1403,
    GL_UNSIGNED_SHORT_1_5_5_5_REV = 0x8366,
    GL_UNSIGNED_SHORT_4_4_4_4 = 0x8033,
    GL_UNSIGNED_SHORT_4_4_4_4_REV = 0x8365,
    GL_UNSIGNED_SHORT_5_5_5_1 = 0x8034,
    GL_UNSIGNED_SHORT_5_6_5 = 0x8363,
    GL_UNSIGNED_SHORT_5_6_5_REV = 0x8364,
    GL_UPPER_LEFT = 0x8CA2,
    GL_VALIDATE_STATUS = 0x8B83,
    GL_VENDOR = 0x1F00,
    GL_VERSION = 0x1F02,
    GL_VERSION_ES_CL_1_0 = 1,
    GL_VERSION_ES_CL_1_1 = 1,
    GL_VERSION_ES_CM_1_1 = 1,
    GL_VERTEX_ARRAY_BINDING = 0x85B5,
    GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F,
    GL_VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88FE,
    GL_VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622,
    GL_VERTEX_ATTRIB_ARRAY_INTEGER = 0x88FD,
    GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A,
    GL_VERTEX_ATTRIB_ARRAY_POINTER = 0x8645,
    GL_VERTEX_ATTRIB_ARRAY_SIZE = 0x8623,
    GL_VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624,
    GL_VERTEX_ATTRIB_ARRAY_TYPE = 0x8625,
    GL_VERTEX_PROGRAM_POINT_SIZE = 0x8642,
    GL_VERTEX_SHADER = 0x8B31,
    GL_VIEWPORT = 0x0BA2,
    GL_WAIT_FAILED = 0x911D,
    GL_WRITE_ONLY = 0x88B9,
    GL_XOR = 0x1506,
    GL_ZERO = 0
};

// import enums to namespace

static const GLenum GL_ACTIVE_ATTRIBUTES = GLenum::GL_ACTIVE_ATTRIBUTES;
static const GLenum GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = GLenum::GL_ACTIVE_ATTRIBUTE_MAX_LENGTH;
static const GLenum GL_ACTIVE_SUBROUTINES = GLenum::GL_ACTIVE_SUBROUTINES;
static const GLenum GL_ACTIVE_SUBROUTINE_MAX_LENGTH = GLenum::GL_ACTIVE_SUBROUTINE_MAX_LENGTH;
static const GLenum GL_ACTIVE_SUBROUTINE_UNIFORMS = GLenum::GL_ACTIVE_SUBROUTINE_UNIFORMS;
static const GLenum GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS = GLenum::GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS;
static const GLenum GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH = GLenum::GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH;
static const GLenum GL_ACTIVE_TEXTURE = GLenum::GL_ACTIVE_TEXTURE;
static const GLenum GL_ACTIVE_UNIFORMS = GLenum::GL_ACTIVE_UNIFORMS;
static const GLenum GL_ACTIVE_UNIFORM_BLOCKS = GLenum::GL_ACTIVE_UNIFORM_BLOCKS;
static const GLenum GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = GLenum::GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH;
static const GLenum GL_ACTIVE_UNIFORM_MAX_LENGTH = GLenum::GL_ACTIVE_UNIFORM_MAX_LENGTH;
static const GLenum GL_ALIASED_LINE_WIDTH_RANGE = GLenum::GL_ALIASED_LINE_WIDTH_RANGE;
static const GLenum GL_ALPHA = GLenum::GL_ALPHA;
static const GLenum GL_ALREADY_SIGNALED = GLenum::GL_ALREADY_SIGNALED;
static const GLenum GL_ALWAYS = GLenum::GL_ALWAYS;
static const GLenum GL_AND = GLenum::GL_AND;
static const GLenum GL_AND_INVERTED = GLenum::GL_AND_INVERTED;
static const GLenum GL_AND_REVERSE = GLenum::GL_AND_REVERSE;
static const GLenum GL_ANY_SAMPLES_PASSED = GLenum::GL_ANY_SAMPLES_PASSED;
static const GLenum GL_ARRAY_BUFFER = GLenum::GL_ARRAY_BUFFER;
static const GLenum GL_ARRAY_BUFFER_BINDING = GLenum::GL_ARRAY_BUFFER_BINDING;
static const GLenum GL_ATTACHED_SHADERS = GLenum::GL_ATTACHED_SHADERS;
static const GLenum GL_BACK = GLenum::GL_BACK;
static const GLenum GL_BACK_LEFT = GLenum::GL_BACK_LEFT;
static const GLenum GL_BACK_RIGHT = GLenum::GL_BACK_RIGHT;
static const GLenum GL_BGR = GLenum::GL_BGR;
static const GLenum GL_BGRA = GLenum::GL_BGRA;
static const GLenum GL_BGRA_INTEGER = GLenum::GL_BGRA_INTEGER;
static const GLenum GL_BGR_INTEGER = GLenum::GL_BGR_INTEGER;
static const GLenum GL_BLEND = GLenum::GL_BLEND;
static const GLenum GL_BLEND_COLOR = GLenum::GL_BLEND_COLOR;
static const GLenum GL_BLEND_DST = GLenum::GL_BLEND_DST;
static const GLenum GL_BLEND_DST_ALPHA = GLenum::GL_BLEND_DST_ALPHA;
static const GLenum GL_BLEND_DST_RGB = GLenum::GL_BLEND_DST_RGB;
static const GLenum GL_BLEND_EQUATION = GLenum::GL_BLEND_EQUATION;
static const GLenum GL_BLEND_EQUATION_ALPHA = GLenum::GL_BLEND_EQUATION_ALPHA;
static const GLenum GL_BLEND_EQUATION_RGB = GLenum::GL_BLEND_EQUATION_RGB;
static const GLenum GL_BLEND_SRC = GLenum::GL_BLEND_SRC;
static const GLenum GL_BLEND_SRC_ALPHA = GLenum::GL_BLEND_SRC_ALPHA;
static const GLenum GL_BLEND_SRC_RGB = GLenum::GL_BLEND_SRC_RGB;
static const GLenum GL_BLUE = GLenum::GL_BLUE;
static const GLenum GL_BLUE_INTEGER = GLenum::GL_BLUE_INTEGER;
static const GLenum GL_BOOL = GLenum::GL_BOOL;
static const GLenum GL_BOOL_VEC2 = GLenum::GL_BOOL_VEC2;
static const GLenum GL_BOOL_VEC3 = GLenum::GL_BOOL_VEC3;
static const GLenum GL_BOOL_VEC4 = GLenum::GL_BOOL_VEC4;
static const GLenum GL_BUFFER_ACCESS = GLenum::GL_BUFFER_ACCESS;
static const GLenum GL_BUFFER_ACCESS_FLAGS = GLenum::GL_BUFFER_ACCESS_FLAGS;
static const GLenum GL_BUFFER_MAPPED = GLenum::GL_BUFFER_MAPPED;
static const GLenum GL_BUFFER_MAP_LENGTH = GLenum::GL_BUFFER_MAP_LENGTH;
static const GLenum GL_BUFFER_MAP_OFFSET = GLenum::GL_BUFFER_MAP_OFFSET;
static const GLenum GL_BUFFER_MAP_POINTER = GLenum::GL_BUFFER_MAP_POINTER;
static const GLenum GL_BUFFER_SIZE = GLenum::GL_BUFFER_SIZE;
static const GLenum GL_BUFFER_USAGE = GLenum::GL_BUFFER_USAGE;
static const GLenum GL_BYTE = GLenum::GL_BYTE;
static const GLenum GL_CCW = GLenum::GL_CCW;
static const GLenum GL_CLAMP_READ_COLOR = GLenum::GL_CLAMP_READ_COLOR;
static const GLenum GL_CLAMP_TO_BORDER = GLenum::GL_CLAMP_TO_BORDER;
static const GLenum GL_CLAMP_TO_EDGE = GLenum::GL_CLAMP_TO_EDGE;
static const GLenum GL_CLEAR = GLenum::GL_CLEAR;
static const GLenum GL_CLIP_DISTANCE0 = GLenum::GL_CLIP_DISTANCE0;
static const GLenum GL_CLIP_DISTANCE1 = GLenum::GL_CLIP_DISTANCE1;
static const GLenum GL_CLIP_DISTANCE2 = GLenum::GL_CLIP_DISTANCE2;
static const GLenum GL_CLIP_DISTANCE3 = GLenum::GL_CLIP_DISTANCE3;
static const GLenum GL_CLIP_DISTANCE4 = GLenum::GL_CLIP_DISTANCE4;
static const GLenum GL_CLIP_DISTANCE5 = GLenum::GL_CLIP_DISTANCE5;
static const GLenum GL_CLIP_DISTANCE6 = GLenum::GL_CLIP_DISTANCE6;
static const GLenum GL_CLIP_DISTANCE7 = GLenum::GL_CLIP_DISTANCE7;
static const GLenum GL_COLOR = GLenum::GL_COLOR;
static const GLenum GL_COLOR_ATTACHMENT0 = GLenum::GL_COLOR_ATTACHMENT0;
static const GLenum GL_COLOR_ATTACHMENT1 = GLenum::GL_COLOR_ATTACHMENT1;
static const GLenum GL_COLOR_ATTACHMENT10 = GLenum::GL_COLOR_ATTACHMENT10;
static const GLenum GL_COLOR_ATTACHMENT11 = GLenum::GL_COLOR_ATTACHMENT11;
static const GLenum GL_COLOR_ATTACHMENT12 = GLenum::GL_COLOR_ATTACHMENT12;
static const GLenum GL_COLOR_ATTACHMENT13 = GLenum::GL_COLOR_ATTACHMENT13;
static const GLenum GL_COLOR_ATTACHMENT14 = GLenum::GL_COLOR_ATTACHMENT14;
static const GLenum GL_COLOR_ATTACHMENT15 = GLenum::GL_COLOR_ATTACHMENT15;
static const GLenum GL_COLOR_ATTACHMENT2 = GLenum::GL_COLOR_ATTACHMENT2;
static const GLenum GL_COLOR_ATTACHMENT3 = GLenum::GL_COLOR_ATTACHMENT3;
static const GLenum GL_COLOR_ATTACHMENT4 = GLenum::GL_COLOR_ATTACHMENT4;
static const GLenum GL_COLOR_ATTACHMENT5 = GLenum::GL_COLOR_ATTACHMENT5;
static const GLenum GL_COLOR_ATTACHMENT6 = GLenum::GL_COLOR_ATTACHMENT6;
static const GLenum GL_COLOR_ATTACHMENT7 = GLenum::GL_COLOR_ATTACHMENT7;
static const GLenum GL_COLOR_ATTACHMENT8 = GLenum::GL_COLOR_ATTACHMENT8;
static const GLenum GL_COLOR_ATTACHMENT9 = GLenum::GL_COLOR_ATTACHMENT9;
static const GLenum GL_COLOR_CLEAR_VALUE = GLenum::GL_COLOR_CLEAR_VALUE;
static const GLenum GL_COLOR_LOGIC_OP = GLenum::GL_COLOR_LOGIC_OP;
static const GLenum GL_COLOR_WRITEMASK = GLenum::GL_COLOR_WRITEMASK;
static const GLenum GL_COMPARE_REF_TO_TEXTURE = GLenum::GL_COMPARE_REF_TO_TEXTURE;
static const GLenum GL_COMPATIBLE_SUBROUTINES = GLenum::GL_COMPATIBLE_SUBROUTINES;
static const GLenum GL_COMPILE_STATUS = GLenum::GL_COMPILE_STATUS;
static const GLenum GL_COMPRESSED_RED = GLenum::GL_COMPRESSED_RED;
static const GLenum GL_COMPRESSED_RED_RGTC1 = GLenum::GL_COMPRESSED_RED_RGTC1;
static const GLenum GL_COMPRESSED_RG = GLenum::GL_COMPRESSED_RG;
static const GLenum GL_COMPRESSED_RGB = GLenum::GL_COMPRESSED_RGB;
static const GLenum GL_COMPRESSED_RGBA = GLenum::GL_COMPRESSED_RGBA;
static const GLenum GL_COMPRESSED_RG_RGTC2 = GLenum::GL_COMPRESSED_RG_RGTC2;
static const GLenum GL_COMPRESSED_SIGNED_RED_RGTC1 = GLenum::GL_COMPRESSED_SIGNED_RED_RGTC1;
static const GLenum GL_COMPRESSED_SIGNED_RG_RGTC2 = GLenum::GL_COMPRESSED_SIGNED_RG_RGTC2;
static const GLenum GL_COMPRESSED_SRGB = GLenum::GL_COMPRESSED_SRGB;
static const GLenum GL_COMPRESSED_SRGB_ALPHA = GLenum::GL_COMPRESSED_SRGB_ALPHA;
static const GLenum GL_COMPRESSED_TEXTURE_FORMATS = GLenum::GL_COMPRESSED_TEXTURE_FORMATS;
static const GLenum GL_CONDITION_SATISFIED = GLenum::GL_CONDITION_SATISFIED;
static const GLenum GL_CONSTANT_ALPHA = GLenum::GL_CONSTANT_ALPHA;
static const GLenum GL_CONSTANT_COLOR = GLenum::GL_CONSTANT_COLOR;
static const GLenum GL_CONTEXT_FLAGS = GLenum::GL_CONTEXT_FLAGS;
static const GLenum GL_CONTEXT_PROFILE_MASK = GLenum::GL_CONTEXT_PROFILE_MASK;
static const GLenum GL_COPY = GLenum::GL_COPY;
static const GLenum GL_COPY_INVERTED = GLenum::GL_COPY_INVERTED;
static const GLenum GL_COPY_READ_BUFFER = GLenum::GL_COPY_READ_BUFFER;
static const GLenum GL_COPY_READ_BUFFER_BINDING = GLenum::GL_COPY_READ_BUFFER_BINDING;
static const GLenum GL_COPY_WRITE_BUFFER = GLenum::GL_COPY_WRITE_BUFFER;
static const GLenum GL_COPY_WRITE_BUFFER_BINDING = GLenum::GL_COPY_WRITE_BUFFER_BINDING;
static const GLenum GL_CULL_FACE = GLenum::GL_CULL_FACE;
static const GLenum GL_CULL_FACE_MODE = GLenum::GL_CULL_FACE_MODE;
static const GLenum GL_CURRENT_PROGRAM = GLenum::GL_CURRENT_PROGRAM;
static const GLenum GL_CURRENT_QUERY = GLenum::GL_CURRENT_QUERY;
static const GLenum GL_CURRENT_VERTEX_ATTRIB = GLenum::GL_CURRENT_VERTEX_ATTRIB;
static const GLenum GL_CW = GLenum::GL_CW;
static const GLenum GL_DECR = GLenum::GL_DECR;
static const GLenum GL_DECR_WRAP = GLenum::GL_DECR_WRAP;
static const GLenum GL_DELETE_STATUS = GLenum::GL_DELETE_STATUS;
static const GLenum GL_DEPTH = GLenum::GL_DEPTH;
static const GLenum GL_DEPTH24_STENCIL8 = GLenum::GL_DEPTH24_STENCIL8;
static const GLenum GL_DEPTH32F_STENCIL8 = GLenum::GL_DEPTH32F_STENCIL8;
static const GLenum GL_DEPTH_ATTACHMENT = GLenum::GL_DEPTH_ATTACHMENT;
static const GLenum GL_DEPTH_CLAMP = GLenum::GL_DEPTH_CLAMP;
static const GLenum GL_DEPTH_CLEAR_VALUE = GLenum::GL_DEPTH_CLEAR_VALUE;
static const GLenum GL_DEPTH_COMPONENT = GLenum::GL_DEPTH_COMPONENT;
static const GLenum GL_DEPTH_COMPONENT16 = GLenum::GL_DEPTH_COMPONENT16;
static const GLenum GL_DEPTH_COMPONENT24 = GLenum::GL_DEPTH_COMPONENT24;
static const GLenum GL_DEPTH_COMPONENT32 = GLenum::GL_DEPTH_COMPONENT32;
static const GLenum GL_DEPTH_COMPONENT32F = GLenum::GL_DEPTH_COMPONENT32F;
static const GLenum GL_DEPTH_FUNC = GLenum::GL_DEPTH_FUNC;
static const GLenum GL_DEPTH_RANGE = GLenum::GL_DEPTH_RANGE;
static const GLenum GL_DEPTH_STENCIL = GLenum::GL_DEPTH_STENCIL;
static const GLenum GL_DEPTH_STENCIL_ATTACHMENT = GLenum::GL_DEPTH_STENCIL_ATTACHMENT;
static const GLenum GL_DEPTH_TEST = GLenum::GL_DEPTH_TEST;
static const GLenum GL_DEPTH_WRITEMASK = GLenum::GL_DEPTH_WRITEMASK;
static const GLenum GL_DITHER = GLenum::GL_DITHER;
static const GLenum GL_DONT_CARE = GLenum::GL_DONT_CARE;
static const GLenum GL_DOUBLE = GLenum::GL_DOUBLE;
static const GLenum GL_DOUBLEBUFFER = GLenum::GL_DOUBLEBUFFER;
static const GLenum GL_DOUBLE_MAT2 = GLenum::GL_DOUBLE_MAT2;
static const GLenum GL_DOUBLE_MAT2x3 = GLenum::GL_DOUBLE_MAT2x3;
static const GLenum GL_DOUBLE_MAT2x4 = GLenum::GL_DOUBLE_MAT2x4;
static const GLenum GL_DOUBLE_MAT3 = GLenum::GL_DOUBLE_MAT3;
static const GLenum GL_DOUBLE_MAT3x2 = GLenum::GL_DOUBLE_MAT3x2;
static const GLenum GL_DOUBLE_MAT3x4 = GLenum::GL_DOUBLE_MAT3x4;
static const GLenum GL_DOUBLE_MAT4 = GLenum::GL_DOUBLE_MAT4;
static const GLenum GL_DOUBLE_MAT4x2 = GLenum::GL_DOUBLE_MAT4x2;
static const GLenum GL_DOUBLE_MAT4x3 = GLenum::GL_DOUBLE_MAT4x3;
static const GLenum GL_DOUBLE_VEC2 = GLenum::GL_DOUBLE_VEC2;
static const GLenum GL_DOUBLE_VEC3 = GLenum::GL_DOUBLE_VEC3;
static const GLenum GL_DOUBLE_VEC4 = GLenum::GL_DOUBLE_VEC4;
static const GLenum GL_DRAW_BUFFER = GLenum::GL_DRAW_BUFFER;
static const GLenum GL_DRAW_BUFFER0 = GLenum::GL_DRAW_BUFFER0;
static const GLenum GL_DRAW_BUFFER1 = GLenum::GL_DRAW_BUFFER1;
static const GLenum GL_DRAW_BUFFER10 = GLenum::GL_DRAW_BUFFER10;
static const GLenum GL_DRAW_BUFFER11 = GLenum::GL_DRAW_BUFFER11;
static const GLenum GL_DRAW_BUFFER12 = GLenum::GL_DRAW_BUFFER12;
static const GLenum GL_DRAW_BUFFER13 = GLenum::GL_DRAW_BUFFER13;
static const GLenum GL_DRAW_BUFFER14 = GLenum::GL_DRAW_BUFFER14;
static const GLenum GL_DRAW_BUFFER15 = GLenum::GL_DRAW_BUFFER15;
static const GLenum GL_DRAW_BUFFER2 = GLenum::GL_DRAW_BUFFER2;
static const GLenum GL_DRAW_BUFFER3 = GLenum::GL_DRAW_BUFFER3;
static const GLenum GL_DRAW_BUFFER4 = GLenum::GL_DRAW_BUFFER4;
static const GLenum GL_DRAW_BUFFER5 = GLenum::GL_DRAW_BUFFER5;
static const GLenum GL_DRAW_BUFFER6 = GLenum::GL_DRAW_BUFFER6;
static const GLenum GL_DRAW_BUFFER7 = GLenum::GL_DRAW_BUFFER7;
static const GLenum GL_DRAW_BUFFER8 = GLenum::GL_DRAW_BUFFER8;
static const GLenum GL_DRAW_BUFFER9 = GLenum::GL_DRAW_BUFFER9;
static const GLenum GL_DRAW_FRAMEBUFFER = GLenum::GL_DRAW_FRAMEBUFFER;
static const GLenum GL_DRAW_FRAMEBUFFER_BINDING = GLenum::GL_DRAW_FRAMEBUFFER_BINDING;
static const GLenum GL_DRAW_INDIRECT_BUFFER = GLenum::GL_DRAW_INDIRECT_BUFFER;
static const GLenum GL_DRAW_INDIRECT_BUFFER_BINDING = GLenum::GL_DRAW_INDIRECT_BUFFER_BINDING;
static const GLenum GL_DST_ALPHA = GLenum::GL_DST_ALPHA;
static const GLenum GL_DST_COLOR = GLenum::GL_DST_COLOR;
static const GLenum GL_DYNAMIC_COPY = GLenum::GL_DYNAMIC_COPY;
static const GLenum GL_DYNAMIC_DRAW = GLenum::GL_DYNAMIC_DRAW;
static const GLenum GL_DYNAMIC_READ = GLenum::GL_DYNAMIC_READ;
static const GLenum GL_ELEMENT_ARRAY_BUFFER = GLenum::GL_ELEMENT_ARRAY_BUFFER;
static const GLenum GL_ELEMENT_ARRAY_BUFFER_BINDING = GLenum::GL_ELEMENT_ARRAY_BUFFER_BINDING;
static const GLenum GL_EQUAL = GLenum::GL_EQUAL;
static const GLenum GL_EQUIV = GLenum::GL_EQUIV;
static const GLenum GL_EXTENSIONS = GLenum::GL_EXTENSIONS;
static const GLenum GL_FASTEST = GLenum::GL_FASTEST;
static const GLenum GL_FILL = GLenum::GL_FILL;
static const GLenum GL_FIRST_VERTEX_CONVENTION = GLenum::GL_FIRST_VERTEX_CONVENTION;
static const GLenum GL_FIXED_ONLY = GLenum::GL_FIXED_ONLY;
static const GLenum GL_FLOAT = GLenum::GL_FLOAT;
static const GLenum GL_FLOAT_32_UNSIGNED_INT_24_8_REV = GLenum::GL_FLOAT_32_UNSIGNED_INT_24_8_REV;
static const GLenum GL_FLOAT_MAT2 = GLenum::GL_FLOAT_MAT2;
static const GLenum GL_FLOAT_MAT2x3 = GLenum::GL_FLOAT_MAT2x3;
static const GLenum GL_FLOAT_MAT2x4 = GLenum::GL_FLOAT_MAT2x4;
static const GLenum GL_FLOAT_MAT3 = GLenum::GL_FLOAT_MAT3;
static const GLenum GL_FLOAT_MAT3x2 = GLenum::GL_FLOAT_MAT3x2;
static const GLenum GL_FLOAT_MAT3x4 = GLenum::GL_FLOAT_MAT3x4;
static const GLenum GL_FLOAT_MAT4 = GLenum::GL_FLOAT_MAT4;
static const GLenum GL_FLOAT_MAT4x2 = GLenum::GL_FLOAT_MAT4x2;
static const GLenum GL_FLOAT_MAT4x3 = GLenum::GL_FLOAT_MAT4x3;
static const GLenum GL_FLOAT_VEC2 = GLenum::GL_FLOAT_VEC2;
static const GLenum GL_FLOAT_VEC3 = GLenum::GL_FLOAT_VEC3;
static const GLenum GL_FLOAT_VEC4 = GLenum::GL_FLOAT_VEC4;
static const GLenum GL_FRACTIONAL_EVEN = GLenum::GL_FRACTIONAL_EVEN;
static const GLenum GL_FRACTIONAL_ODD = GLenum::GL_FRACTIONAL_ODD;
static const GLenum GL_FRAGMENT_INTERPOLATION_OFFSET_BITS = GLenum::GL_FRAGMENT_INTERPOLATION_OFFSET_BITS;
static const GLenum GL_FRAGMENT_SHADER = GLenum::GL_FRAGMENT_SHADER;
static const GLenum GL_FRAGMENT_SHADER_DERIVATIVE_HINT = GLenum::GL_FRAGMENT_SHADER_DERIVATIVE_HINT;
static const GLenum GL_FRAMEBUFFER = GLenum::GL_FRAMEBUFFER;
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = GLenum::GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE;
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = GLenum::GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE;
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = GLenum::GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING;
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = GLenum::GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE;
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = GLenum::GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE;
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = GLenum::GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE;
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_LAYERED = GLenum::GL_FRAMEBUFFER_ATTACHMENT_LAYERED;
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = GLenum::GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME;
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = GLenum::GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE;
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = GLenum::GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE;
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = GLenum::GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE;
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = GLenum::GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE;
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = GLenum::GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER;
static const GLenum GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = GLenum::GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL;
static const GLenum GL_FRAMEBUFFER_BINDING = GLenum::GL_FRAMEBUFFER_BINDING;
static const GLenum GL_FRAMEBUFFER_COMPLETE = GLenum::GL_FRAMEBUFFER_COMPLETE;
static const GLenum GL_FRAMEBUFFER_DEFAULT = GLenum::GL_FRAMEBUFFER_DEFAULT;
static const GLenum GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = GLenum::GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT;
static const GLenum GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = GLenum::GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS;
static const GLenum GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER = GLenum::GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER;
static const GLenum GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS = GLenum::GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS;
static const GLenum GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = GLenum::GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT;
static const GLenum GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = GLenum::GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE;
static const GLenum GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER = GLenum::GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER;
static const GLenum GL_FRAMEBUFFER_SRGB = GLenum::GL_FRAMEBUFFER_SRGB;
static const GLenum GL_FRAMEBUFFER_UNDEFINED = GLenum::GL_FRAMEBUFFER_UNDEFINED;
static const GLenum GL_FRAMEBUFFER_UNSUPPORTED = GLenum::GL_FRAMEBUFFER_UNSUPPORTED;
static const GLenum GL_FRONT = GLenum::GL_FRONT;
static const GLenum GL_FRONT_AND_BACK = GLenum::GL_FRONT_AND_BACK;
static const GLenum GL_FRONT_FACE = GLenum::GL_FRONT_FACE;
static const GLenum GL_FRONT_LEFT = GLenum::GL_FRONT_LEFT;
static const GLenum GL_FRONT_RIGHT = GLenum::GL_FRONT_RIGHT;
static const GLenum GL_FUNC_ADD = GLenum::GL_FUNC_ADD;
static const GLenum GL_FUNC_REVERSE_SUBTRACT = GLenum::GL_FUNC_REVERSE_SUBTRACT;
static const GLenum GL_FUNC_SUBTRACT = GLenum::GL_FUNC_SUBTRACT;
static const GLenum GL_GEOMETRY_INPUT_TYPE = GLenum::GL_GEOMETRY_INPUT_TYPE;
static const GLenum GL_GEOMETRY_OUTPUT_TYPE = GLenum::GL_GEOMETRY_OUTPUT_TYPE;
static const GLenum GL_GEOMETRY_SHADER = GLenum::GL_GEOMETRY_SHADER;
static const GLenum GL_GEOMETRY_SHADER_INVOCATIONS = GLenum::GL_GEOMETRY_SHADER_INVOCATIONS;
static const GLenum GL_GEOMETRY_VERTICES_OUT = GLenum::GL_GEOMETRY_VERTICES_OUT;
static const GLenum GL_GEQUAL = GLenum::GL_GEQUAL;
static const GLenum GL_GREATER = GLenum::GL_GREATER;
static const GLenum GL_GREEN = GLenum::GL_GREEN;
static const GLenum GL_GREEN_INTEGER = GLenum::GL_GREEN_INTEGER;
static const GLenum GL_HALF_FLOAT = GLenum::GL_HALF_FLOAT;
static const GLenum GL_INCR = GLenum::GL_INCR;
static const GLenum GL_INCR_WRAP = GLenum::GL_INCR_WRAP;
static const GLenum GL_INDEX = GLenum::GL_INDEX;
static const GLenum GL_INFO_LOG_LENGTH = GLenum::GL_INFO_LOG_LENGTH;
static const GLenum GL_INT = GLenum::GL_INT;
static const GLenum GL_INTERLEAVED_ATTRIBS = GLenum::GL_INTERLEAVED_ATTRIBS;
static const GLenum GL_INT_2_10_10_10_REV = GLenum::GL_INT_2_10_10_10_REV;
static const GLenum GL_INT_SAMPLER_1D = GLenum::GL_INT_SAMPLER_1D;
static const GLenum GL_INT_SAMPLER_1D_ARRAY = GLenum::GL_INT_SAMPLER_1D_ARRAY;
static const GLenum GL_INT_SAMPLER_2D = GLenum::GL_INT_SAMPLER_2D;
static const GLenum GL_INT_SAMPLER_2D_ARRAY = GLenum::GL_INT_SAMPLER_2D_ARRAY;
static const GLenum GL_INT_SAMPLER_2D_MULTISAMPLE = GLenum::GL_INT_SAMPLER_2D_MULTISAMPLE;
static const GLenum GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = GLenum::GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY;
static const GLenum GL_INT_SAMPLER_2D_RECT = GLenum::GL_INT_SAMPLER_2D_RECT;
static const GLenum GL_INT_SAMPLER_3D = GLenum::GL_INT_SAMPLER_3D;
static const GLenum GL_INT_SAMPLER_BUFFER = GLenum::GL_INT_SAMPLER_BUFFER;
static const GLenum GL_INT_SAMPLER_CUBE = GLenum::GL_INT_SAMPLER_CUBE;
static const GLenum GL_INT_SAMPLER_CUBE_MAP_ARRAY = GLenum::GL_INT_SAMPLER_CUBE_MAP_ARRAY;
static const GLenum GL_INT_VEC2 = GLenum::GL_INT_VEC2;
static const GLenum GL_INT_VEC3 = GLenum::GL_INT_VEC3;
static const GLenum GL_INT_VEC4 = GLenum::GL_INT_VEC4;
static const GLenum GL_INVALID_ENUM = GLenum::GL_INVALID_ENUM;
static const GLenum GL_INVALID_FRAMEBUFFER_OPERATION = GLenum::GL_INVALID_FRAMEBUFFER_OPERATION;
static const GLenum GL_INVALID_OPERATION = GLenum::GL_INVALID_OPERATION;
static const GLenum GL_INVALID_VALUE = GLenum::GL_INVALID_VALUE;
static const GLenum GL_INVERT = GLenum::GL_INVERT;
static const GLenum GL_ISOLINES = GLenum::GL_ISOLINES;
static const GLenum GL_KEEP = GLenum::GL_KEEP;
static const GLenum GL_LAST_VERTEX_CONVENTION = GLenum::GL_LAST_VERTEX_CONVENTION;
static const GLenum GL_LEFT = GLenum::GL_LEFT;
static const GLenum GL_LEQUAL = GLenum::GL_LEQUAL;
static const GLenum GL_LESS = GLenum::GL_LESS;
static const GLenum GL_LINE = GLenum::GL_LINE;
static const GLenum GL_LINEAR = GLenum::GL_LINEAR;
static const GLenum GL_LINEAR_MIPMAP_LINEAR = GLenum::GL_LINEAR_MIPMAP_LINEAR;
static const GLenum GL_LINEAR_MIPMAP_NEAREST = GLenum::GL_LINEAR_MIPMAP_NEAREST;
static const GLenum GL_LINES = GLenum::GL_LINES;
static const GLenum GL_LINES_ADJACENCY = GLenum::GL_LINES_ADJACENCY;
static const GLenum GL_LINE_LOOP = GLenum::GL_LINE_LOOP;
static const GLenum GL_LINE_SMOOTH = GLenum::GL_LINE_SMOOTH;
static const GLenum GL_LINE_SMOOTH_HINT = GLenum::GL_LINE_SMOOTH_HINT;
static const GLenum GL_LINE_STRIP = GLenum::GL_LINE_STRIP;
static const GLenum GL_LINE_STRIP_ADJACENCY = GLenum::GL_LINE_STRIP_ADJACENCY;
static const GLenum GL_LINE_WIDTH = GLenum::GL_LINE_WIDTH;
static const GLenum GL_LINE_WIDTH_GRANULARITY = GLenum::GL_LINE_WIDTH_GRANULARITY;
static const GLenum GL_LINE_WIDTH_RANGE = GLenum::GL_LINE_WIDTH_RANGE;
static const GLenum GL_LINK_STATUS = GLenum::GL_LINK_STATUS;
static const GLenum GL_LOGIC_OP_MODE = GLenum::GL_LOGIC_OP_MODE;
static const GLenum GL_LOWER_LEFT = GLenum::GL_LOWER_LEFT;
static const GLenum GL_MAJOR_VERSION = GLenum::GL_MAJOR_VERSION;
static const GLenum GL_MAX = GLenum::GL_MAX;
static const GLenum GL_MAX_3D_TEXTURE_SIZE = GLenum::GL_MAX_3D_TEXTURE_SIZE;
static const GLenum GL_MAX_ARRAY_TEXTURE_LAYERS = GLenum::GL_MAX_ARRAY_TEXTURE_LAYERS;
static const GLenum GL_MAX_CLIP_DISTANCES = GLenum::GL_MAX_CLIP_DISTANCES;
static const GLenum GL_MAX_COLOR_ATTACHMENTS = GLenum::GL_MAX_COLOR_ATTACHMENTS;
static const GLenum GL_MAX_COLOR_TEXTURE_SAMPLES = GLenum::GL_MAX_COLOR_TEXTURE_SAMPLES;
static const GLenum GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = GLenum::GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS;
static const GLenum GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS = GLenum::GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS;
static const GLenum GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS = GLenum::GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS;
static const GLenum GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = GLenum::GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS;
static const GLenum GL_MAX_COMBINED_UNIFORM_BLOCKS = GLenum::GL_MAX_COMBINED_UNIFORM_BLOCKS;
static const GLenum GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = GLenum::GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS;
static const GLenum GL_MAX_CUBE_MAP_TEXTURE_SIZE = GLenum::GL_MAX_CUBE_MAP_TEXTURE_SIZE;
static const GLenum GL_MAX_DEPTH_TEXTURE_SAMPLES = GLenum::GL_MAX_DEPTH_TEXTURE_SAMPLES;
static const GLenum GL_MAX_DRAW_BUFFERS = GLenum::GL_MAX_DRAW_BUFFERS;
static const GLenum GL_MAX_DUAL_SOURCE_DRAW_BUFFERS = GLenum::GL_MAX_DUAL_SOURCE_DRAW_BUFFERS;
static const GLenum GL_MAX_ELEMENTS_INDICES = GLenum::GL_MAX_ELEMENTS_INDICES;
static const GLenum GL_MAX_ELEMENTS_VERTICES = GLenum::GL_MAX_ELEMENTS_VERTICES;
static const GLenum GL_MAX_FRAGMENT_INPUT_COMPONENTS = GLenum::GL_MAX_FRAGMENT_INPUT_COMPONENTS;
static const GLenum GL_MAX_FRAGMENT_INTERPOLATION_OFFSET = GLenum::GL_MAX_FRAGMENT_INTERPOLATION_OFFSET;
static const GLenum GL_MAX_FRAGMENT_UNIFORM_BLOCKS = GLenum::GL_MAX_FRAGMENT_UNIFORM_BLOCKS;
static const GLenum GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = GLenum::GL_MAX_FRAGMENT_UNIFORM_COMPONENTS;
static const GLenum GL_MAX_GEOMETRY_INPUT_COMPONENTS = GLenum::GL_MAX_GEOMETRY_INPUT_COMPONENTS;
static const GLenum GL_MAX_GEOMETRY_OUTPUT_COMPONENTS = GLenum::GL_MAX_GEOMETRY_OUTPUT_COMPONENTS;
static const GLenum GL_MAX_GEOMETRY_OUTPUT_VERTICES = GLenum::GL_MAX_GEOMETRY_OUTPUT_VERTICES;
static const GLenum GL_MAX_GEOMETRY_SHADER_INVOCATIONS = GLenum::GL_MAX_GEOMETRY_SHADER_INVOCATIONS;
static const GLenum GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS = GLenum::GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS;
static const GLenum GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS = GLenum::GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS;
static const GLenum GL_MAX_GEOMETRY_UNIFORM_COMPONENTS = GLenum::GL_MAX_GEOMETRY_UNIFORM_COMPONENTS;
static const GLenum GL_MAX_INTEGER_SAMPLES = GLenum::GL_MAX_INTEGER_SAMPLES;
static const GLenum GL_MAX_PATCH_VERTICES = GLenum::GL_MAX_PATCH_VERTICES;
static const GLenum GL_MAX_PROGRAM_TEXEL_OFFSET = GLenum::GL_MAX_PROGRAM_TEXEL_OFFSET;
static const GLenum GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET = GLenum::GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET;
static const GLenum GL_MAX_RECTANGLE_TEXTURE_SIZE = GLenum::GL_MAX_RECTANGLE_TEXTURE_SIZE;
static const GLenum GL_MAX_RENDERBUFFER_SIZE = GLenum::GL_MAX_RENDERBUFFER_SIZE;
static const GLenum GL_MAX_SAMPLES = GLenum::GL_MAX_SAMPLES;
static const GLenum GL_MAX_SAMPLE_MASK_WORDS = GLenum::GL_MAX_SAMPLE_MASK_WORDS;
static const GLenum GL_MAX_SERVER_WAIT_TIMEOUT = GLenum::GL_MAX_SERVER_WAIT_TIMEOUT;
static const GLenum GL_MAX_SUBROUTINES = GLenum::GL_MAX_SUBROUTINES;
static const GLenum GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS = GLenum::GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS;
static const GLenum GL_MAX_TESS_CONTROL_INPUT_COMPONENTS = GLenum::GL_MAX_TESS_CONTROL_INPUT_COMPONENTS;
static const GLenum GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS = GLenum::GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS;
static const GLenum GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS = GLenum::GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS;
static const GLenum GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS = GLenum::GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS;
static const GLenum GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS = GLenum::GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS;
static const GLenum GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS = GLenum::GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS;
static const GLenum GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS = GLenum::GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS;
static const GLenum GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS = GLenum::GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS;
static const GLenum GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS = GLenum::GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS;
static const GLenum GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS = GLenum::GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS;
static const GLenum GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS = GLenum::GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS;
static const GLenum GL_MAX_TESS_GEN_LEVEL = GLenum::GL_MAX_TESS_GEN_LEVEL;
static const GLenum GL_MAX_TESS_PATCH_COMPONENTS = GLenum::GL_MAX_TESS_PATCH_COMPONENTS;
static const GLenum GL_MAX_TEXTURE_BUFFER_SIZE = GLenum::GL_MAX_TEXTURE_BUFFER_SIZE;
static const GLenum GL_MAX_TEXTURE_IMAGE_UNITS = GLenum::GL_MAX_TEXTURE_IMAGE_UNITS;
static const GLenum GL_MAX_TEXTURE_LOD_BIAS = GLenum::GL_MAX_TEXTURE_LOD_BIAS;
static const GLenum GL_MAX_TEXTURE_SIZE = GLenum::GL_MAX_TEXTURE_SIZE;
static const GLenum GL_MAX_TRANSFORM_FEEDBACK_BUFFERS = GLenum::GL_MAX_TRANSFORM_FEEDBACK_BUFFERS;
static const GLenum GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = GLenum::GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS;
static const GLenum GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = GLenum::GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS;
static const GLenum GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = GLenum::GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS;
static const GLenum GL_MAX_UNIFORM_BLOCK_SIZE = GLenum::GL_MAX_UNIFORM_BLOCK_SIZE;
static const GLenum GL_MAX_UNIFORM_BUFFER_BINDINGS = GLenum::GL_MAX_UNIFORM_BUFFER_BINDINGS;
static const GLenum GL_MAX_VARYING_COMPONENTS = GLenum::GL_MAX_VARYING_COMPONENTS;
static const GLenum GL_MAX_VARYING_FLOATS = GLenum::GL_MAX_VARYING_FLOATS;
static const GLenum GL_MAX_VERTEX_ATTRIBS = GLenum::GL_MAX_VERTEX_ATTRIBS;
static const GLenum GL_MAX_VERTEX_OUTPUT_COMPONENTS = GLenum::GL_MAX_VERTEX_OUTPUT_COMPONENTS;
static const GLenum GL_MAX_VERTEX_STREAMS = GLenum::GL_MAX_VERTEX_STREAMS;
static const GLenum GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = GLenum::GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS;
static const GLenum GL_MAX_VERTEX_UNIFORM_BLOCKS = GLenum::GL_MAX_VERTEX_UNIFORM_BLOCKS;
static const GLenum GL_MAX_VERTEX_UNIFORM_COMPONENTS = GLenum::GL_MAX_VERTEX_UNIFORM_COMPONENTS;
static const GLenum GL_MAX_VIEWPORT_DIMS = GLenum::GL_MAX_VIEWPORT_DIMS;
static const GLenum GL_MIN = GLenum::GL_MIN;
static const GLenum GL_MINOR_VERSION = GLenum::GL_MINOR_VERSION;
static const GLenum GL_MIN_FRAGMENT_INTERPOLATION_OFFSET = GLenum::GL_MIN_FRAGMENT_INTERPOLATION_OFFSET;
static const GLenum GL_MIN_PROGRAM_TEXEL_OFFSET = GLenum::GL_MIN_PROGRAM_TEXEL_OFFSET;
static const GLenum GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET = GLenum::GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET;
static const GLenum GL_MIN_SAMPLE_SHADING_VALUE = GLenum::GL_MIN_SAMPLE_SHADING_VALUE;
static const GLenum GL_MIRRORED_REPEAT = GLenum::GL_MIRRORED_REPEAT;
static const GLenum GL_MULTISAMPLE = GLenum::GL_MULTISAMPLE;
static const GLenum GL_NAND = GLenum::GL_NAND;
static const GLenum GL_NEAREST = GLenum::GL_NEAREST;
static const GLenum GL_NEAREST_MIPMAP_LINEAR = GLenum::GL_NEAREST_MIPMAP_LINEAR;
static const GLenum GL_NEAREST_MIPMAP_NEAREST = GLenum::GL_NEAREST_MIPMAP_NEAREST;
static const GLenum GL_NEVER = GLenum::GL_NEVER;
static const GLenum GL_NICEST = GLenum::GL_NICEST;
static const GLenum GL_NONE = GLenum::GL_NONE;
static const GLenum GL_NOOP = GLenum::GL_NOOP;
static const GLenum GL_NOR = GLenum::GL_NOR;
static const GLenum GL_NOTEQUAL = GLenum::GL_NOTEQUAL;
static const GLenum GL_NO_ERROR = GLenum::GL_NO_ERROR;
static const GLenum GL_NUM_COMPATIBLE_SUBROUTINES = GLenum::GL_NUM_COMPATIBLE_SUBROUTINES;
static const GLenum GL_NUM_COMPRESSED_TEXTURE_FORMATS = GLenum::GL_NUM_COMPRESSED_TEXTURE_FORMATS;
static const GLenum GL_NUM_EXTENSIONS = GLenum::GL_NUM_EXTENSIONS;
static const GLenum GL_OBJECT_TYPE = GLenum::GL_OBJECT_TYPE;
static const GLenum GL_ONE = GLenum::GL_ONE;
static const GLenum GL_ONE_MINUS_CONSTANT_ALPHA = GLenum::GL_ONE_MINUS_CONSTANT_ALPHA;
static const GLenum GL_ONE_MINUS_CONSTANT_COLOR = GLenum::GL_ONE_MINUS_CONSTANT_COLOR;
static const GLenum GL_ONE_MINUS_DST_ALPHA = GLenum::GL_ONE_MINUS_DST_ALPHA;
static const GLenum GL_ONE_MINUS_DST_COLOR = GLenum::GL_ONE_MINUS_DST_COLOR;
static const GLenum GL_ONE_MINUS_SRC1_ALPHA = GLenum::GL_ONE_MINUS_SRC1_ALPHA;
static const GLenum GL_ONE_MINUS_SRC1_COLOR = GLenum::GL_ONE_MINUS_SRC1_COLOR;
static const GLenum GL_ONE_MINUS_SRC_ALPHA = GLenum::GL_ONE_MINUS_SRC_ALPHA;
static const GLenum GL_ONE_MINUS_SRC_COLOR = GLenum::GL_ONE_MINUS_SRC_COLOR;
static const GLenum GL_OR = GLenum::GL_OR;
static const GLenum GL_OR_INVERTED = GLenum::GL_OR_INVERTED;
static const GLenum GL_OR_REVERSE = GLenum::GL_OR_REVERSE;
static const GLenum GL_OUT_OF_MEMORY = GLenum::GL_OUT_OF_MEMORY;
static const GLenum GL_PACK_ALIGNMENT = GLenum::GL_PACK_ALIGNMENT;
static const GLenum GL_PACK_IMAGE_HEIGHT = GLenum::GL_PACK_IMAGE_HEIGHT;
static const GLenum GL_PACK_LSB_FIRST = GLenum::GL_PACK_LSB_FIRST;
static const GLenum GL_PACK_ROW_LENGTH = GLenum::GL_PACK_ROW_LENGTH;
static const GLenum GL_PACK_SKIP_IMAGES = GLenum::GL_PACK_SKIP_IMAGES;
static const GLenum GL_PACK_SKIP_PIXELS = GLenum::GL_PACK_SKIP_PIXELS;
static const GLenum GL_PACK_SKIP_ROWS = GLenum::GL_PACK_SKIP_ROWS;
static const GLenum GL_PACK_SWAP_BYTES = GLenum::GL_PACK_SWAP_BYTES;
static const GLenum GL_PATCHES = GLenum::GL_PATCHES;
static const GLenum GL_PATCH_DEFAULT_INNER_LEVEL = GLenum::GL_PATCH_DEFAULT_INNER_LEVEL;
static const GLenum GL_PATCH_DEFAULT_OUTER_LEVEL = GLenum::GL_PATCH_DEFAULT_OUTER_LEVEL;
static const GLenum GL_PATCH_VERTICES = GLenum::GL_PATCH_VERTICES;
static const GLenum GL_PIXEL_PACK_BUFFER = GLenum::GL_PIXEL_PACK_BUFFER;
static const GLenum GL_PIXEL_PACK_BUFFER_BINDING = GLenum::GL_PIXEL_PACK_BUFFER_BINDING;
static const GLenum GL_PIXEL_UNPACK_BUFFER = GLenum::GL_PIXEL_UNPACK_BUFFER;
static const GLenum GL_PIXEL_UNPACK_BUFFER_BINDING = GLenum::GL_PIXEL_UNPACK_BUFFER_BINDING;
static const GLenum GL_POINT = GLenum::GL_POINT;
static const GLenum GL_POINTS = GLenum::GL_POINTS;
static const GLenum GL_POINT_FADE_THRESHOLD_SIZE = GLenum::GL_POINT_FADE_THRESHOLD_SIZE;
static const GLenum GL_POINT_SIZE = GLenum::GL_POINT_SIZE;
static const GLenum GL_POINT_SIZE_GRANULARITY = GLenum::GL_POINT_SIZE_GRANULARITY;
static const GLenum GL_POINT_SIZE_RANGE = GLenum::GL_POINT_SIZE_RANGE;
static const GLenum GL_POINT_SPRITE_COORD_ORIGIN = GLenum::GL_POINT_SPRITE_COORD_ORIGIN;
static const GLenum GL_POLYGON_MODE = GLenum::GL_POLYGON_MODE;
static const GLenum GL_POLYGON_OFFSET_FACTOR = GLenum::GL_POLYGON_OFFSET_FACTOR;
static const GLenum GL_POLYGON_OFFSET_FILL = GLenum::GL_POLYGON_OFFSET_FILL;
static const GLenum GL_POLYGON_OFFSET_LINE = GLenum::GL_POLYGON_OFFSET_LINE;
static const GLenum GL_POLYGON_OFFSET_POINT = GLenum::GL_POLYGON_OFFSET_POINT;
static const GLenum GL_POLYGON_OFFSET_UNITS = GLenum::GL_POLYGON_OFFSET_UNITS;
static const GLenum GL_POLYGON_SMOOTH = GLenum::GL_POLYGON_SMOOTH;
static const GLenum GL_POLYGON_SMOOTH_HINT = GLenum::GL_POLYGON_SMOOTH_HINT;
static const GLenum GL_PRIMITIVES_GENERATED = GLenum::GL_PRIMITIVES_GENERATED;
static const GLenum GL_PRIMITIVE_RESTART = GLenum::GL_PRIMITIVE_RESTART;
static const GLenum GL_PRIMITIVE_RESTART_INDEX = GLenum::GL_PRIMITIVE_RESTART_INDEX;
static const GLenum GL_PROGRAM_POINT_SIZE = GLenum::GL_PROGRAM_POINT_SIZE;
static const GLenum GL_PROVOKING_VERTEX = GLenum::GL_PROVOKING_VERTEX;
static const GLenum GL_PROXY_TEXTURE_1D = GLenum::GL_PROXY_TEXTURE_1D;
static const GLenum GL_PROXY_TEXTURE_1D_ARRAY = GLenum::GL_PROXY_TEXTURE_1D_ARRAY;
static const GLenum GL_PROXY_TEXTURE_2D = GLenum::GL_PROXY_TEXTURE_2D;
static const GLenum GL_PROXY_TEXTURE_2D_ARRAY = GLenum::GL_PROXY_TEXTURE_2D_ARRAY;
static const GLenum GL_PROXY_TEXTURE_2D_MULTISAMPLE = GLenum::GL_PROXY_TEXTURE_2D_MULTISAMPLE;
static const GLenum GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY = GLenum::GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY;
static const GLenum GL_PROXY_TEXTURE_3D = GLenum::GL_PROXY_TEXTURE_3D;
static const GLenum GL_PROXY_TEXTURE_CUBE_MAP = GLenum::GL_PROXY_TEXTURE_CUBE_MAP;
static const GLenum GL_PROXY_TEXTURE_CUBE_MAP_ARRAY = GLenum::GL_PROXY_TEXTURE_CUBE_MAP_ARRAY;
static const GLenum GL_PROXY_TEXTURE_RECTANGLE = GLenum::GL_PROXY_TEXTURE_RECTANGLE;
static const GLenum GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION = GLenum::GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION;
static const GLenum GL_QUERY_BY_REGION_NO_WAIT = GLenum::GL_QUERY_BY_REGION_NO_WAIT;
static const GLenum GL_QUERY_BY_REGION_WAIT = GLenum::GL_QUERY_BY_REGION_WAIT;
static const GLenum GL_QUERY_COUNTER_BITS = GLenum::GL_QUERY_COUNTER_BITS;
static const GLenum GL_QUERY_NO_WAIT = GLenum::GL_QUERY_NO_WAIT;
static const GLenum GL_QUERY_RESULT = GLenum::GL_QUERY_RESULT;
static const GLenum GL_QUERY_RESULT_AVAILABLE = GLenum::GL_QUERY_RESULT_AVAILABLE;
static const GLenum GL_QUERY_WAIT = GLenum::GL_QUERY_WAIT;
static const GLenum GL_R11F_G11F_B10F = GLenum::GL_R11F_G11F_B10F;
static const GLenum GL_R16 = GLenum::GL_R16;
static const GLenum GL_R16F = GLenum::GL_R16F;
static const GLenum GL_R16I = GLenum::GL_R16I;
static const GLenum GL_R16UI = GLenum::GL_R16UI;
static const GLenum GL_R16_SNORM = GLenum::GL_R16_SNORM;
static const GLenum GL_R32F = GLenum::GL_R32F;
static const GLenum GL_R32I = GLenum::GL_R32I;
static const GLenum GL_R32UI = GLenum::GL_R32UI;
static const GLenum GL_R3_G3_B2 = GLenum::GL_R3_G3_B2;
static const GLenum GL_R8 = GLenum::GL_R8;
static const GLenum GL_R8I = GLenum::GL_R8I;
static const GLenum GL_R8UI = GLenum::GL_R8UI;
static const GLenum GL_R8_SNORM = GLenum::GL_R8_SNORM;
static const GLenum GL_RASTERIZER_DISCARD = GLenum::GL_RASTERIZER_DISCARD;
static const GLenum GL_READ_BUFFER = GLenum::GL_READ_BUFFER;
static const GLenum GL_READ_FRAMEBUFFER = GLenum::GL_READ_FRAMEBUFFER;
static const GLenum GL_READ_FRAMEBUFFER_BINDING = GLenum::GL_READ_FRAMEBUFFER_BINDING;
static const GLenum GL_READ_ONLY = GLenum::GL_READ_ONLY;
static const GLenum GL_READ_WRITE = GLenum::GL_READ_WRITE;
static const GLenum GL_RED = GLenum::GL_RED;
static const GLenum GL_RED_INTEGER = GLenum::GL_RED_INTEGER;
static const GLenum GL_RENDERBUFFER = GLenum::GL_RENDERBUFFER;
static const GLenum GL_RENDERBUFFER_ALPHA_SIZE = GLenum::GL_RENDERBUFFER_ALPHA_SIZE;
static const GLenum GL_RENDERBUFFER_BINDING = GLenum::GL_RENDERBUFFER_BINDING;
static const GLenum GL_RENDERBUFFER_BLUE_SIZE = GLenum::GL_RENDERBUFFER_BLUE_SIZE;
static const GLenum GL_RENDERBUFFER_DEPTH_SIZE = GLenum::GL_RENDERBUFFER_DEPTH_SIZE;
static const GLenum GL_RENDERBUFFER_GREEN_SIZE = GLenum::GL_RENDERBUFFER_GREEN_SIZE;
static const GLenum GL_RENDERBUFFER_HEIGHT = GLenum::GL_RENDERBUFFER_HEIGHT;
static const GLenum GL_RENDERBUFFER_INTERNAL_FORMAT = GLenum::GL_RENDERBUFFER_INTERNAL_FORMAT;
static const GLenum GL_RENDERBUFFER_RED_SIZE = GLenum::GL_RENDERBUFFER_RED_SIZE;
static const GLenum GL_RENDERBUFFER_SAMPLES = GLenum::GL_RENDERBUFFER_SAMPLES;
static const GLenum GL_RENDERBUFFER_STENCIL_SIZE = GLenum::GL_RENDERBUFFER_STENCIL_SIZE;
static const GLenum GL_RENDERBUFFER_WIDTH = GLenum::GL_RENDERBUFFER_WIDTH;
static const GLenum GL_RENDERER = GLenum::GL_RENDERER;
static const GLenum GL_REPEAT = GLenum::GL_REPEAT;
static const GLenum GL_REPLACE = GLenum::GL_REPLACE;
static const GLenum GL_RG = GLenum::GL_RG;
static const GLenum GL_RG16 = GLenum::GL_RG16;
static const GLenum GL_RG16F = GLenum::GL_RG16F;
static const GLenum GL_RG16I = GLenum::GL_RG16I;
static const GLenum GL_RG16UI = GLenum::GL_RG16UI;
static const GLenum GL_RG16_SNORM = GLenum::GL_RG16_SNORM;
static const GLenum GL_RG32F = GLenum::GL_RG32F;
static const GLenum GL_RG32I = GLenum::GL_RG32I;
static const GLenum GL_RG32UI = GLenum::GL_RG32UI;
static const GLenum GL_RG8 = GLenum::GL_RG8;
static const GLenum GL_RG8I = GLenum::GL_RG8I;
static const GLenum GL_RG8UI = GLenum::GL_RG8UI;
static const GLenum GL_RG8_SNORM = GLenum::GL_RG8_SNORM;
static const GLenum GL_RGB = GLenum::GL_RGB;
static const GLenum GL_RGB10 = GLenum::GL_RGB10;
static const GLenum GL_RGB10_A2 = GLenum::GL_RGB10_A2;
static const GLenum GL_RGB10_A2UI = GLenum::GL_RGB10_A2UI;
static const GLenum GL_RGB12 = GLenum::GL_RGB12;
static const GLenum GL_RGB16 = GLenum::GL_RGB16;
static const GLenum GL_RGB16F = GLenum::GL_RGB16F;
static const GLenum GL_RGB16I = GLenum::GL_RGB16I;
static const GLenum GL_RGB16UI = GLenum::GL_RGB16UI;
static const GLenum GL_RGB16_SNORM = GLenum::GL_RGB16_SNORM;
static const GLenum GL_RGB32F = GLenum::GL_RGB32F;
static const GLenum GL_RGB32I = GLenum::GL_RGB32I;
static const GLenum GL_RGB32UI = GLenum::GL_RGB32UI;
static const GLenum GL_RGB4 = GLenum::GL_RGB4;
static const GLenum GL_RGB5 = GLenum::GL_RGB5;
static const GLenum GL_RGB5_A1 = GLenum::GL_RGB5_A1;
static const GLenum GL_RGB8 = GLenum::GL_RGB8;
static const GLenum GL_RGB8I = GLenum::GL_RGB8I;
static const GLenum GL_RGB8UI = GLenum::GL_RGB8UI;
static const GLenum GL_RGB8_SNORM = GLenum::GL_RGB8_SNORM;
static const GLenum GL_RGB9_E5 = GLenum::GL_RGB9_E5;
static const GLenum GL_RGBA = GLenum::GL_RGBA;
static const GLenum GL_RGBA12 = GLenum::GL_RGBA12;
static const GLenum GL_RGBA16 = GLenum::GL_RGBA16;
static const GLenum GL_RGBA16F = GLenum::GL_RGBA16F;
static const GLenum GL_RGBA16I = GLenum::GL_RGBA16I;
static const GLenum GL_RGBA16UI = GLenum::GL_RGBA16UI;
static const GLenum GL_RGBA16_SNORM = GLenum::GL_RGBA16_SNORM;
static const GLenum GL_RGBA2 = GLenum::GL_RGBA2;
static const GLenum GL_RGBA32F = GLenum::GL_RGBA32F;
static const GLenum GL_RGBA32I = GLenum::GL_RGBA32I;
static const GLenum GL_RGBA32UI = GLenum::GL_RGBA32UI;
static const GLenum GL_RGBA4 = GLenum::GL_RGBA4;
static const GLenum GL_RGBA8 = GLenum::GL_RGBA8;
static const GLenum GL_RGBA8I = GLenum::GL_RGBA8I;
static const GLenum GL_RGBA8UI = GLenum::GL_RGBA8UI;
static const GLenum GL_RGBA8_SNORM = GLenum::GL_RGBA8_SNORM;
static const GLenum GL_RGBA_INTEGER = GLenum::GL_RGBA_INTEGER;
static const GLenum GL_RGB_INTEGER = GLenum::GL_RGB_INTEGER;
static const GLenum GL_RG_INTEGER = GLenum::GL_RG_INTEGER;
static const GLenum GL_RIGHT = GLenum::GL_RIGHT;
static const GLenum GL_SAMPLER_1D = GLenum::GL_SAMPLER_1D;
static const GLenum GL_SAMPLER_1D_ARRAY = GLenum::GL_SAMPLER_1D_ARRAY;
static const GLenum GL_SAMPLER_1D_ARRAY_SHADOW = GLenum::GL_SAMPLER_1D_ARRAY_SHADOW;
static const GLenum GL_SAMPLER_1D_SHADOW = GLenum::GL_SAMPLER_1D_SHADOW;
static const GLenum GL_SAMPLER_2D = GLenum::GL_SAMPLER_2D;
static const GLenum GL_SAMPLER_2D_ARRAY = GLenum::GL_SAMPLER_2D_ARRAY;
static const GLenum GL_SAMPLER_2D_ARRAY_SHADOW = GLenum::GL_SAMPLER_2D_ARRAY_SHADOW;
static const GLenum GL_SAMPLER_2D_MULTISAMPLE = GLenum::GL_SAMPLER_2D_MULTISAMPLE;
static const GLenum GL_SAMPLER_2D_MULTISAMPLE_ARRAY = GLenum::GL_SAMPLER_2D_MULTISAMPLE_ARRAY;
static const GLenum GL_SAMPLER_2D_RECT = GLenum::GL_SAMPLER_2D_RECT;
static const GLenum GL_SAMPLER_2D_RECT_SHADOW = GLenum::GL_SAMPLER_2D_RECT_SHADOW;
static const GLenum GL_SAMPLER_2D_SHADOW = GLenum::GL_SAMPLER_2D_SHADOW;
static const GLenum GL_SAMPLER_3D = GLenum::GL_SAMPLER_3D;
static const GLenum GL_SAMPLER_BINDING = GLenum::GL_SAMPLER_BINDING;
static const GLenum GL_SAMPLER_BUFFER = GLenum::GL_SAMPLER_BUFFER;
static const GLenum GL_SAMPLER_CUBE = GLenum::GL_SAMPLER_CUBE;
static const GLenum GL_SAMPLER_CUBE_MAP_ARRAY = GLenum::GL_SAMPLER_CUBE_MAP_ARRAY;
static const GLenum GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW = GLenum::GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW;
static const GLenum GL_SAMPLER_CUBE_SHADOW = GLenum::GL_SAMPLER_CUBE_SHADOW;
static const GLenum GL_SAMPLES = GLenum::GL_SAMPLES;
static const GLenum GL_SAMPLES_PASSED = GLenum::GL_SAMPLES_PASSED;
static const GLenum GL_SAMPLE_ALPHA_TO_COVERAGE = GLenum::GL_SAMPLE_ALPHA_TO_COVERAGE;
static const GLenum GL_SAMPLE_ALPHA_TO_ONE = GLenum::GL_SAMPLE_ALPHA_TO_ONE;
static const GLenum GL_SAMPLE_BUFFERS = GLenum::GL_SAMPLE_BUFFERS;
static const GLenum GL_SAMPLE_COVERAGE = GLenum::GL_SAMPLE_COVERAGE;
static const GLenum GL_SAMPLE_COVERAGE_INVERT = GLenum::GL_SAMPLE_COVERAGE_INVERT;
static const GLenum GL_SAMPLE_COVERAGE_VALUE = GLenum::GL_SAMPLE_COVERAGE_VALUE;
static const GLenum GL_SAMPLE_MASK = GLenum::GL_SAMPLE_MASK;
static const GLenum GL_SAMPLE_MASK_VALUE = GLenum::GL_SAMPLE_MASK_VALUE;
static const GLenum GL_SAMPLE_POSITION = GLenum::GL_SAMPLE_POSITION;
static const GLenum GL_SAMPLE_SHADING = GLenum::GL_SAMPLE_SHADING;
static const GLenum GL_SCISSOR_BOX = GLenum::GL_SCISSOR_BOX;
static const GLenum GL_SCISSOR_TEST = GLenum::GL_SCISSOR_TEST;
static const GLenum GL_SEPARATE_ATTRIBS = GLenum::GL_SEPARATE_ATTRIBS;
static const GLenum GL_SET = GLenum::GL_SET;
static const GLenum GL_SHADER_SOURCE_LENGTH = GLenum::GL_SHADER_SOURCE_LENGTH;
static const GLenum GL_SHADER_TYPE = GLenum::GL_SHADER_TYPE;
static const GLenum GL_SHADING_LANGUAGE_VERSION = GLenum::GL_SHADING_LANGUAGE_VERSION;
static const GLenum GL_SHORT = GLenum::GL_SHORT;
static const GLenum GL_SIGNALED = GLenum::GL_SIGNALED;
static const GLenum GL_SIGNED_NORMALIZED = GLenum::GL_SIGNED_NORMALIZED;
static const GLenum GL_SMOOTH_LINE_WIDTH_GRANULARITY = GLenum::GL_SMOOTH_LINE_WIDTH_GRANULARITY;
static const GLenum GL_SMOOTH_LINE_WIDTH_RANGE = GLenum::GL_SMOOTH_LINE_WIDTH_RANGE;
static const GLenum GL_SMOOTH_POINT_SIZE_GRANULARITY = GLenum::GL_SMOOTH_POINT_SIZE_GRANULARITY;
static const GLenum GL_SMOOTH_POINT_SIZE_RANGE = GLenum::GL_SMOOTH_POINT_SIZE_RANGE;
static const GLenum GL_SRC1_ALPHA = GLenum::GL_SRC1_ALPHA;
static const GLenum GL_SRC1_COLOR = GLenum::GL_SRC1_COLOR;
static const GLenum GL_SRC_ALPHA = GLenum::GL_SRC_ALPHA;
static const GLenum GL_SRC_ALPHA_SATURATE = GLenum::GL_SRC_ALPHA_SATURATE;
static const GLenum GL_SRC_COLOR = GLenum::GL_SRC_COLOR;
static const GLenum GL_SRGB = GLenum::GL_SRGB;
static const GLenum GL_SRGB8 = GLenum::GL_SRGB8;
static const GLenum GL_SRGB8_ALPHA8 = GLenum::GL_SRGB8_ALPHA8;
static const GLenum GL_SRGB_ALPHA = GLenum::GL_SRGB_ALPHA;
static const GLenum GL_STATIC_COPY = GLenum::GL_STATIC_COPY;
static const GLenum GL_STATIC_DRAW = GLenum::GL_STATIC_DRAW;
static const GLenum GL_STATIC_READ = GLenum::GL_STATIC_READ;
static const GLenum GL_STENCIL = GLenum::GL_STENCIL;
static const GLenum GL_STENCIL_ATTACHMENT = GLenum::GL_STENCIL_ATTACHMENT;
static const GLenum GL_STENCIL_BACK_FAIL = GLenum::GL_STENCIL_BACK_FAIL;
static const GLenum GL_STENCIL_BACK_FUNC = GLenum::GL_STENCIL_BACK_FUNC;
static const GLenum GL_STENCIL_BACK_PASS_DEPTH_FAIL = GLenum::GL_STENCIL_BACK_PASS_DEPTH_FAIL;
static const GLenum GL_STENCIL_BACK_PASS_DEPTH_PASS = GLenum::GL_STENCIL_BACK_PASS_DEPTH_PASS;
static const GLenum GL_STENCIL_BACK_REF = GLenum::GL_STENCIL_BACK_REF;
static const GLenum GL_STENCIL_BACK_VALUE_MASK = GLenum::GL_STENCIL_BACK_VALUE_MASK;
static const GLenum GL_STENCIL_BACK_WRITEMASK = GLenum::GL_STENCIL_BACK_WRITEMASK;
static const GLenum GL_STENCIL_CLEAR_VALUE = GLenum::GL_STENCIL_CLEAR_VALUE;
static const GLenum GL_STENCIL_FAIL = GLenum::GL_STENCIL_FAIL;
static const GLenum GL_STENCIL_FUNC = GLenum::GL_STENCIL_FUNC;
static const GLenum GL_STENCIL_INDEX = GLenum::GL_STENCIL_INDEX;
static const GLenum GL_STENCIL_INDEX1 = GLenum::GL_STENCIL_INDEX1;
static const GLenum GL_STENCIL_INDEX16 = GLenum::GL_STENCIL_INDEX16;
static const GLenum GL_STENCIL_INDEX4 = GLenum::GL_STENCIL_INDEX4;
static const GLenum GL_STENCIL_INDEX8 = GLenum::GL_STENCIL_INDEX8;
static const GLenum GL_STENCIL_PASS_DEPTH_FAIL = GLenum::GL_STENCIL_PASS_DEPTH_FAIL;
static const GLenum GL_STENCIL_PASS_DEPTH_PASS = GLenum::GL_STENCIL_PASS_DEPTH_PASS;
static const GLenum GL_STENCIL_REF = GLenum::GL_STENCIL_REF;
static const GLenum GL_STENCIL_TEST = GLenum::GL_STENCIL_TEST;
static const GLenum GL_STENCIL_VALUE_MASK = GLenum::GL_STENCIL_VALUE_MASK;
static const GLenum GL_STENCIL_WRITEMASK = GLenum::GL_STENCIL_WRITEMASK;
static const GLenum GL_STEREO = GLenum::GL_STEREO;
static const GLenum GL_STREAM_COPY = GLenum::GL_STREAM_COPY;
static const GLenum GL_STREAM_DRAW = GLenum::GL_STREAM_DRAW;
static const GLenum GL_STREAM_READ = GLenum::GL_STREAM_READ;
static const GLenum GL_SUBPIXEL_BITS = GLenum::GL_SUBPIXEL_BITS;
static const GLenum GL_SYNC_CONDITION = GLenum::GL_SYNC_CONDITION;
static const GLenum GL_SYNC_FENCE = GLenum::GL_SYNC_FENCE;
static const GLenum GL_SYNC_FLAGS = GLenum::GL_SYNC_FLAGS;
static const GLenum GL_SYNC_GPU_COMMANDS_COMPLETE = GLenum::GL_SYNC_GPU_COMMANDS_COMPLETE;
static const GLenum GL_SYNC_STATUS = GLenum::GL_SYNC_STATUS;
static const GLenum GL_TESS_CONTROL_OUTPUT_VERTICES = GLenum::GL_TESS_CONTROL_OUTPUT_VERTICES;
static const GLenum GL_TESS_CONTROL_SHADER = GLenum::GL_TESS_CONTROL_SHADER;
static const GLenum GL_TESS_EVALUATION_SHADER = GLenum::GL_TESS_EVALUATION_SHADER;
static const GLenum GL_TESS_GEN_MODE = GLenum::GL_TESS_GEN_MODE;
static const GLenum GL_TESS_GEN_POINT_MODE = GLenum::GL_TESS_GEN_POINT_MODE;
static const GLenum GL_TESS_GEN_SPACING = GLenum::GL_TESS_GEN_SPACING;
static const GLenum GL_TESS_GEN_VERTEX_ORDER = GLenum::GL_TESS_GEN_VERTEX_ORDER;
static const GLenum GL_TEXTURE = GLenum::GL_TEXTURE;
static const GLenum GL_TEXTURE0 = GLenum::GL_TEXTURE0;
static const GLenum GL_TEXTURE1 = GLenum::GL_TEXTURE1;
static const GLenum GL_TEXTURE10 = GLenum::GL_TEXTURE10;
static const GLenum GL_TEXTURE11 = GLenum::GL_TEXTURE11;
static const GLenum GL_TEXTURE12 = GLenum::GL_TEXTURE12;
static const GLenum GL_TEXTURE13 = GLenum::GL_TEXTURE13;
static const GLenum GL_TEXTURE14 = GLenum::GL_TEXTURE14;
static const GLenum GL_TEXTURE15 = GLenum::GL_TEXTURE15;
static const GLenum GL_TEXTURE16 = GLenum::GL_TEXTURE16;
static const GLenum GL_TEXTURE17 = GLenum::GL_TEXTURE17;
static const GLenum GL_TEXTURE18 = GLenum::GL_TEXTURE18;
static const GLenum GL_TEXTURE19 = GLenum::GL_TEXTURE19;
static const GLenum GL_TEXTURE2 = GLenum::GL_TEXTURE2;
static const GLenum GL_TEXTURE20 = GLenum::GL_TEXTURE20;
static const GLenum GL_TEXTURE21 = GLenum::GL_TEXTURE21;
static const GLenum GL_TEXTURE22 = GLenum::GL_TEXTURE22;
static const GLenum GL_TEXTURE23 = GLenum::GL_TEXTURE23;
static const GLenum GL_TEXTURE24 = GLenum::GL_TEXTURE24;
static const GLenum GL_TEXTURE25 = GLenum::GL_TEXTURE25;
static const GLenum GL_TEXTURE26 = GLenum::GL_TEXTURE26;
static const GLenum GL_TEXTURE27 = GLenum::GL_TEXTURE27;
static const GLenum GL_TEXTURE28 = GLenum::GL_TEXTURE28;
static const GLenum GL_TEXTURE29 = GLenum::GL_TEXTURE29;
static const GLenum GL_TEXTURE3 = GLenum::GL_TEXTURE3;
static const GLenum GL_TEXTURE30 = GLenum::GL_TEXTURE30;
static const GLenum GL_TEXTURE31 = GLenum::GL_TEXTURE31;
static const GLenum GL_TEXTURE4 = GLenum::GL_TEXTURE4;
static const GLenum GL_TEXTURE5 = GLenum::GL_TEXTURE5;
static const GLenum GL_TEXTURE6 = GLenum::GL_TEXTURE6;
static const GLenum GL_TEXTURE7 = GLenum::GL_TEXTURE7;
static const GLenum GL_TEXTURE8 = GLenum::GL_TEXTURE8;
static const GLenum GL_TEXTURE9 = GLenum::GL_TEXTURE9;
static const GLenum GL_TEXTURE_1D = GLenum::GL_TEXTURE_1D;
static const GLenum GL_TEXTURE_1D_ARRAY = GLenum::GL_TEXTURE_1D_ARRAY;
static const GLenum GL_TEXTURE_2D = GLenum::GL_TEXTURE_2D;
static const GLenum GL_TEXTURE_2D_ARRAY = GLenum::GL_TEXTURE_2D_ARRAY;
static const GLenum GL_TEXTURE_2D_MULTISAMPLE = GLenum::GL_TEXTURE_2D_MULTISAMPLE;
static const GLenum GL_TEXTURE_2D_MULTISAMPLE_ARRAY = GLenum::GL_TEXTURE_2D_MULTISAMPLE_ARRAY;
static const GLenum GL_TEXTURE_3D = GLenum::GL_TEXTURE_3D;
static const GLenum GL_TEXTURE_ALPHA_SIZE = GLenum::GL_TEXTURE_ALPHA_SIZE;
static const GLenum GL_TEXTURE_ALPHA_TYPE = GLenum::GL_TEXTURE_ALPHA_TYPE;
static const GLenum GL_TEXTURE_BASE_LEVEL = GLenum::GL_TEXTURE_BASE_LEVEL;
static const GLenum GL_TEXTURE_BINDING_1D = GLenum::GL_TEXTURE_BINDING_1D;
static const GLenum GL_TEXTURE_BINDING_1D_ARRAY = GLenum::GL_TEXTURE_BINDING_1D_ARRAY;
static const GLenum GL_TEXTURE_BINDING_2D = GLenum::GL_TEXTURE_BINDING_2D;
static const GLenum GL_TEXTURE_BINDING_2D_ARRAY = GLenum::GL_TEXTURE_BINDING_2D_ARRAY;
static const GLenum GL_TEXTURE_BINDING_2D_MULTISAMPLE = GLenum::GL_TEXTURE_BINDING_2D_MULTISAMPLE;
static const GLenum GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY = GLenum::GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY;
static const GLenum GL_TEXTURE_BINDING_3D = GLenum::GL_TEXTURE_BINDING_3D;
static const GLenum GL_TEXTURE_BINDING_BUFFER = GLenum::GL_TEXTURE_BINDING_BUFFER;
static const GLenum GL_TEXTURE_BINDING_CUBE_MAP = GLenum::GL_TEXTURE_BINDING_CUBE_MAP;
static const GLenum GL_TEXTURE_BINDING_CUBE_MAP_ARRAY = GLenum::GL_TEXTURE_BINDING_CUBE_MAP_ARRAY;
static const GLenum GL_TEXTURE_BINDING_RECTANGLE = GLenum::GL_TEXTURE_BINDING_RECTANGLE;
static const GLenum GL_TEXTURE_BLUE_SIZE = GLenum::GL_TEXTURE_BLUE_SIZE;
static const GLenum GL_TEXTURE_BLUE_TYPE = GLenum::GL_TEXTURE_BLUE_TYPE;
static const GLenum GL_TEXTURE_BORDER_COLOR = GLenum::GL_TEXTURE_BORDER_COLOR;
static const GLenum GL_TEXTURE_BUFFER = GLenum::GL_TEXTURE_BUFFER;
static const GLenum GL_TEXTURE_BUFFER_DATA_STORE_BINDING = GLenum::GL_TEXTURE_BUFFER_DATA_STORE_BINDING;
static const GLenum GL_TEXTURE_COMPARE_FUNC = GLenum::GL_TEXTURE_COMPARE_FUNC;
static const GLenum GL_TEXTURE_COMPARE_MODE = GLenum::GL_TEXTURE_COMPARE_MODE;
static const GLenum GL_TEXTURE_COMPRESSED = GLenum::GL_TEXTURE_COMPRESSED;
static const GLenum GL_TEXTURE_COMPRESSED_IMAGE_SIZE = GLenum::GL_TEXTURE_COMPRESSED_IMAGE_SIZE;
static const GLenum GL_TEXTURE_COMPRESSION_HINT = GLenum::GL_TEXTURE_COMPRESSION_HINT;
static const GLenum GL_TEXTURE_CUBE_MAP = GLenum::GL_TEXTURE_CUBE_MAP;
static const GLenum GL_TEXTURE_CUBE_MAP_ARRAY = GLenum::GL_TEXTURE_CUBE_MAP_ARRAY;
static const GLenum GL_TEXTURE_CUBE_MAP_NEGATIVE_X = GLenum::GL_TEXTURE_CUBE_MAP_NEGATIVE_X;
static const GLenum GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = GLenum::GL_TEXTURE_CUBE_MAP_NEGATIVE_Y;
static const GLenum GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = GLenum::GL_TEXTURE_CUBE_MAP_NEGATIVE_Z;
static const GLenum GL_TEXTURE_CUBE_MAP_POSITIVE_X = GLenum::GL_TEXTURE_CUBE_MAP_POSITIVE_X;
static const GLenum GL_TEXTURE_CUBE_MAP_POSITIVE_Y = GLenum::GL_TEXTURE_CUBE_MAP_POSITIVE_Y;
static const GLenum GL_TEXTURE_CUBE_MAP_POSITIVE_Z = GLenum::GL_TEXTURE_CUBE_MAP_POSITIVE_Z;
static const GLenum GL_TEXTURE_CUBE_MAP_SEAMLESS = GLenum::GL_TEXTURE_CUBE_MAP_SEAMLESS;
static const GLenum GL_TEXTURE_DEPTH = GLenum::GL_TEXTURE_DEPTH;
static const GLenum GL_TEXTURE_DEPTH_SIZE = GLenum::GL_TEXTURE_DEPTH_SIZE;
static const GLenum GL_TEXTURE_DEPTH_TYPE = GLenum::GL_TEXTURE_DEPTH_TYPE;
static const GLenum GL_TEXTURE_FIXED_SAMPLE_LOCATIONS = GLenum::GL_TEXTURE_FIXED_SAMPLE_LOCATIONS;
static const GLenum GL_TEXTURE_GREEN_SIZE = GLenum::GL_TEXTURE_GREEN_SIZE;
static const GLenum GL_TEXTURE_GREEN_TYPE = GLenum::GL_TEXTURE_GREEN_TYPE;
static const GLenum GL_TEXTURE_HEIGHT = GLenum::GL_TEXTURE_HEIGHT;
static const GLenum GL_TEXTURE_INTERNAL_FORMAT = GLenum::GL_TEXTURE_INTERNAL_FORMAT;
static const GLenum GL_TEXTURE_LOD_BIAS = GLenum::GL_TEXTURE_LOD_BIAS;
static const GLenum GL_TEXTURE_MAG_FILTER = GLenum::GL_TEXTURE_MAG_FILTER;
static const GLenum GL_TEXTURE_MAX_LEVEL = GLenum::GL_TEXTURE_MAX_LEVEL;
static const GLenum GL_TEXTURE_MAX_LOD = GLenum::GL_TEXTURE_MAX_LOD;
static const GLenum GL_TEXTURE_MIN_FILTER = GLenum::GL_TEXTURE_MIN_FILTER;
static const GLenum GL_TEXTURE_MIN_LOD = GLenum::GL_TEXTURE_MIN_LOD;
static const GLenum GL_TEXTURE_RECTANGLE = GLenum::GL_TEXTURE_RECTANGLE;
static const GLenum GL_TEXTURE_RED_SIZE = GLenum::GL_TEXTURE_RED_SIZE;
static const GLenum GL_TEXTURE_RED_TYPE = GLenum::GL_TEXTURE_RED_TYPE;
static const GLenum GL_TEXTURE_SAMPLES = GLenum::GL_TEXTURE_SAMPLES;
static const GLenum GL_TEXTURE_SHARED_SIZE = GLenum::GL_TEXTURE_SHARED_SIZE;
static const GLenum GL_TEXTURE_STENCIL_SIZE = GLenum::GL_TEXTURE_STENCIL_SIZE;
static const GLenum GL_TEXTURE_SWIZZLE_A = GLenum::GL_TEXTURE_SWIZZLE_A;
static const GLenum GL_TEXTURE_SWIZZLE_B = GLenum::GL_TEXTURE_SWIZZLE_B;
static const GLenum GL_TEXTURE_SWIZZLE_G = GLenum::GL_TEXTURE_SWIZZLE_G;
static const GLenum GL_TEXTURE_SWIZZLE_R = GLenum::GL_TEXTURE_SWIZZLE_R;
static const GLenum GL_TEXTURE_SWIZZLE_RGBA = GLenum::GL_TEXTURE_SWIZZLE_RGBA;
static const GLenum GL_TEXTURE_WIDTH = GLenum::GL_TEXTURE_WIDTH;
static const GLenum GL_TEXTURE_WRAP_R = GLenum::GL_TEXTURE_WRAP_R;
static const GLenum GL_TEXTURE_WRAP_S = GLenum::GL_TEXTURE_WRAP_S;
static const GLenum GL_TEXTURE_WRAP_T = GLenum::GL_TEXTURE_WRAP_T;
static const GLenum GL_TIMEOUT_EXPIRED = GLenum::GL_TIMEOUT_EXPIRED;
static const GLenum GL_TIMESTAMP = GLenum::GL_TIMESTAMP;
static const GLenum GL_TIME_ELAPSED = GLenum::GL_TIME_ELAPSED;
static const GLenum GL_TRANSFORM_FEEDBACK = GLenum::GL_TRANSFORM_FEEDBACK;
static const GLenum GL_TRANSFORM_FEEDBACK_ACTIVE = GLenum::GL_TRANSFORM_FEEDBACK_ACTIVE;
static const GLenum GL_TRANSFORM_FEEDBACK_BINDING = GLenum::GL_TRANSFORM_FEEDBACK_BINDING;
static const GLenum GL_TRANSFORM_FEEDBACK_BUFFER = GLenum::GL_TRANSFORM_FEEDBACK_BUFFER;
static const GLenum GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE = GLenum::GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE;
static const GLenum GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = GLenum::GL_TRANSFORM_FEEDBACK_BUFFER_BINDING;
static const GLenum GL_TRANSFORM_FEEDBACK_BUFFER_MODE = GLenum::GL_TRANSFORM_FEEDBACK_BUFFER_MODE;
static const GLenum GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED = GLenum::GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED;
static const GLenum GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = GLenum::GL_TRANSFORM_FEEDBACK_BUFFER_SIZE;
static const GLenum GL_TRANSFORM_FEEDBACK_BUFFER_START = GLenum::GL_TRANSFORM_FEEDBACK_BUFFER_START;
static const GLenum GL_TRANSFORM_FEEDBACK_PAUSED = GLenum::GL_TRANSFORM_FEEDBACK_PAUSED;
static const GLenum GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = GLenum::GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN;
static const GLenum GL_TRANSFORM_FEEDBACK_VARYINGS = GLenum::GL_TRANSFORM_FEEDBACK_VARYINGS;
static const GLenum GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = GLenum::GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH;
static const GLenum GL_TRIANGLES = GLenum::GL_TRIANGLES;
static const GLenum GL_TRIANGLES_ADJACENCY = GLenum::GL_TRIANGLES_ADJACENCY;
static const GLenum GL_TRIANGLE_FAN = GLenum::GL_TRIANGLE_FAN;
static const GLenum GL_TRIANGLE_STRIP = GLenum::GL_TRIANGLE_STRIP;
static const GLenum GL_TRIANGLE_STRIP_ADJACENCY = GLenum::GL_TRIANGLE_STRIP_ADJACENCY;
static const GLenum GL_UNIFORM_ARRAY_STRIDE = GLenum::GL_UNIFORM_ARRAY_STRIDE;
static const GLenum GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = GLenum::GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS;
static const GLenum GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = GLenum::GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES;
static const GLenum GL_UNIFORM_BLOCK_BINDING = GLenum::GL_UNIFORM_BLOCK_BINDING;
static const GLenum GL_UNIFORM_BLOCK_DATA_SIZE = GLenum::GL_UNIFORM_BLOCK_DATA_SIZE;
static const GLenum GL_UNIFORM_BLOCK_INDEX = GLenum::GL_UNIFORM_BLOCK_INDEX;
static const GLenum GL_UNIFORM_BLOCK_NAME_LENGTH = GLenum::GL_UNIFORM_BLOCK_NAME_LENGTH;
static const GLenum GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = GLenum::GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER;
static const GLenum GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER = GLenum::GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER;
static const GLenum GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER = GLenum::GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER;
static const GLenum GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = GLenum::GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER;
static const GLenum GL_UNIFORM_BUFFER = GLenum::GL_UNIFORM_BUFFER;
static const GLenum GL_UNIFORM_BUFFER_BINDING = GLenum::GL_UNIFORM_BUFFER_BINDING;
static const GLenum GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = GLenum::GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT;
static const GLenum GL_UNIFORM_BUFFER_SIZE = GLenum::GL_UNIFORM_BUFFER_SIZE;
static const GLenum GL_UNIFORM_BUFFER_START = GLenum::GL_UNIFORM_BUFFER_START;
static const GLenum GL_UNIFORM_IS_ROW_MAJOR = GLenum::GL_UNIFORM_IS_ROW_MAJOR;
static const GLenum GL_UNIFORM_MATRIX_STRIDE = GLenum::GL_UNIFORM_MATRIX_STRIDE;
static const GLenum GL_UNIFORM_NAME_LENGTH = GLenum::GL_UNIFORM_NAME_LENGTH;
static const GLenum GL_UNIFORM_OFFSET = GLenum::GL_UNIFORM_OFFSET;
static const GLenum GL_UNIFORM_SIZE = GLenum::GL_UNIFORM_SIZE;
static const GLenum GL_UNIFORM_TYPE = GLenum::GL_UNIFORM_TYPE;
static const GLenum GL_UNPACK_ALIGNMENT = GLenum::GL_UNPACK_ALIGNMENT;
static const GLenum GL_UNPACK_IMAGE_HEIGHT = GLenum::GL_UNPACK_IMAGE_HEIGHT;
static const GLenum GL_UNPACK_LSB_FIRST = GLenum::GL_UNPACK_LSB_FIRST;
static const GLenum GL_UNPACK_ROW_LENGTH = GLenum::GL_UNPACK_ROW_LENGTH;
static const GLenum GL_UNPACK_SKIP_IMAGES = GLenum::GL_UNPACK_SKIP_IMAGES;
static const GLenum GL_UNPACK_SKIP_PIXELS = GLenum::GL_UNPACK_SKIP_PIXELS;
static const GLenum GL_UNPACK_SKIP_ROWS = GLenum::GL_UNPACK_SKIP_ROWS;
static const GLenum GL_UNPACK_SWAP_BYTES = GLenum::GL_UNPACK_SWAP_BYTES;
static const GLenum GL_UNSIGNALED = GLenum::GL_UNSIGNALED;
static const GLenum GL_UNSIGNED_BYTE = GLenum::GL_UNSIGNED_BYTE;
static const GLenum GL_UNSIGNED_BYTE_2_3_3_REV = GLenum::GL_UNSIGNED_BYTE_2_3_3_REV;
static const GLenum GL_UNSIGNED_BYTE_3_3_2 = GLenum::GL_UNSIGNED_BYTE_3_3_2;
static const GLenum GL_UNSIGNED_INT = GLenum::GL_UNSIGNED_INT;
static const GLenum GL_UNSIGNED_INT_10F_11F_11F_REV = GLenum::GL_UNSIGNED_INT_10F_11F_11F_REV;
static const GLenum GL_UNSIGNED_INT_10_10_10_2 = GLenum::GL_UNSIGNED_INT_10_10_10_2;
static const GLenum GL_UNSIGNED_INT_24_8 = GLenum::GL_UNSIGNED_INT_24_8;
static const GLenum GL_UNSIGNED_INT_2_10_10_10_REV = GLenum::GL_UNSIGNED_INT_2_10_10_10_REV;
static const GLenum GL_UNSIGNED_INT_5_9_9_9_REV = GLenum::GL_UNSIGNED_INT_5_9_9_9_REV;
static const GLenum GL_UNSIGNED_INT_8_8_8_8 = GLenum::GL_UNSIGNED_INT_8_8_8_8;
static const GLenum GL_UNSIGNED_INT_8_8_8_8_REV = GLenum::GL_UNSIGNED_INT_8_8_8_8_REV;
static const GLenum GL_UNSIGNED_INT_SAMPLER_1D = GLenum::GL_UNSIGNED_INT_SAMPLER_1D;
static const GLenum GL_UNSIGNED_INT_SAMPLER_1D_ARRAY = GLenum::GL_UNSIGNED_INT_SAMPLER_1D_ARRAY;
static const GLenum GL_UNSIGNED_INT_SAMPLER_2D = GLenum::GL_UNSIGNED_INT_SAMPLER_2D;
static const GLenum GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = GLenum::GL_UNSIGNED_INT_SAMPLER_2D_ARRAY;
static const GLenum GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE = GLenum::GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE;
static const GLenum GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY = GLenum::GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY;
static const GLenum GL_UNSIGNED_INT_SAMPLER_2D_RECT = GLenum::GL_UNSIGNED_INT_SAMPLER_2D_RECT;
static const GLenum GL_UNSIGNED_INT_SAMPLER_3D = GLenum::GL_UNSIGNED_INT_SAMPLER_3D;
static const GLenum GL_UNSIGNED_INT_SAMPLER_BUFFER = GLenum::GL_UNSIGNED_INT_SAMPLER_BUFFER;
static const GLenum GL_UNSIGNED_INT_SAMPLER_CUBE = GLenum::GL_UNSIGNED_INT_SAMPLER_CUBE;
static const GLenum GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY = GLenum::GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY;
static const GLenum GL_UNSIGNED_INT_VEC2 = GLenum::GL_UNSIGNED_INT_VEC2;
static const GLenum GL_UNSIGNED_INT_VEC3 = GLenum::GL_UNSIGNED_INT_VEC3;
static const GLenum GL_UNSIGNED_INT_VEC4 = GLenum::GL_UNSIGNED_INT_VEC4;
static const GLenum GL_UNSIGNED_NORMALIZED = GLenum::GL_UNSIGNED_NORMALIZED;
static const GLenum GL_UNSIGNED_SHORT = GLenum::GL_UNSIGNED_SHORT;
static const GLenum GL_UNSIGNED_SHORT_1_5_5_5_REV = GLenum::GL_UNSIGNED_SHORT_1_5_5_5_REV;
static const GLenum GL_UNSIGNED_SHORT_4_4_4_4 = GLenum::GL_UNSIGNED_SHORT_4_4_4_4;
static const GLenum GL_UNSIGNED_SHORT_4_4_4_4_REV = GLenum::GL_UNSIGNED_SHORT_4_4_4_4_REV;
static const GLenum GL_UNSIGNED_SHORT_5_5_5_1 = GLenum::GL_UNSIGNED_SHORT_5_5_5_1;
static const GLenum GL_UNSIGNED_SHORT_5_6_5 = GLenum::GL_UNSIGNED_SHORT_5_6_5;
static const GLenum GL_UNSIGNED_SHORT_5_6_5_REV = GLenum::GL_UNSIGNED_SHORT_5_6_5_REV;
static const GLenum GL_UPPER_LEFT = GLenum::GL_UPPER_LEFT;
static const GLenum GL_VALIDATE_STATUS = GLenum::GL_VALIDATE_STATUS;
static const GLenum GL_VENDOR = GLenum::GL_VENDOR;
static const GLenum GL_VERSION = GLenum::GL_VERSION;
static const GLenum GL_VERSION_ES_CL_1_0 = GLenum::GL_VERSION_ES_CL_1_0;
static const GLenum GL_VERSION_ES_CL_1_1 = GLenum::GL_VERSION_ES_CL_1_1;
static const GLenum GL_VERSION_ES_CM_1_1 = GLenum::GL_VERSION_ES_CM_1_1;
static const GLenum GL_VERTEX_ARRAY_BINDING = GLenum::GL_VERTEX_ARRAY_BINDING;
static const GLenum GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = GLenum::GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING;
static const GLenum GL_VERTEX_ATTRIB_ARRAY_DIVISOR = GLenum::GL_VERTEX_ATTRIB_ARRAY_DIVISOR;
static const GLenum GL_VERTEX_ATTRIB_ARRAY_ENABLED = GLenum::GL_VERTEX_ATTRIB_ARRAY_ENABLED;
static const GLenum GL_VERTEX_ATTRIB_ARRAY_INTEGER = GLenum::GL_VERTEX_ATTRIB_ARRAY_INTEGER;
static const GLenum GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = GLenum::GL_VERTEX_ATTRIB_ARRAY_NORMALIZED;
static const GLenum GL_VERTEX_ATTRIB_ARRAY_POINTER = GLenum::GL_VERTEX_ATTRIB_ARRAY_POINTER;
static const GLenum GL_VERTEX_ATTRIB_ARRAY_SIZE = GLenum::GL_VERTEX_ATTRIB_ARRAY_SIZE;
static const GLenum GL_VERTEX_ATTRIB_ARRAY_STRIDE = GLenum::GL_VERTEX_ATTRIB_ARRAY_STRIDE;
static const GLenum GL_VERTEX_ATTRIB_ARRAY_TYPE = GLenum::GL_VERTEX_ATTRIB_ARRAY_TYPE;
static const GLenum GL_VERTEX_PROGRAM_POINT_SIZE = GLenum::GL_VERTEX_PROGRAM_POINT_SIZE;
static const GLenum GL_VERTEX_SHADER = GLenum::GL_VERTEX_SHADER;
static const GLenum GL_VIEWPORT = GLenum::GL_VIEWPORT;
static const GLenum GL_WAIT_FAILED = GLenum::GL_WAIT_FAILED;
static const GLenum GL_WRITE_ONLY = GLenum::GL_WRITE_ONLY;
static const GLenum GL_XOR = GLenum::GL_XOR;
static const GLenum GL_ZERO = GLenum::GL_ZERO;

} // namespace gl40core
