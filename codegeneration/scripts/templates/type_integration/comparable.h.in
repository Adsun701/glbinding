
namespace gl
{

GLBINDING_API bool operator==(const %t & a, std::underlying_type<%t>::type b);
GLBINDING_API bool operator!=(const %t & a, std::underlying_type<%t>::type b);
GLBINDING_API bool operator< (const %t & a, std::underlying_type<%t>::type b);
GLBINDING_API bool operator<=(const %t & a, std::underlying_type<%t>::type b);
GLBINDING_API bool operator> (const %t & a, std::underlying_type<%t>::type b);
GLBINDING_API bool operator>=(const %t & a, std::underlying_type<%t>::type b);

GLBINDING_API bool operator==(std::underlying_type<%t>::type a, const %t & b);
GLBINDING_API bool operator!=(std::underlying_type<%t>::type a, const %t & b);
GLBINDING_API bool operator< (std::underlying_type<%t>::type a, const %t & b);
GLBINDING_API bool operator<=(std::underlying_type<%t>::type a, const %t & b);
GLBINDING_API bool operator> (std::underlying_type<%t>::type a, const %t & b);
GLBINDING_API bool operator>=(std::underlying_type<%t>::type a, const %t & b);

} // namespace gl
